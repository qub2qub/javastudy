In short, I see all the little details that support all the high-level decisions. 
They form a continuous fabric that defines the shape of the system.
You can’t have one without the other; indeed, no clear dividing line separates them. There is simply a continuum of decisions from the highest to the lowest levels.

THE GOAL OF SOFTWARE ARCHITECTURE IS TO MINIMIZE THE HUMAN RESOURCES REQUIRED TO BUILD AND MAINTAIN THE REQUIRED SYSTEM.

The measure of design quality is simply the measure of the effort required to meet the needs of the customer. If that effort is low, and stays low throughout the lifetime of the system, the design is good. If that effort grows with each new release, the design is bad. 

THE SIGNATURE OF A MESS
What you are looking at is the signature of a mess. When systems are thrown together in a hurry, when the sheer number of programmers is the sole driver of output, and when little or no thought is given to the cleanliness of the code or the structure of the design, then you can bank on riding this curve to its ugly end.

From the developers’ point of view, this is tremendously frustrating, because everyone is working hard. Nobody has decreased their effort.

And yet, despite all their heroics, overtime, and dedication, they simply aren’t getting much of anything done anymore. 

All their effort has been diverted away from features and is now consumed with managing the mess. 