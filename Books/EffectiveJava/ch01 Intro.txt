The language supports four kinds of types: 
1 interfaces (including annotations), 
2 classes (including enums), 
3 arrays, 
4 primitives. 
The first three are known as reference types. 
Class instances and arrays are objects; 
primitive values are not. 

A class’s members consist of its fields, methods, member classes, and member interfaces. 
A method’s signature consists of its name and the types of its formal parameters; the signature does not include the method’s return type.

__уточнить что входит в сигнатуру?
Definition: Two of the components of a method declaration comprise the method signature — THE METHOD'S NAME AND THE PARAMETER TYPES.
Например, calculateAnswer(double, int, double, double)


The term exported API, or simply API, refers to the classes, interfaces, constructors, members, and serialized forms by which a programmer accesses a class, interface, or package. 
(The term API, which is short for application programming interface, is used in preference to the otherwise preferable term interface to avoid confusion with the language construct of that name.) 
A programmer who writes a program that uses an API is referred to as a user of the API. A class whose implementation uses an API is a client of the API.

Classes, interfaces, constructors, members, and serialized forms are collectively known as API elements. An exported API consists of the API elements that are accessible outside of the package that defines the API. 

Loosely speaking, the exported API of a package consists of the public and protected members and constructors of every public class or interface in the package.

