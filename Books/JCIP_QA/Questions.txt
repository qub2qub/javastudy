CH_1
Is there multithreading on 1 core? Examples?
Several motivating factors that allowed multiple programs to execute simultaneously?
What are benefits of threads?
What are risks of threads?
Safety hazards? (ordering of operations in multiple threads is unpredictable and sometimes surprising)
Liveness hazards? (permanently unable to make forward progress)
Liveness failures examples? ( Explain: deadlock, starvation, livelock)
Performance hazards? (Why: poor service time, responsiveness, throughput, resource consumption, or scalability)

CH_2
What is thread safety?
When you are asked to write a thread-safe code - what are the main concerns?
What is object's state?
What is shared variable?
What is mutable variable?
Whether an object needs to be thread-safe?
Is a thread-safe program one that is constructed entirely of thread-safe classes? 
What is thread-safe class?
Which objects are thread-safe: statefull or stateless?
When it is absolutely required to synchronize access to the variable?
What is race conditions?
The most common types of race conditions?
What is data race?
What is atomic operation?
What is compound action?
What is a built-in locking mechanism for enforcing atomicity?
What is synchronized block (consists of what)? 
What is "acquire" a lock?
What is "release" a lock?
What is MUTEXES = mutual exclusion locks ?
What is atomicity?
What is reentrancy?
Why we need a re-entrant lock?
How to synchronize a compound action?
What data needs to be guarded by locks?
What if a class has invariants that involve more than one state variable?
What is invariant?

CH_3
What is stale data and when it's possible, how to fix?
What is OUT-OF-THIN-AIR safety; to which variable applies; exceptions?
Can you use volatile for debit & credit operations?
Locking is not just about mutual exclusion, what is the other aspect? (memory visibility)
What is volatile variables?
Does volatile guarantee safe increment and decrement?
What is the common use of volatile variables?
What is Publishing (1,2,3,4)?
What is escaped object?
What is alien method?
How to get instance of enclosed class from inner class?
When "this" references escapes during construction?
if the publication is the last statement in the constructor is it OK?
When "this" references escapes (1,2) ?
What is Thread confinement? Examples: swing or connection from the pool
What is Ad-hoc thread confinement
What is Stack confinement
What is ThreadLocal
What is immutable objects & Immutability? guarantee of initialization safety?
May an object whose fields are all final be mutable?
What is Final fields
Опасно ли использовать volatile для >2 несинхронизированных операций?
What is publication? Safe publication? 
How to safely publish any objects
What is Safe publication idioms (1,2,3,4)
What is Порядок загрузки\инициализации полей в классе?
Если неизменяемый объ был Safe published - надо ли ис-ть синхронизацию при работе с ним.
What is effectively immutable objects? Какие могут быть недостатки при использовании таких объектов?
В чём выгода использоваться Effectively immutable objects? (simplify development and improve performance by reducing the need for synchronization)
What does safe publication guarantee for mutable objects?
What the publication requirements for an object depend on?

CH_4
What is SYNCHRONIZATION POLICY 
Что значит сделать класс thread-safe ?
Что такое пространство состояния [state space]?
What is 
What is operations' POSTCONDITIONS
What is 
What is State-dependent operations ?
Что такое State ownership и в чём выражается в классе? OWNERSHIP AND ENCAPSULATION go together
What is "SHARED OWNERSHIP"/ Пример для "split ownership" ?
Что такое instance confinement?
What is 
What is 
Пример private constructor capture idiom ?
What is 

What is 