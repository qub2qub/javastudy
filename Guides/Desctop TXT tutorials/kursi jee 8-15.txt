Урок 8.1 - JAX-WS soap web service
01.55 - настройка в xml файлах
13.30 - web services: JAX-RS И JAX-WS
JAX-WS набор спецификаций который обеспечивают следующее взаимодействие:
есть 2 системы, с1 и с2, с1 на java, c2 - на php, и могут быть установлены на разных ОС, и стоить задача как-то их связать. jcp.org - сайт со спецификациями.
Java API for XML - Web Services.
спецификация полагает, что вы можете пользоваться разными протоколами для передачи сообщения.
самый популярный вариант передачи по HTTP/SOAP(XML)
SOAP - это тот протокол, с помощью которого передаются сообщения.

21.25 - важно согласовать дейсвия двух сторон, поэтому ис-ся soap, т.к. это стандарт/спецификация.  
23.20 - например мы на стороне сервера. мы должны отдать некий xml. 
как сгенерить этот xml? если классов например 200 или 1000.
а другая сторона (с2-php), ей тоже придёт этот большой xml, она должна его как-то распознать. Те же 1000 сущностей распознать. это большая работа.
поэтому, в большинтве платформ есть механизмы, кот-е упрощают этот процесс.
28.35 - должно быть описание этого вебсервиса. это WSDL (XML+XSD). Web Service Definition Language.
Кто-то его должен написать: либо руками, либо сгенерить автоматически.
в Java сгенерить wsdl можно на основе класса.
33.30 - СМОТРИМ WSDL, у сервиса нужно указать имя и  один или несколько портов.
для порта указываем на каком языке будут передаваться сообщения, и binding для порта (binding указывает какой будет транспорт)
Далее указываем какие будут операции у этого binding.
Порт ссылается на portType (это типа интерфейса в java).
в одном wsdl может быть несколько сервисов, несколько биндингов, несколько портов, несколько типов портов и т.п.
Сообщения могут состоять из нескольких частей (part), 
Из этого wsdl можно сгенерить классы для обоих частей с1 и с2 (клиента и сервера).
49.00 - как сгенерить классы из wsdl. wsgen - wsimport и jdk/bin.
1.05.0 - ссылка на wsdl погоды http://www.webservicex.com/globalweather.asmx?WSDL
1.8.0 - пример soapUI прога
1.19.10 - ответ веб сервиса обёрнут в CDATA
1.22.0 - установим и запустим наш веб сервис EAR
1.34.0 - не удалось подключиться к сервису по урлу.
**********************************
Урок 8.2 - JAX-WS soap web service and spring integration
08.30 - задеплоили и проверили работу из soupUI.
09.45 - доп. плагин для клиента к soap web service
23.15 - посмотрим wsdl на основе класса: WSGEN
32.00 - написать свой wsdl, сделать сервер на аннотациях, поискать пример соап сервисов в инете, поюзать soapUI.
40.33 - spring integration.
42.05 - что это такое? Когда используем spring context - то мы там прописываем объекты, задаём им св-ва и парамерты, а spring создаёт нам эти классы и мы ими потом пользуемся.
spring integration позволяет съинтегрировать разные системы. Но не просто создать какие-то объекты, но также и описать те действия, которые будут происходить с этими объектами.
Т.е. переносим в XML (spring context) также и логику взаимодействия. 
45.00 - описываем входные точки: inbound и outbound адаптеры. например, входной адаптер будет ws soap, а на выходе будет вызов другого ws (спринг сделает вызов всех методов в адаптерах сам? или мы настрим).
есть куча готовых адаптеров: jax-ws, JMS, email.. (см докуменацию)
51.45 - и между адаптерами можно реализовать различную логику на spring. можем фильтр добавить, можем распараллелить обработку.
1.0.0 - схема работы примера integration.
каналы - это стрелочки, а обработчики - это прямоугольники.
1.3.30 - откуда приходит входная инфа? bean transformer входит в spring. "payload" - это ссылка на тело сообщения.
возможный вызываемый метод зависит от типа объекта, который придёт на вход. в данном случае речь о Spring.
1.5.50 - идея в low coupling, мы не знаем откуда и куда это сообщение пришло/уйдёт.
service-activator - тоже спец компонент spring integration, с помощью которго мы можем вызвать наш обработчик. в параментах задать ref на bean и вызываемый из него метод.
1.8.40 - посылаем сообщения в канал ассинхронно и там они как-то обрабатываются.

**********************************
Урок 9.1 - хрень про spring-integrations
1.20 - spring-integrations про фильтры
2.10 - 2-й пример фильтр - filter channel, второй - output channel
8.10 - 3-й пример, роутер
spring integration ис-ся когда можно разделить например входящие сообщения по коду сообщения, и например напривить каждое сообщение в свой канал для обработки.
17.30 - 4-й пример splitter.
22.15 - 5-й агрегатор
... и всякая такая же хрень
*******************************
Урок 9.2 - хрень про spring-integrations  и похожую хрень от apache mix.
23.0 - пример про osgi контейнер.
30.30 - пошла хрень.
35.12 - начало EJB
************
10.1 stateless ejb local remote
10.2 stateful war ejb n transactions
11.1 херь про ejb, потом про servlet
1:15:00 - начнём с сервлетов и jsp
11.2 сервлет
