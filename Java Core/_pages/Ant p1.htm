<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>Ant p1</title>
<link rel="stylesheet" href="grey.css">
</head>
<body>

<h3>
<ul>
<li><b style="font-family: arial, helvetica, sans-serif;">Что такое Apache Ant?</b></li>
</ul>
</h3>
Apache
 Ant - это основанный на Java набор инструментов для сборки приложений. 
Большое преимущество Ant в его платформонезависимости. Все инструкции 
командной строки, используемые для развертывания приложения, 
представляются простыми XML-элементами. Ant можно использовать на любой 
операционной системе, на которой работает Java. Ant, в отличие от 
другого сборщика проектов Apache Maven, обеспечивает императивную, а не 
декларативную сборку проекта.<br>
<br>
<h3>
<ul>
<li>Как начать использовать ant?</li>
</ul>
</h3>
Это очень просто.<br>
<ul>
<li>Загрузите последнюю версию ant из Apache. Распакуйте в папку на Вашей машине.<a name="more"></a></li>
<li>Установите Java SDK (последнюю версию).</li>
<li>Пропишите переменные окружения, JAVA_HOME и ANT_HOME.</li>
<li>Добавте в Path %JAVA_HOME%/bin;%ANT_HOME%/bin в Windows, или ${JAVA_HOME}/bin:${ANT_HOME}/bin в UNIX.</li>
<li>Напишите "Hello world" build.xml</li>
</ul>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-zIc8hAUHoh0/V6F9NlCxHYI/AAAAAAAABAQ/2YegOA0lDhomYbzM0Jk-Y04_TQxTbuwUwCLcB/s1600/q002_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="Ant%20p1_files/q002_p01.jpg" height="126" border="0" width="640"></a></div>
<ul>
<li>В каталоге где расположен build.xml в командной строке введите ant.</li>
</ul>
<br>
<h3>
<ul>
<li><b>Для чего нужен build.xml, из чего он состоит?</b></li>
</ul>
</h3>
build.xml
 - файл сборки, данный файл обычно называют сценарии сборки, он должен 
находиться в базовой директории проекта (однако не существует никаких 
ограничений на имя файла или его расположение).<br>
Файл
 build.xml содержит внутри себя корневой элемент project, наполнением 
которого являются элементы, относящиеся к одному из следующих понятий:<br>
<ul>
<li>Цели (Targets)</li>
<li>Задачи (Tasks)</li>
<li>Ресурсы (Resources)</li>
<li>Свойства (Properties)</li>
</ul>
Каждый
 build-файл содержит один проект (project) и хотя бы одну цель (target).
 Цель содержит задачи (tasks), задачи могут использовать для своей 
работы отдельные ресурсы (resources) (например, файл) или коллекцию 
ресурсов (множество файлов). Кроме целей, задач и ресурсов есть свойства
 (properties). К свойствам можно относится как к переменным, а точнее 
константам. У свойства есть имя и значение в виде строки. Значение 
свойства устанавливается один раз и любая попытка изменить это значение 
игнорируется.<br>
&nbsp;Каждая
 задача, встречающаяся в build-файле, может иметь id атрибут и может 
быть позже вызвана по нему. Идентификаторы должны быть уникальными. 
Здесь можно привести аналогию с языком программирования, где цель - это 
функция, а задача - это операция. Между целями можно проставлять 
зависимости, что позволяет определить порядок вызова.<br>
Ant
 позволяет задавать глобальные переменные, которые можно использовать в 
любом месте проекта. Необходимо запомнить одно правило, значения 
переменной можно задавать один раз.<br>
<br>
<h3>
<ul>
<li>Напишите команду чтобы запустить процесс сборки, из командной строки.</li>
</ul>
</h3>
Откройте
 командную строку и перейти в каталог где расположен файл build.xml. 
Введите в "ant" или "ant -f build.xml", чтобы начать процесс сборки.<br>
&nbsp;Если
 ви назвали свой файл по-другому, к примеру, "mybuild.xml", то для 
запуска задач из этого файла всегда нужно будет указывать его название 
"ant -f mybuild.xml".<br>
<br>
<h3>
<ul>
<li>Что вы знаете о теге Project.</li>
</ul>
</h3>
Все XML-элементы файла должны быть размещены внутри тега &lt;project&gt;&lt;/project&gt;.<br>
Тег project имеет три атрибута:<br>
<ul>
<li>name &nbsp;- имя проекта, этот атрибут не обязателен.</li>
<li>default
 - цель по умолчанию, которая будет использоваться, если явно не 
указанно, какую цель выполнять, это обязательный атрибут.</li>
<li>basedir
 - основная директория, из которой будут выходить все пути, 
использующиеся при работе (если она не указана, то будет использоваться 
текущая директория, в которой находится build-файл), этот атрибут не 
обязателен.</li>
</ul>
Каждый
 проект содержит одну или несколько целей. Цель представляет собой набор
 задач, которые необходимо выполнить. При запуске Ant можно выбрать 
цель, которую(ые) следует выполнить. Если цель не указывать, будет 
выполнена установленная по умолчанию.<br>
<br>
<h3>
<ul>
<li><b style="font-family: arial, helvetica, sans-serif;">Что вы знаете о теге Target.</b></li>
</ul>
</h3>
В
 файле build.xml должно быть хотя бы одно задание (цель). Задания могут 
зависеть от других заданий. Например, имеются два задания: для 
компиляции и для изъятия файлов с базы данных. Соответственно 
скомпилировать файлы можно только после того, как они будут извлечены. 
Ant учитывает такие зависимости.<br>
Target имеет следующие атрибуты:<br>
<ul>
<li>name - имя цели, это обязательный атрибут.</li>
<li>depends - разделённый запятыми список имён целей, от которых эта цель зависит, этот атрибут не обязателен.&nbsp;</li>
<li>if - имя параметра, который должен быть установлен, чтобы эта цель выполнялась, это не обязательный атрибут.</li>
<li>unless - имя параметра, который не должен быть установлен, чтобы эта цель выполнялась, этот атрибут не обязателен.</li>
<li>description - небольшое описание функции function цели, это не обязательный атрибут.</li>
<li>extensionOf - добавляет текущую цель в список зависимостей extension-point, это не обязательный атрибут.</li>
<li>onMissingExtensionPoint
 - что делать, если эта цель пытается расширить отсутствующею в 
extension-point списоке. Не допускается, если extensionOf не 
присутствует. это не обязательный атрибут.</li>
</ul>
Если
 не установлены if и unless атрибуты, цель будет выполняться всегда. 
Опциональный атрибут description может быть использован как описание 
цели и будет выводиться при команде - projecthelp.<br>
<br>
<h3>
<ul>
<li>В каком порядке выполняются цели объявление в атрибуте depends?</li>
</ul>
</h3>
Следует
 отметить, что depends-атрибут Ant только обозначает порядок, в котором 
цели должны быть выполнены. Ant пробует выполнить цели в порядке, 
соответствующем порядку их появления в атрибуте depends (слева направо).
 Пример:<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-7N9LdHGs6vU/V6F9ZhnbwbI/AAAAAAAABAU/1r5b8rMkQ0Uu2xt1gXYvnp9ixe9s2h8eQCLcB/s1600/q007_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="Ant%20p1_files/q007_p01.jpg" height="82" border="0" width="640"></a></div>
Пусть
 нужно выполнить цель D. Из её атрибута depends можно узнать, что первой
 выполнится цель C, затем B и, наконец, A. Неверно: C зависит от B, a B 
зависит от A, таким образом, первой выполнится цель A, затем B, потом C,
 а после D.<br>
Цель будет исполнена только один раз, даже если более чем одна цель зависит от неё.<br>
<br>
<h3>
<ul>
<li>Что вы знаете о теге Property.</li>
</ul>
</h3>
Свойства
 в Ant задаются с помощью тега &lt;property&gt;. Свойства очень похожи 
на константы в языках программирования: задав один раз, вы больше не 
сможете поменять их во время исполнения сценария. Обращаться к свойствам
 следует через конструкцию ${property_name}. Свойства можно задавать не 
только внутри &lt;project&gt;, но и внутри &lt;target&gt;.<br>
Установка
 значения может происходить в самом файле build.xml или во внешнем 
properties-файле, что очень удобно и позволяет менять процесс сборки не 
изменяя build.xml.<br>
<br>
<h3>
<ul>
<li>Являются ли имена свойств чувствительными к регистру?</li>
</ul>
</h3>
Да.<br>
<br>
<h3>
<ul>
<li>Как использовать ant-contrib задачи?</li>
</ul>
</h3>
Просто
 скопируйте ant-contrib.jar &nbsp;в ваш ant*/lib каталог, и добавьте эту
 строку в ваш &nbsp;ant-скрипт, все ant-contrib задачи теперь будут 
доступны для вас.<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-3k6-u0FQHng/V6F9iCi14vI/AAAAAAAABAY/Km8Ql4YJRJ44exXPoEOiuVNk-9V-v4OvACLcB/s1600/q010_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="Ant%20p1_files/q010_p01.jpg" height="24" border="0" width="640"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<ul>
<li>Какие символы разделители используются в path-like структурах в ant?</li>
</ul>
</h3>
Можно
 определить типы ссылок path и classpath, используя как «:» 
(unix-style), так и «;» (windows-style) как разделитель символов. Ant 
скорректирует их в требуемые текущей операционной системой.<br>
<br>
<h3>
<ul>
<li>Как установить classpath в ant скрипт?</li>
</ul>
</h3>
Следующий фрагмент кода демонстрирует как установить classpath в ant:<br>
<div class="separator" style="clear: both; text-align: center;">
</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-5hBKauNHonA/V6F913UZC-I/AAAAAAAABAg/zZCA39gF7pIn-vVjoi6d4IQKvwyH-DN2QCLcB/s1600/q012_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="Ant%20p1_files/q012_p02.jpg" height="310" border="0" width="640"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<ul>
<li>Расскажите о задачах в ant.</li>
</ul>
</h3>
Задачи представляют действия, которые могут осуществляться с какими-либо ресурсами или без их участия.<br>
Ниже приведу простейшие примеры использования задач.<br>
<ul>
<li>Создание каталога:</li>
</ul>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-NKoZjJNp28w/V6F97ZlFquI/AAAAAAAABAo/N57yfV3gbkolG8SyI_utMzr3yMl5bRpxACLcB/s1600/q013_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="Ant%20p1_files/q013_p01.jpg" height="28" border="0" width="640"></a></div>
<ul>
<li>Копирование файла:</li>
</ul>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-FtCetjnpMGA/V6F-EF5AqzI/AAAAAAAABAs/2L-y7BeV-uoo7UF90lSXbjlOEPvfvNXxgCLcB/s1600/q013_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="Ant%20p1_files/q013_p02.jpg" height="24" border="0" width="640"></a></div>
<ul>
<li>Компиляция файлов с кодом java:</li>
</ul>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-xY3mlEChKvQ/V6F-KPseeaI/AAAAAAAABAw/83UNEFnuF4kGHSWqubbEMIAzevxZ9l4hACLcB/s1600/q013_p03.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="Ant%20p1_files/q013_p03.jpg" height="20" border="0" width="640"></a></div>
<div class="MsoNormal" style="margin-bottom: 0.0001pt; text-indent: 14.2pt;">
Иногда
 для выполнения некоторых задач хватает лишь указания правильных 
атрибутов, но кроме этого внутри тега задачи могут находиться и 
вложенные элементы, которые, могут описывать ресурсы с которыми 
необходимо работать задаче. <o:p></o:p></div>
<div class="MsoNormal" style="margin-bottom: 0.0001pt; text-indent: 14.2pt;">
Ant
 предоставляет слишком много задач, чтобы дать полное описание того, что
 каждая из них делает. Следующий список дает представление о категориях,
 на которые можно разделить все задачи:</div>
<ul>
<li>Archive Tasks</li>
<li>Audit/Coverage Tasks</li>
<li>Compile Tasks</li>
<li>Deployment Tasks</li>
<li>Documentation Tasks</li>
<li>EJB Tasks</li>
<li>Execution Tasks</li>
<li>File Tasks</li>
<li>Java2 Extensions Tasks</li>
<li>Logging Tasks</li>
<li>Mail Tasks</li>
<li>Miscellaneous Tasks</li>
<li>Pre-process Tasks</li>
<li>Property Tasks</li>
<li>Remote Tasks</li>
<li>SCM Tasks</li>
<li>Testing Tasks</li>
</ul>
<br>
<ul>
</ul>

<div>
<h3>
<a href="https://jsehelper.blogspot.nl/2016/08/apache-ant-2.html">Apache Ant (часть 2).</a></h3>
</div>

</body></html>