<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>JSON p1</title>
<link rel="stylesheet" href="../../Guides/grey.css">
</head>
<body>

<h3>
<ul>
<li>Что такое JSON?</li>
</ul>
</h3>
<div>
JSON
 (JavaScript Object Notation) - простой формат обмена данными, удобный 
для чтения и написания как человеком, так и компьютером. Он основан 
&nbsp;на JavaScript. JSON - текстовый формат, полностью независимый от 
языка реализации, но он использует соглашения, знакомые программистам 
C-подобных языков, таких как C, C++, C#, Java, JavaScript, Perl, Python и
 многих других. Эти свойства делают JSON идеальным языком обмена 
данными.</div>
<div>
</div>
<div>
<br></div>
<h3>
<ul>
<li>Что такое JSON Schema?</li>
</ul>
</h3>
<div>
JSON
 Schema - это стандарт описания структур данных в формате JSON. 
Использует синтаксис JSON. Схемы, описанные этим стандартом, имеют MIME 
"application/schema+json". Стандарт удобен для использования при 
валидации и документировании структур данных, состоящих из чисел, строк,
 массивов и структур типа ключ-значение.<br>
<a name="more"></a></div>
<div>
</div>
<div>
<br></div>
<h3>
<ul>
<li>Что такое JSON объект?</li>
</ul>
</h3>
<div>
JSON
 объект - неупорядоченный набор пар ключ/значение. Объект начинается с {
 (открывающей фигурной скобки) и заканчивается } (закрывающей фигурной 
скобкой). Каждое имя сопровождается : (двоеточием), пары ключ/значение 
разделяются , (запятой).</div>
<div>
</div>
<div>
<br></div>
<h3>
<ul>
<li>Какие есть правила синтаксиса JSON объекта (массива)? Приведите пример объекта JSON?</li>
</ul>
</h3>
<div>
Есть несколько основных правил для создания строки JSON:</div>
<div>
</div>
<ul>
<li>Строка JSON содержит либо массив значений, либо объект (ассоциативный массив пар имя/значение).</li>
<li>Массив заключается в квадратные скобки ([ и ]) и содержит разделенный запятой список значений.</li>
<li>Объект заключается в фигурные скобки ({ и }) и содержит разделенный запятой список пар имя/значение.</li>
<li>Пара имя/значение состоит из имени поля, заключенного в двойные кавычки, за которым следует двоеточие (:) и значение поля.</li>
</ul>
<div>
Чтобы включить 
двойные кавычки в строку, нужно использовать обратную косую черту: \". 
Так же, как и во многих языках программирования, можно помещать 
управляющие символы и шестнадцатеричные коды в строку, предваряя их 
обратной косой чертой.&nbsp;</div>
<div>
Ниже приводится пример оформления заказа в формате JSON:</div>
<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-dlT6M0-6eNE/VxUTOjH9DAI/AAAAAAAAAlw/J4uPghqdvrcE0yZopaTT7N0xAuMEHMW7ACLcB/s1600/q004_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q004_p01.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<div>

</div>
<h3 style="text-align: left;">
<ul style="text-align: left;">
<li>Какие типы данных, поддерживаются в JSON?</li>
</ul>
</h3>
<div>
Значение в массиве или объекте может быть:</div>
<div>
</div>
<ul>
<li>Числом (целым или с плавающей точкой)</li>
<li>Строкой (в двойных кавычках)</li>
<li>Логическим значением (true или false)</li>
<li>Другим массивом (заключенным в квадратные скобки)</li>
<li>Другой объект (заключенный в фигурные скобки)</li>
<li>Значение null&nbsp;</li>
</ul>
<div style="text-align: left;">
<div>
<br></div>
</div>
<h3>
<ul>
<li>Каковы недостатки JSON?</li>
</ul>
</h3>
<div>
Недостатками JSON являются:</div>
<div>
</div>
<ul>
<li>трудно читается и анализируется пользователем, нет визуальности.</li>
<li>нет синтаксиса для задания типа объекта.</li>
<li>много синтаксического мусора.&nbsp;</li>
</ul>
<div style="text-align: left;">
<div>
<br></div>
</div>
<h3>
<ul>
<li>Что такое JSONP?</li>
</ul>
</h3>
<div>
JSONP или "JSON
 with padding" является расширением JSON, позволяющим выполнять в 
единообразном стиле асинхронные запросы к сервисам, расположенным на 
другом домене - операцию, запрещённую в типичных веб-браузерах из-за 
политики ограничения домена.</div>
<div>
</div>
<div>
<div>
<br></div>
</div>
<div>
<h3>
<ul>
<li>Какое расширение JSON-файла?</li>
</ul>
</h3>
</div>
<div>
.json</div>
<div>
</div>
<div>
<div>
<br></div>
</div>
<div>
<h3>
<ul>
<li>Какой MIME-тип в JSON?</li>
</ul>
</h3>
</div>
<div>
"application/json"&nbsp;<br>
<br></div>
<h3>
<ul>
<li>Для чего используется JSON?</li>
</ul>
</h3>
<div>
Наиболее частое
 распространенное использование JSON - пересылка данных между сервером и
 браузером, а так же для хранения данных. Обычно данные JSON 
доставляются с помощью AJAX, который позволяет обмениваться данными 
браузеру и серверу без необходимости перезагружать страницу.</div>
<div>
</div>
<div>
<div>
<br></div>
</div>
<h3>
<ul>
<li>Какие преимущества использования JSON?</li>
</ul>
</h3>
<div>
Сравнительные преимущества JSON:</div>
<div>
</div>
<ul>
<li>В разы меньший объем данных (экономия трафика, плюс к скорости работы сайта)</li>
<li>Меньшая загрузка процессора и клиента, и сервера</li>
<li>Почти неограниченные возможности расширения (т.к. можно выполнить ф-цию)</li>
<li>Его предложения легко читаются и составляются как человеком, так и компьютером.</li>
<li>Его
 легко преобразовать в структуру данных для большинства языков 
программирования (числа, строки, логические переменные, массивы и так 
далее)</li>
<li>Многие языки программирования имеют функции и библиотеки для чтения и создания структур JSON.&nbsp;</li>
</ul>
<div>
<br></div>
<h3>
<ul>
<li>Какие браузеры поддерживают JSON?</li>
</ul>
</h3>
<div>
Поддержка JSON включена в такие браузеры начиная с:</div>
<div>
</div>
<ul>
<li>Firefox (Mozilla) 3.5+</li>
<li>Internet Explorer 8+</li>
<li>Chrome</li>
<li>Opera 10+</li>
<li>Safari 4+&nbsp;</li>
</ul>
<div style="text-align: left;">
<div>
<br></div>
</div>
<div>
<h3>
<ul style="text-align: left;">
<li>Какая функция используется для преобразования текста JSON в объект?</li>
</ul>
</h3>
</div>
<div>
Чтобы преобразовать текст JSON в объект используется функция "eval()".</div>
<div>
<br></div>
<div>
</div>
<h3>
<ul>
<li>Что такое JSON Parser?</li>
</ul>
</h3>
Вызов
 JSON.parse(str) превратит строку с данными в формате JSON в 
JavaScript-объект/массив/значение, возможно с преобразованием 
получаемого в процессе разбора значения.<br>
<div>
<br></div>
<h3>
<ul>
<li>Что такое JSON-RPC?</li>
</ul>
</h3>
<div>
JSON-RPC(сокр. 
от англ. JavaScript Object Notation Remote Procedure Call - JSON-вызов 
удалённых процедур) - протокол удалённого вызова процедур, использующий 
JSON для кодирования сообщений. Это очень простой протокол (очень 
похожий на XML-RPC), определяющий только несколько типов данных и 
команд. JSON-RPC поддерживает уведомления (информация, отправляемая на 
сервер, не требует ответа) и множественные вызовы.</div>
<div>
<br></div>
<h3>
<ul>
<li>Что такое JSON-RPC-Java?</li>
</ul>
</h3>
<div>
JSON-RPC-Java - &nbsp;ето реализация протокола JSON-RPC на Java.</div>
<div>
<br></div>
<h3>
<ul>
<li>Какова роль JSON.stringify?</li>
</ul>
</h3>
<div>
Метод 
JSON.stringify() преобразует объекты JavaScript в строку в формате JSON,
 возможно с заменой значений, если указана функция замены, или с 
включением только определённых свойств, если указан массив замены. 
Используется, когда нужно из JavaScript передать данные по сети.</div>
<div>
<br></div>
<h3>
<ul>
<li>Как создать JSON из массива PHP?</li>
</ul>
</h3>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-zalqet0OLk8/VxUVYwdDZgI/AAAAAAAAAl8/t9F6ndIRJ_EInW2xQDCYkN-ny2nEJ2V3ACLcB/s1600/q018_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q018_p01.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<ul>
<li>Как получить PHP массив из JSON объекта?</li>
</ul>
</h3>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-zvMawhDG5dA/VxUV-VEvdDI/AAAAAAAAAmA/LWCVV4AhE54Q3zO_ZoQz9pYZxwtURS02wCLcB/s1600/q019_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q019_p01.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<ul>
<li>Как парсить JSON в JQuery?</li>
</ul>
</h3>
<div>
Для парсинга JSON в JQuery мы используем метод $.parseJSON() которий конвертирует строку с JSON-данными в javascript-объект.</div>
<div>
Простой пример:</div>
<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-W-55qumOj_U/VxUWUM4DErI/AAAAAAAAAmE/FcOhFN3Wd4AquMe7l76wY_TKHgh-uQubgCLcB/s1600/q020_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q020_p01.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: center;">
</div>
<div>
<br></div>
<h3>
<ul>
<li>Какая функция используется для кодирования JSON в PHP?</li>
</ul>
</h3>
<div>
Для
 кодирования JSON в PHP используется функция json_encode(). Возвращает 
JSON закодированную строку (string) в случае успеха и false в случае 
неудачи.</div>
<div>
Замечание:</div>
<div>
В случае ошибки кодирования, можно использовать json_last_error() для определения точной ошибки.</div>
<div>
<br></div>
<h3>
<ul>
<li>Как парсить JSON в JavaScript?</li>
</ul>
</h3>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-SrRFOVqkwlw/VxUWqnkRfyI/AAAAAAAAAmI/XV3wfJgLKYAVMQvfGx-Vc1z6uTtb8QwMgCLcB/s1600/q022_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q022_p01.jpg" border="0"></a></div>
<div>
<br></div>
<h3>
<ul>
<li>Как создать JSON объект из JavaScript?</li>
</ul>
</h3>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-jkKSidPbPSs/VxUXDMYd71I/AAAAAAAAAmM/0v4fynPvXPIFoA7WD6P-dwFHdp1UDLCRQCLcB/s1600/q023_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q023_p01.jpg" border="0"></a></div>
<div>
<br></div>
<h3>
<ul>
<li>Валидациия JSON в PHP?</li>
</ul>
</h3>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-K4anqS7yeRo/VxUXW3uR9HI/AAAAAAAAAmU/iMobwvFyWQsPLajX4w3dp4GcwVMJtRf2QCLcB/s1600/q024_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q024_p01.jpg" border="0"></a></div>
<div>
<br></div>
<h3>
<ul>
<li>Валидациия JSON в javascript?</li>
</ul>
</h3>
<div>
</div>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-IkxrEwoe7rY/VxUXmgwezUI/AAAAAAAAAmY/WoGY77BDR-cLG8Cb53-CQroODEbj7KGhgCLcB/s1600/q025_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q025_p01.jpg" border="0"></a></div>
<div>
<br></div>
<h3>
<ul>
<li>Валидациия JSON в jQuery?</li>
</ul>
</h3>
<div>
</div>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-grfJ6YHE0y4/VxUX3NBiO-I/AAAAAAAAAmc/pWXi7vwreHwCfF-brgKleKhMDjocllOBgCLcB/s1600/q026_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q026_p01.jpg" border="0"></a></div>
<div>
<br></div>
<h3>
<ul>
<li>Как получить JSON ответ в Ajax?</li>
</ul>
</h3>
<div>
</div>
<div>
Простой пример:</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-_i24rYhdkYw/VxUYHEn42MI/AAAAAAAAAmg/7f4k9qSWbh0i6oJvpHqJtG34N1Urqn4zACLcB/s1600/q027_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JSON%20p1_files/q027_p01.jpg" border="0"></a></div>

</body></html>