<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>JavaScript p1</title>
<link rel="stylesheet" href="grey.css">
</head>
<body>

<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как переадресовать страницу в JavaScript?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-yc8X_EaRoD0/V1EQqY-zjgI/AAAAAAAAA0Y/Jll7Gfp6RZ8t1hu3ZJMyu5Bv6xJClG7hwCLcB/s1600/q001_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q001_p01.jpg" height="65" border="0" width="640"></a></div>
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Сколько параметров можно передать функции?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Сколько угодно.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Нужно алертом вывести какое-то сообщение, спустя 3 секунды после запуска скрипта. Как это сделать?<a name="more"></a></span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><span class="Apple-tab-span" style="white-space: pre;"> </span>Так:</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; white-space: pre;"> &nbsp;</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-WrW7uDNu2nU/V9GC55GvMdI/AAAAAAAABEk/P3xHMoaNYrw8nnT5vmLuFLt8oi_vsVMzACLcB/s1600/q003_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q003_p01.jpg" height="27" border="0" width="640"></a></div>
</div>
<div style="text-align: justify;">
<span class="Apple-tab-span" style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; white-space: pre;"> </span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Или так:</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-rCnjxu8h1yM/V1ERgOpZ2ZI/AAAAAAAAA0s/vaqeDcPnWko5bH9sCgkPskG6zO1dBrlqQCLcB/s1600/q003_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q003_p02.jpg" height="28" border="0" width="640"></a></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Чем отличается наследование в JavaScript от наследования в PHP?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 отличие от PHP, где наследование можно делать одним способом, в 
JavaScript таких способов много. На уровне языка реализовано 
наследование на прототипах.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 JavaScript каждый объект может иметь ассоциацию с другим объектом - так
 называемый "прототип" (prototype). В случае, если поиск некоторого 
свойства (или метода) в исходном объекте заканчивается неудачно, 
интерпретатор пытается найти одноименное свойство (метод) в его 
прототипе, затем - в прототипе прототипа и т. д. К примеру, если мы 
затребовали обращение к obj.prop (или, что абсолютно то же самое, 
obj['prop']), JavaScript начнет искать свойство prop в самом объекте 
obj, затем – в прототипе obj, прототипе прототипа obj, и так до конца.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Приведи пример наследования в JavaScript.</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Например, пусть объект "cat" наследуется от объекта "animal".&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В наследовании на прототипах это реализуется как ссылка</span></div>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-OwpCE6J2Mig/V1ESVnlkREI/AAAAAAAAA04/GXZXIuXZL4YCjLC_vsw--1LK6LVuPbecgCLcB/s1600/q005_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q005_p01.jpg" height="26" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Или вот чуть более развернутый пример. MyType наследуется от Obj:</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-bAs1n-Yo95A/V1EUnUErn0I/AAAAAAAAA1I/X-NYWY09PUMtOeZQa_RbY3rbI5BZfSqrgCLcB/s1600/q005_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q005_p02.jpg" height="144" border="0" width="640"></a></div>
<br></div>
<div style="text-align: justify;">
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Пара слов об объектах в JavaScript?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Объекты
 (они же - ассоциативные массивы, хэши) и работа с ними в JavaScript 
реализованы не так, как в большинстве языков. Объект в JavaScript 
представляет собой обычный ассоциативный массив или, иначе говоря, 
"хэш". Он хранит любые соответствия "ключ =&gt; значение" и имеет 
несколько стандартных методов.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что представляет из себя метод объекта в JavaScript?</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Метод объекта в JavaScript - это просто функция, которая добавлена в ассоциативный массив.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Зачем в JavaScript перед переменной писать var?</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Если создавать переменную через обычное присваивание - будет создана "глобальная переменная".&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Пример:</span></div>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-7Jph6GAZ8qQ/V1EVFUvjXEI/AAAAAAAAA1Q/XZXyZDCCp_AEp7ulxvWid4biycnTD8fBgCLcB/s1600/q008_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q008_p01.jpg" height="26" border="0" width="640"></a></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Если
 создавать переменную с использованием слова var, тогда будет создана 
"локальная переменная", которая перестаёт существовать после завершения 
работы функции.&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Пример:</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-bNsM_JyNOJY/V1EVdZv90UI/AAAAAAAAA1c/LPpB5XryYAkDxjQ0LR0fgXpeuJjzurlBwCLcB/s1600/q008_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q008_p02.jpg" height="28" border="0" width="640"></a></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Есть две функции:&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">function f(a,b) { return a+b }&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">и&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">var f = function(a,b) { return a+b }.&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Есть ли между ними разница? Если есть то какая?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Есть,
 разница в видимости функции. Вариант функции без var виден везде в 
текущей области видимости. В том числе и до самого определения функции. 
Вариант с var присваивает функцию переменной, поэтому такая функция 
видна только после определения.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как создать массив в JavaScript?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вот несколько способов.</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-fejzCjeA-6E/V1EWR2_iJ6I/AAAAAAAAA1o/vz8DM_qXGukOsBm-MVW913d0dRz7nvXrgCLcB/s1600/q010_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q010_p01.jpg" height="86" border="0" width="640"></a></div>
<br></div>
<div style="text-align: justify;">
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Можно ли в JavaScript использовать функцию в качестве конструктора?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вот так:</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-Zd8MT7-HAGY/V1EYz6z7vyI/AAAAAAAAA14/18JiVVye0rkhA9C6e80YsDKal0_Q-QkdwCLcB/s1600/q011_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q011_p01.jpg" height="84" border="0" width="640"></a></div>
<br></div>
<div style="text-align: justify;">
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Сколько и какие конструкции для циклов есть в JavaScript?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Три: for, while и do...while.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что cделает код: break mark; ?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Выйдет из текущего блока цикла или switch на метку "</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; font-size: 18.72px; font-weight: bold;">mark</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">".</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Можно ли задать массив таким образом: var a = "a,b".split(',')?</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Да, можно.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что выведет alert(typeof null); ?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Выведет сообщение "object".</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">А это: alert(null instanceof Object); ?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Выведет сообщение "false".</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">0.1 + 0.2 == 0.3 ?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Нет,
 т.к. вычисленное значение будет равно 0.30000000000000004. Это действие
 точности вычислений и проявляется она не только в JavaScript.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что выведет alert(typeof NaN); ?</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">"Number"</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что выведет alert(NaN === NaN); ?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">"false"</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В чём различие свойств innerHTML и outerHTML?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Свойство
 любого DOM элемента innerHTML содержит HTML код, который находится 
внутри этого элемента. При установке нового значения этого свойства, 
внутренний HTML код рендерится браузером заново.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">outerHTML почти аналогичен innerHTML, разница в том, что он возвращает полный HTML элемента.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Также,
 важно отметить, что innerHTML поддерживается всеми современными 
браузерами, а outerHTML поддерживается в IE (с некоторыми отличиями от 
остальных браузеров), в последних версиях Opera, и в браузерах на основе
 последних WebKit (Safari, Chrome), но не поддерживается в Firefox.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для кода:</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-lzAYrHsVMww/V1EZMUZSonI/AAAAAAAAA2A/lpZW9Kj1VjEhXbN8il8FCY2dqrc8A2HbACLcB/s1600/q020_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q020_p01.jpg" height="82" border="0" width="640"></a></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">innerHTML возвратит:</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-y5BAOVtJlGU/V1EZiw3bhqI/AAAAAAAAA2M/TRALCc1qbQ4iFEMUbawq0D27_3UJH0jvACLcB/s1600/q020_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q020_p02.jpg" height="26" border="0" width="640"></a></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">outerHTML возвратит:</span></div>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-yz55UIBatUc/V1EZ9bzUHKI/AAAAAAAAA2Y/nvgHc8lGFGMtt7_qK1b_h2vipEb87JZTQCLcB/s1600/q020_p03.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/q020_p03.jpg" height="26" border="0" width="640"></a></div>
<br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<h3 style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какая разница между операторами == и ===?</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span></div>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Оператор
 == сравнивает на равенство, а вот ===&nbsp;сравнивает&nbsp;на 
идентичность. Плюс оператора&nbsp;=== состоит в том, что он не приводит 
два значения к одному типу. Именно из-за этого он обычно и используется.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div>
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В чем разница между Object.getOwnPropertyNames() и Object.keys()?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Object.getOwnPropertyNames() возвращает перечислимые и не перечислимые свойства из объекта или массива.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-kyryrsRS2I4/VvDbu1MikKI/AAAAAAAAAZc/an3yAcnVXJEWu3GBpnOsRGYpq67AuaCAw/s1600/Object.getOwnPropertyNames%2528%2529.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/Object_002.jpg" height="107" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><span style="text-align: justify;"> </span> <span style="text-align: justify;">Object.keys() возвращает перечислимые свойства из объекта или массива.</span></span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-7sGHvbgj0BQ/VvDb_a1pzZI/AAAAAAAAAZg/iwq7ZFMz0ZUSuBb9tjFnZMgIE57ra78Xg/s1600/Object.keys%2528%2529.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/Object.jpg" height="122" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><br>
<h4 style="text-align: left;">
<ul style="text-align: left;">
<li style="text-align: justify;"><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">С помощью какой конструкции языка можно управлять потоком выполнения скрипта и отслеживать ошибки?</span></li>
</ul>
</h4>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Это возможно с помощью конструкции try{}... catch{}</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-yzgAqaF5c1I/VvDcUs--OTI/AAAAAAAAAZo/FnD8ChykGq40k3GWBuUzK-QLZNq_GBOcA/s1600/try_catch.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/try_catch.jpg" height="170" border="0" width="640"></a></div>
<div style="text-align: justify;">
<br></div>
<h3>
<ul style="text-align: left;">
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;">Почему вызов a(); происходит успешно, а вызов b(); выдает ошибку?</span></li>
</ul>
</h3>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-vTEpmEmzvyo/VvDchDqwO_I/AAAAAAAAAZs/qp8h2g-KF8shPhkgx-SU1Nl9yijl8Qogg/s1600/a%2528%2529.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/a2829.jpg" height="182" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Функция
 а() инициализируется на этапе загрузки скрипта, как бы "всплывает 
вверх" а функция б инициализируется, когда объявляется переменная b</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div>
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое глобальные переменные ? Как они создаются ? Какие проблемы связаны с использованием глобальных переменных?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Глобальная
 переменная - переменная, которая доступна (видима) во всем документе, в
 отличии от локальной (ограничена рамками блока программного кода, 
внутри которого она определена)</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-ci6H9fHzsX4/VvDczx7H4nI/AAAAAAAAAZ0/I-M90-bBLhcI4byJPdoQ-E4CdZg3J1TVA/s1600/myvar.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/myvar.jpg" height="86" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Большинство
 JavaScript разработчиков избегает использования глобальных переменных. 
Одна из причин - возможный конфликт имен глобальных и локальных 
переменных. Так же код использующий глобальные переменные может быть 
тяжелее сопровождать и тестировать.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div>
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое замыкания (closure) в JavaScript?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Простыми словами это внутренняя функция, т.е. функция в функции.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Замыканием
 (closure) называют потому, что после выполнения родительской или 
внешней функции, код внутренней все еще "живет" в интерпретаторе, и его 
можно выполнить. Ошибок не возникнет даже если внутренняя функция 
(замыкание) будет использовать переменные из внешней функции.&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Например, эту особенность можно использовать для создания функций обработчиков событий:</span></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-VoBTylP0Cs8/VvDdP6N1vCI/AAAAAAAAAaA/StT6Ehw9h2g6kl-mYPQMWUfk1j_CfqgAA/s1600/closure.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/closure.jpg" height="110" border="0" width="640"></a></div>
<div style="text-align: justify;">
<br></div>
<h3 style="text-align: left;">
<ul style="text-align: left;">
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;">Напишите функцию принимающую строку с именем файла и возвращающую расширение (фрагмент после последней точки).</span></li>
</ul>
</h3>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-gRwRgwJ04n4/VvDdeYEM6QI/AAAAAAAAAaE/AT5iR-OA4CcvNeGMyKco_rh9Epd_BFXLw/s1600/getExtension.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/getExtension.jpg" height="76" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><br>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что вернет выражение +new Date()? Чем отличается от Date.now().</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ответ
 в том, что +new Date(); создаст экземпляр объекта Date и благодаря + 
переведет его в числовой формат. Во втором случае вызовется статический 
метод конструктора, который является более приоритетным, т.к. во-первых 
он не требует создания экземпляра, а во-вторых является более понятным.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div>
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какое значение возвращает данное предложение ~~3.14?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ответ: 3</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div>
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какое значение возвращает данное предложение?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">"i'm a lasagna hog".split("").reverse().join("");</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ответ: "goh angasal a m’i"</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br>
</span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что покажут эти два alert?</span></li>
</ul>
</h3>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-UkCMe6OTO4I/VvDdzsaF4AI/AAAAAAAAAaM/p3bBK6-CGYkBLKnBI81Bidnym1jjaOxBA/s1600/two_alerts.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/two_alerts.jpg" height="116" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ответ: "Hello World" и ReferenceError: bar is not defined</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br>
</span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Чему равно foo.length?</span></li>
</ul>
</h3>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-rxq4Itozu-I/VvDeAutqNVI/AAAAAAAAAaU/Fv0FfArn4NYRcFZFCdFF1-dYmg7-esMVQ/s1600/foo.length.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p1_files/foo.jpg" height="68" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ответ: 2</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br>
</span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое prototype в javascript?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 общих чертах prototype - это свойство позволяющее добавлять уже 
существующим объектам свойства, также используется для эмуляции 
наследования классов в JavaScript. Подробный ответ написан здесь . Еще 
как вариант, можно упомянуть о Prototype.js. Это популярная библиотека 
добавляющая удобные ООП возможности в программы на JavaScript-е.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br>
</span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие способы навешивания обработчиков событий вы знаете ?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">События можно добавлять тремя способами:&nbsp;</span></div>
<div style="text-align: justify;">
</div>
<ul>
<li style="text-align: justify;"><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">htmlElement.onclick = function(event) { .... } - так можно добавить только один обработчик&nbsp;</span></li>
<li style="text-align: justify;"><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">htmlElement.addEventListener( "click", ... ) - так можно навесить несколько обработчиков, сохраняет порядок обработчиков&nbsp;</span></li>
<li style="text-align: justify;"><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">htmlElement.attachEvent(
 "on"+имя_события, обработчик) - тоже можно навесить несколько, не 
сохраняет порядок обработчиков, нет доступа к элементу на котором 
сработало событие.</span></li>
</ul>
<span style="font-family: arial, helvetica, sans-serif;"><br></span><h3 style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><a href="https://jsehelper.blogspot.nl/2016/04/javascript-2.html">Основы JavaScript (часть 2).</a></span></h3>
<ul>
</ul>



</body></html>