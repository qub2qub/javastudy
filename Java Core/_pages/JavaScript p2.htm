<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>JavaScript p2</title>
</head>
<body>

<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Eсть ли разница между window и document?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Да.
 У JavaScript есть глобальный объект и всё происходит через него. window
 - тот самый объект, который хранит глобальные переменные, функции, 
местоположение, историю. Всё находится внутри него, setTimeout, 
XMLHttpRequest, console и localStorage также являются частью window.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Аналогично
 дело обстоит и с document, который является свойством объекта window и 
представляет DOM. Все ноды - это часть document, следовательно, вы 
можете использовать getElementById или addEventListener для document. Но
 обратите внимание, что этих методов нет в объекте window.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-yyJ6BCuraao/VvIqmq6MZ2I/AAAAAAAAAas/3tl9QYMM69EwntP-SgahalwucqUOpN94w/s1600/window.document.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/window.jpg" height="51" border="0" width="640"></a></div>
<br>
<div style="text-align: justify;">
<h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вызываются ли document.onload и window.onload одновременно?<a name="more"></a></span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">window.onload
 вызывается, когда DOM готов и весь контент, включая картинки, стили, 
фреймы и т.д. загружен. document.onload вызывается когда дерево DOM 
выстроено, но до момента, как подгружаются картинки, стили и пр.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">document.readyState
 возвращает "loading" пока документ грузится, "interactive" - когда 
завершился парсинг, но продолжается загрузка дополнительных ресурсов, и 
"complete" когда всё загружено. Событие readystatechange вызывается для 
объекта document когда это значение изменяется.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как остановить дальнейшее распространение события?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вызвать event.stopPropagation();</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Назовите различные пути для получения элемента из DOM дерева?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вы можете использовать следующие методы document:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getElementById для получения одного элемента, которому соответствует указанный ID.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getElementsByClassName для получения nodeList (nodeList это не массив, это скорее массиво-подобный объект) по названию класса.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getElementsByTagName для получения nodeList по имени тэга.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">querySelector
 вы можете указывать селекторы в виде css стилей (аля jquery) и данный 
метод вернёт первый элемент из DOM соответствующий запросу.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">querySelectorAll
 вернёт список не "живых" nodeList. Не "живые" значит, что любые 
изменения (добавление, удаления в DOM) после выборки элементов не будут 
отражены в результатах поиска.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getElementsByName возвращает список элементов returns the list of elements by the provided name of the html tag</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getElementsByTagNameNS возвращает элементы с определённым названием тэга в пространстве имён.</span></li>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какой наибыстрейший метод для получения элемента через css селектор?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Это
 зависит от того, что вам нужно найти. Если у вас есть ID элемента, то 
getElementById - это самый быстрый путь для получения элемента. Однако, 
вам не следует содержать много ID в вашем документе, чтобы избежать 
заучивания стилей. getElementsByClassName - это второй по скорости метод
 для получения элемента.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вот список упорядоченный по скорости выборки элементов, начиная с наибыстрейшего:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">ID (#myID)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Класс (.myClass)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Тэг (div, p)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Элемент, находящийся рядом (sibling) (div+p, div~p)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Прямой потомок (div &gt; p)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Все потомки (div p)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Универсальный (*)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Атрибут (input[type="checkbox"])</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Псевдо-элемент (p:first-child)</span></li>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Если у вас невероятно длинный селектор для получения элемента, подумайте, быть может, лучше использовать вместо него класс?</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Могу ли я удалить удалить обработчик события с элемента?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Да. target.removeEventListener('click', handler)</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Почему querySelectorAll('.my-class') медленнее, чем getElementsByClassName('my-class')?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">querySelectorAll
 является универсальным методом. Он оптимизирован под различные типы 
селекторов. Если вы просто укажите имя класса с ".", внутри он будет 
использовать getElementsByClassName (может меняться в зависимости от 
браузера).</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 то же время, если вы будете напрямую использовать 
getElementsByClassName, то понятно, что этому методу не нужно проходить 
через все внутренние процессы, в отличии от querySelectorAll. 
Следовательно, для поиска &nbsp;элемента с конкретным именем класса, 
getElementsByClassName будет быстрее, чем querySelectorAll.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Почему я не могу использовать forEach или похожий метод массива для NodeList?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Да, и массив и nodeList имеет параметр length и вы можете использовать цикл для прохода по элементам, но не всё так просто.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Оба
 они унаследованы от Object. Однако, массив имеет иной прототип нежели, 
чем nodeList. forEach, map, и пр. включены в array.prototype, которого 
не существуют для NodeList.prototype объекта. Следовательно, вы не 
можете использовать forEach для nodeList.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-zMHa-eeYHfw/VvIq7-SetbI/AAAAAAAAAaw/l90YQrAY1eIS5ivkoozkHnXlqHxw339FA/s1600/forEach_for_nodeList.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/forEach_for_nodeList.jpg" height="41" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;">Для
 решения этой проблемы можно пропустить nodeList через цикл и делать 
всё, что пожелаете внутри цикла. Или вызвать метод для конвертации 
nodeList в массив. После этого у вас будет доступ ко всем методам из 
array.prototype.</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-UvmILhEhpiw/VvIrOU8_XyI/AAAAAAAAAa4/ieDxlklbZV0PKGPJuVIiWUSbQ9CpOYyIw/s1600/array.prototype.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/array.jpg" height="133" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><br>
<div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Если вам необходимо реализовать getElementByAttribute, как вы будете это делать?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Во-первых,
 получить все элементы из DOM. Это можно сделать используя 
getElementsByTagName с параметром '*' и затем проверить имеют ли они 
нужные атрибуты. В этом случае, даже если атрибут равен null, он будет 
захвачен. Если вам нужно проверить значение, вам следует добавить один 
дополнительный параметр и сравнивать с ним в блоке с IF.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-xZtsmJxs4-Q/VvIrjEefd8I/AAAAAAAAAbA/C6Zwi4wKtSUKgXOWmD3r17RjLJgBP8XQA/s1600/getElementsByTagName.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/getElementsByTagName.jpg" height="236" border="0" width="640"></a></div>
<div style="text-align: justify;">
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как бы вы добавили класс к элементу через селектор?</span></li>
</ul>
</h3>
</div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;">Очень просто. Просто получите элемент и добавьте имя класса в classlist.</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-RrWGiPb1jKM/VvIr1nLyUxI/AAAAAAAAAbE/RJ1OKtXnBIAUUjQcjp4woQK_kL7nRur0A/s1600/add_classname.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/add_classname.jpg" height="144" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Кроме того, вы можете реализовать методы removeClass, toggleClass и hasClass:</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-oq6ux0QEGIs/VvIsGGk-jMI/AAAAAAAAAbM/myUhWUk7QJcbreY7DS_GMiXy00tXY74Ew/s1600/add_classname_for_ie9.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/add_classname_for_ie9.jpg" height="80" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><br>
<div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как я могу запустить обработчик в фазе захвата, а не в фазе всплытия?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 методах addEventListener и removeEventLister есть третий опциональный 
параметр. Вы можете установить его в true или false в зависимости от 
того хотите или нет использовать фазу захвата.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как проверить, что один элемент является дочерним другому?</span></li>
</ul>
</h3>
</div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;">Первое, проверьте является ли указанный родитель прямым для ребенка. Если нет, продолжайте двигаться вверх по дереву.</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;"></span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-Qp_1mePbw78/VvIst55krSI/AAAAAAAAAbU/4nit9qzdAfIW64rCyaL6BakRw8dWYpaeA/s1600/isDescendant.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/isDescendant.jpg" height="220" border="0" width="640"></a></div>
<div style="text-align: justify;">
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какой метод больше всего подходит для создания DOM элемента? Что лучше innerHTML или createElement?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Когда
 вы устанавливаете свойство innerHTML, браузер удаляет всех "детей" из 
элемента. Затем парсит строку и вставляет её в элемент как потомка. 
Например, если вы хотите добавить элемент списка к несортированному 
списку, вы можете получить элемент и задать ему innerHTML:</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-wCWyXjAf-1c/VvIs-BUeqUI/AAAAAAAAAbc/8wswU3ruD30APXQ6njCTcgH3DZTI83-qg/s1600/innerHTML.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/innerHTML.jpg" height="88" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">innerHTML
 может быть медленным при парсинге строки. Браузер вынужден иметь дело 
со строкой даже если вы задали ему невалидный html.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">С
 другой стороны, пока вы используете appendChild, вы создаёте новый 
элемент. С момента его создания, браузеру не нужно парсить строку и 
иметь дело с невалидным html. И вы можете указать потомка для родителя, 
который будет добавлен к элементу родителя.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-K3y8jCCLcws/VvIwTuyCjmI/AAAAAAAAAbo/TzDmIuRBrlIWurpyvbVrou0otcRNAhgMw/s1600/createElement.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/createElement.jpg" height="100" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Все-таки, лучше написать пару дополнительных строк на JavaScript - это упростит жизнь браузеру и сделает вашу страницу быстрее.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Каким образом можно предотвратить множественный вызов обработчика для одного события?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Если
 слушатель события прикреплён к одному и тому же типу (click, keydown, и
 т.д.) элемента, вы можете вызвать event.stopImmediatePropagation() в 
первом обработчике и другие не будут выполнены.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что делает createDocumentFragment и для чего можно его использовать?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">documentFragment
 - очень легковесная и маленькая штука. Этот метод помогает в тех 
случаях, когда вы производите множество манипуляции с DOM. "Дерганье" 
DOM сотни раз - это дорогое удовольствие, которое может привести к 
вызову reflow. Избегайте частого reflow. Вы можете избежать этого, 
используя documentFragment, что уберегает от использования лишней 
памяти.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-MQRzfPwj__A/VvIwiBTr8wI/AAAAAAAAAbs/b-CJwo38jhUNGiP1dSFy0qiSTybaBPGHg/s1600/createDocumentFragment.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/createDocumentFragment.jpg" height="352" border="0" width="640"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое reflow?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">reflow:
 когда вы меняете размер или позицию элемента на странице, все элементы 
после этого вынуждены изменять свои позиции в соответствии с 
изменениями, сделанными вами. Для примера, если вы меняете высоту 
элемента, то все элементы под ним вынуждены сдвинуться вниз. 
Следовательно, поток элементов на странице изменился и это вызывает 
reflow.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Почему reflow это плохо: перекомпоновка может быть очень дорогой и это может вызвать свистопляску на телефонах и планшетах.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как я могу проверить были событие отменено или нет?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Используйте
 event.cancelable для получения true или false. Однако, вам обязательно 
нужно вызвать preventDefault() для предотвращения события.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><ul>
<li>Какие причины reflow? Как можно уменьшить reflow?</li>
</ul>
</span></h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Причины reflow:</span><br>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">изменение шаблона (геометрия страницы)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">изменения размера окна</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">изменения высоты\ширины любого элемента</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">изменение шрифта</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">перемещение элемента (анимация)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">удаление или добавление стиля</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">калькуляции смещения по высоте или по ширине</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">display: none</span></li>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как этого избежать:</span><br>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">не устанавливайте стили внутри элементов</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">применяйте анимацию к элементам, которые отпозиционированы fixed или absolute</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">избегайте таблиц</span></li>
</ul>
<span style="font-family: arial, helvetica, sans-serif;"><br></span><h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое repaint и когда оно происходит?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">repaint происходит когда вы изменяете вид элемента без изменения размеров. Причины repaint:</span><br>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">изменения цвета фона</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">изменения цвета шрифта</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">visibility: hidden</span></li>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Предпочтительней repaint вместо reflow.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Есть ли что-то такое о чём нужно позаботится при использовании node.cloneNode()?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">При клонировании убедитесь, что вы не дублируете ID.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как быть уверенным в том, что DOM подготовлен и можно выполнять JavaScript, как реализовать $(document).ready?</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Существует четыре различных метода:</span><br>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">вставьте ваш скрипт в конце body элемента. Когда DOM будет готов браузер вызовет ваш script внутри тэга.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">вставьте ваш код внутрь события DOMContentLoaded. Это событие будет вызываться, когда DOM полностью загружен.</span></li>
</ul>
</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-yphhsImPX5w/VvIwzSYdBPI/AAAAAAAAAbw/35f3oBKPUk0divekt4Lxx-XwKatrln9XA/s1600/addEventListener.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/addEventListener.jpg" height="60" border="0" width="640"></a></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Наблюдайте событие в readyState для document. Состояние "complete" будет означать полную загрузку:</span></li>
</ul>
</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-fm-UBROzj0o/VvIxEROcVnI/AAAAAAAAAb4/AWKYTs0qv-AUrSYpc4YqafRP8ifdycS3w/s1600/readyState.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/readyState.jpg" height="102" border="0" width="640"></a></div>
<ul style="text-align: left;">
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;">Найдите
 исходники jQuery и скопируйте функцию dom.ready. В этом случае вы 
будете иметь функцию, которая работает во всех браузерах.</span></li>
</ul>
<span style="font-family: arial, helvetica, sans-serif;"><br></span><div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое всплытие?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для
 понимания "всплытия", вам нужно понять что происходит когда вы кликаете
 где-либо на странице. Предположим, у вас есть таблица с множеством 
колонок и столбцов и вы кликаете в одну из ячеек.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вы
 возможно думаете, что когда вы кликните на ячейку, то браузер будет 
знать что у вас есть обработчик на нажатии на ячейку и он будет вызван 
незамедлительно. Это абсолютно не верно. На самом деле, браузер не знает
 куда вы кликнули. Браузер будет определять местоположение клика 
следующими путями:</span></div>
<div style="text-align: justify;">
<b style="font-family: arial, helvetica, sans-serif;">Захват:</b><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">
 когда вы кликаете, браузер знает, что событие клика произошло. Он 
начинает с window (самый низкий уровень), затем идёт в document, затем 
html тэг, затем body, затем table... Он пытается достичь самого высокого
 уровня элемента, который только возможен. Это зовётся фазой "захвата" 
(первая фаза).</span><br>
<b style="font-family: arial, helvetica, sans-serif;">Цель: </b><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">когда
 браузер достигнет самого элемента на котором был произведен клик, то 
браузер отметит если ли у этого элемента какие-либо прикрепленные 
обработчики. Если ничего нет, то браузер выполнил обработчик клика. Это 
называет фаза цели (вторая фаза).</span><br>
<b style="font-family: arial, helvetica, sans-serif;">Всплытие:</b><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">
 после вызова обработчика, прикрепленного к "td", браузер начнёт своё 
путешествие обратно с window. Уровень за уровнем он будет проверять если
 ли на элементе обработчик на "click" и если обнаружит таковой - 
выполнит. Это и есть стадия всплытия (третья фаза). Заметьте, когда вы 
кликните на ячейку, будут исполнены все обработчики событий на click для
 всех родительских элементов.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как можно уничтожить несколько элементов с одним вызовом click?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Если
 у вас есть список из сотни элементов, которые имеют различные 
обработчики, вы можете написать одну сотню обработчиков событий (аля 
копипаст) с одинаковым кодом в сотне места. Это работает, но если 
понадобится что-то изменить в обработчике, вы будете вынуждены поменять 
это везде.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вторая
 проблема заключается в том, что вы хотите динамически добавлять новые 
элементы и, следовательно, вам нужно быть уверенным в том, что к новому 
элементу был добавлен свой обработчик. Много JavaScript кода!</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ответ:
 В данном случае, как нельзя кстати, нам подойдет всплытие. Вы можете 
навесить только один обработчик на родительский элемент. В нашем примере
 это будет "ul" тэг. После клика по элементу списка (заметьте, элемент 
не имеет обработчика), событие будет всплывать и достигнет элемента 
"ul", который имеет обработчик и об будет исполнен.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-iyi2Nm3SUgA/VvIxfyDfNDI/AAAAAAAAAcA/D26Oga0pIi8-JXEMK9RgtoiEa-AVBnNLA/s1600/delete_several_elements.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/delete_several_elements.jpg" height="142" border="0" width="640"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как предотвратить нажатие по ссылке?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Можно
 return false, можно и event.preventDefault() внутри обработчика 
события. Однако, это не остановит дальнейшее распространение.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Создайте кнопку, которая удаляется при нажатии на неё, и создаются две новые кнопки в этом же месте.</span></li>
</ul>
</h3>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Можно
 решить это добавив обработчик события вместе с кнопкой для удаления и 
добавить новые. Однако, мы можем снизить количество навешиваний событий.
 Если мы добавим обработчик к родительскому элементу вместо кнопки, то у
 нас не будет необходимости добавлять обработчик при каждом создании 
кнопки. Итак, мы будем пользоваться преимуществами всплытия.</span></div>
</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-zTP2LdWGyyc/VvIxvcuyveI/AAAAAAAAAcI/-X2pqB7w1UcJgZ2fUo9GFNScXAkAs-seg/s1600/doubleHolder.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/doubleHolder.jpg" height="286" border="0" width="640"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как отлавливать все нажатия на странице?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Вы можете достичь цели при помощи фазы всплытия, т.к. все события click будут всплывать до элемента body.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-aTi5f4DBxgM/VvIx9urRn3I/AAAAAAAAAcM/XIZxwWNDSc8wH7-RlJnRnsUc1Q7OSeTHQ/s1600/all_click.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/all_click.jpg" height="190" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Однако, если "всплытие" было отменено через stopPropagation() этот код не будет работать.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как получить весь текст на странице?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Самый простой путь получить весь текст - через свойство innerText у body.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-BsILoRWwtKE/VvIyLulWIbI/AAAAAAAAAcU/D41sNABWscICp01sl5axS3KXYUG8hycAQ/s1600/innerText.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="JavaScript%20p2_files/innerText.jpg" height="28" border="0" width="640"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое defer и async?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">обычное
 состояние: когда вы вставляете стандартный тэг script (без defer и 
async), парсер приостанавливает парсинг до того момента, как скрипт 
будет скачан и выполнен.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">defer:
 defer в тэге script отложит выполнение скрипта. Следовательно скрипт 
будет выполнен когда DOM будет доступен. Важный момент, defer не 
поддерживается всеми современными браузерами.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">async:
 скачивание и выполнение скрипта асинхронно. Если это возможно, 
устанавливайте выполнение скрипта в асинхронном режиме, но обратите 
внимание, что async не имеет эффекта на инлайновые скрипты.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие существуют типы нод?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">ELEMENT_NODE (1), TEXT_NODE (3), COMMENT_NODE(8), DOCUMENT_NODE(9), DOCUMENT_TYPE_NODE(10), DOCUMENT_FRAGMENT_NODE(11), и т.д.</span></div>

</body></html>