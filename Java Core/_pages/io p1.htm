<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>io p1</title>
<link rel="stylesheet" href="grey.css">
</head>
<body>
	
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такоє символьная ссылка?</span></li>
</ul>
</h3>

<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Символьная
 ссылка (Symbolic link, симлинк) - специальный файл в файловой системе, 
содержащий только текстовую строку с указателем. Эта строка трактуется 
как путь к файлу, который должен быть открыт при попытке обратиться к 
данному файлу.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какая разница между I/О и NIO?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">I/O
 (input/output, ввод-вывод ) - взаимодействие между обработчиком 
информации и её поставщиком и/или получателем. Ввод - сигнал или данные,
 полученные обработчиком, а вывод - сигнал или данные, посланные им (или
 из него).</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">NIO
 (/*в контексте Java*/ Non-blocking I/O, New I/O) - коллекция прикладных
 программных интерфейсов для языка Java, предназначенных для реализации 
высокопроизводительных операций ввода-вывода. Также встречается </span><br>
<a name="more"></a><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">аббревиатура NIO.2 - она относится к нововведениям относительно этого направления в Java 7.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>

</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие особенности NIO вы знаете?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ключевые особенности NIO:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Каналы
 и селекторы: NIO поддерживает различные типы каналов. Канал является 
абстракцией объектов более низкого уровня файловой системы (например, 
отображенные в памяти файлы и блокировки файлов), что позволяет 
передавать данные с более высокой скоростью. Каналы не блокируются и 
поэтому Java предоставляет еще такие инструменты, как селектор, который 
позволяет выбрать готовый канал для передачи данных, и сокет, который 
является инструментом для блокировки.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Буферы:
 в Java 7 была введена буферизация для всех классов-обёрток примитивов 
(кроме Boolean). Появился абстрактный класс Buffer, который 
предоставляет такие операции, как clear, flip, mark и т.д. Его подклассы
 предоставляют методы для получения и установки данных.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Кодировки: в Java 7 появились кодировки (java.nio.charset), кодеры и декодеры для отображения байт и символов Unicode.</span></li>
</ul>
<ul>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br></div>
<div style="text-align: justify;">
<div>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие существуют виды потоков ввода/вывода?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Потоки
 ввода/вывода используются для передачи данных в файловые потоки, на 
консоль или на сетевые соединения. Существует два вида потоков 
ввода/вывода: байтовые и символьные.</span></div>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-5boKm8RgEjI/Vq4BL8MzB_I/AAAAAAAAAN8/VsFyzmbs6_Q/s1600/input_output_stream.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="io%20p1_files/input_output_stream.jpg" border="0"></a></div>
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Назовите основные классы потоков ввода/вывода.</span></li>
</ul>
</h3>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Байтовые: java.io.InputStream, java.io.OutputStream;</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Символьные: java.io.Reader, java.io.Writer;</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Чем отличаются OutputStream, InputStream,&nbsp;<span style="font-size: 18.72px;">Writer и Reader</span>?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Класс
 OutputStream - это абстрактный класс, определяющий потоковый байтовый 
вывод. В этой категории находятся классы, определяющие, куда 
направляются ваши данные: в массив байтов (но не напрямую в String; 
предполагается что вы сможете создать их из массива байтов), в файл или 
канал.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Базовый класс InputStream представляет классы, которые получают данные из различных источников:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">массив байтов</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">строка (String)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">файл</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">канал (pipe): данные помещаются с одного конца и извлекаются с другого</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">последовательность различных потоков, которые можно объединить в одном потоке</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">другие источники (например, подключение к интернету)</span></li>
</ul>
</div>
<div style="text-align: justify;">
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Символьные
 потоки имеют два основных абстрактных класса Reader и Writer, 
управляющие потоками символов Unicode. Класс Reader - абстрактный класс,
 определяющий символьный потоковый ввод. Класс Writer - абстрактный 
класс, определяющий символьный потоковый вывод. В случае ошибок все 
методы класса передают исключение IOException.</span><br>
<br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div>
<h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие подклассы базового класса InputStream ви знаєте, для чего они предназначены?</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</h3>
</div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Подклассы базового класса InputStream:</span><br>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">StringBufferInputStream - превращает строку (String) во входной поток данных InputStream.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">SequenceInputStream - сливает два или более потока InputStream в единый поток.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PushbackInputStream - входной поток, поддерживающий однобайтовый возврат во входной поток.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PrintStream - выходной поток, включающий методы print() и println().</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PipedInputStream - реализует понятие входного канала.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">ObjectInputStream - входной поток для объектов.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">InputStream - абстрактный класс, описывающий поток ввода.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FilterInputStream
 - абстрактный класс, предоставляющий интерфейс для классов-надстроек, 
которые добавляют к существующим потокам полезные свойства.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FileInputStream - для чтения информации из файла.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">DataInputStream - входной поток, включающий методы для чтения стандартных типов данных Java.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">ByteArrayInputStream - позволяет использовать буфер в памяти (массив байтов) в качестве источника данных для входного потока.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">BufferedInputStream - буферизированный входной поток.</span></li>
</ul>
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что вы знаете о RandomAccessFile?</span></li>
</ul>
</h3>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">RandomAccessFile
 это класс который наследуется напрямую от Object и не наследуется от 
вышеприведенных базовых классов ввода\вывода. Предназначен для работы с 
файлами, поддерживая произвольный доступ к их содержимому.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Работа
 с классом RandomAccessFile напоминает использование совмещенных в одном
 классе потоков DataInputStream и DataOutputStream (они реализуют те же 
интерфейсы DataInput и DataOutput). Кроме того, метод seek() позволяет 
переместиться к определенной позиции и изменить хранящееся там значение.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">При
 использовании RandomAccessFile необходимо знать структуру файла. Класс 
RandomAccessFile содержит методы для чтения и записи примитивов и строк 
UTF-8.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие есть режимы доступа к файлу есть у RandomAccessFile ?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">RandomAccessFile
 может открываться в режиме чтения ("r") или чтения/записи ("rw"). Также
 есть режим "rws", когда файл открывается для операций чтения-записи и 
каждое изменение данных файла немедленно записывается на физическое 
устройство.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие подклассы базового класса OutputStream ви знаєте, для чего они предназначены?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Класс OutputStream - это абстрактный класс, определяющий потоковый байтовый вывод.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 этой категории находятся классы, определяющие, куда направляются ваши 
данные: в массив байтов (но не напрямую в String; предполагается что вы 
сможете создать их из массива байтов), в файл или канал.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Подклассы базового класса OutputStream:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PipedOutputStream - реализует понятие выходного канала.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">ObjectOutputStream - выходной поток для объектов</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FilterOutputStream
 - абстрактный класс, предоставляющий интерфейс для классов-надстроек, 
которые добавляют к существующим потокам полезные свойства.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FileOutputStream - отправка данных в файл на диске. Реализация класса OutputStream.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">DataOutputStream - выходной поток, включающий методы для записи стандартных типов данных Java.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">ByteArrayOutputStream - создает буфер в памяти. Все данные, посылаемые в этот поток, размещаются в созданном буфере.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">BufferedOutputStream - буферизированный выходной поток.</span></li>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для чего используется PushbackInputStream?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Разновидность
 буферизации, обеспечивающая чтение байта с последующим его возвратом в 
поток. Класс PushbackInputStream представляет механизм "заглянуть" во 
входной поток и увидеть, что оттуда поступит в следующий раз, не 
извлекая информации.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">У класса есть дополнительный метод unread().</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для чего используется SequenceInputStream?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Класс
 SequenceInputStream позволяет соединять вместе несколько экземпляров 
класса InputStream. Конструктор принимает в качестве аргумента либо пару
 объектов класса InputStream, либо интерфейс Enumeration.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Во
 время работы класс выполняет запросы на чтение из первого объекта 
класса InputStream и до конца, а затем переключается на второй. При 
использовании интерфейса работа продолжится по всем объектам класса 
InputStream. По достижении конца каждого файла, связанный с ним поток 
закрывается. Закрытие потока, созданного объектом класса 
SequenceInputStream, приводит к закрытию всех открытых потоков.</span><br>
<br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие подклассы базового класса Reader ви знаєте, для чего они предназначены?</span></li>
</ul>
</h3>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"> </span></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Подклассы базового класса Reader:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">StringReader - входной поток, читающий из строки.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Reader - абстрактный класс, описывающий символьный ввод.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PushbackReader - входной поток, позволяющий возвращать символы обратно в поток.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PipedReader - входной канал.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">LineNumberReader - входной поток, подсчитывающий строки.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">InputStreamReader - входной поток, транслирующий байты в символы.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FilterReader - фильтрующий читатель.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FileReader - входной поток, читающий файл.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">CharArrayReader - входной поток, который читает из символьного массива.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">BufferedReader - буферизированный входной символьный поток.</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><a href="https://jsehelper.blogspot.nl/2016/02/java-2.html">Потоки ввода/вывода в java (часть 2).</a></span></h3>
<ul>
</ul>
</div>

</body></html>