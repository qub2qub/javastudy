<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>io p2</title>
<link rel="stylesheet" href="grey.css">
</head>
<body>
	
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие подклассы базового класса Writer ви знаєте, для чего они предназначены?</span></li>
</ul>
</h3>

<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Подклассы базового класса Writer:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Writer - абстрактный класс, описывающий символьный вывод</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">StringWriter - выходной поток, пишущий в строку</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PrintWriter - выходной поток, включающий методы print() и println()</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">PipedWriter - выходной канал</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">OutputStreamWriter - выходной поток, транслирующий байты в символы</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FilterWriter - фильтрующий писатель</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">FileWriter - выходной поток, пишущий в файл</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">CharArrayWriter - выходной поток, который пишет в символьный массив<a name="more"></a></span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">BufferedWriter - буферизированный выходной символьный поток</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что &nbsp;такое абсолютный путь и относительный путь?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Абсолютный
 путь - это путь, который указывает на одно и то же место в файловой 
системе, вне зависимости от текущей директории. Полный путь всегда 
начинается с корневого каталога.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Относительный путь - это путь по отношению к текущему рабочему каталогу.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В каких пакетах лежат классы-потоки?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Стандартный
 классы ввода\вывода в Java лежат в пакете java.io.*. В JDK 7 добавлен 
более современный способ работы с потоками под названием Java NIO или 
Java New IO ети классы лежат в пакете java.nio.*. Для работы с архивами 
используются классы из пакета java.util.*.</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что вы знаете о классах-надстройках?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Классы-настройки ето классы которые добавляют к существующим потокам полезные дополнительные свойства.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Примеры
 классов: BufferedOutputStream, BufferedInputStrem, BufferedWriter , 
BufferedReader - &nbsp;буферезируют поток и повышают производительность.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какой класс-надстройка позволяет читать данные из входного байтового потока в формате примитивных типов данных?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для
 чтения байтовых данных (не строк) применяется класс DataInputStream. В 
этом случае необходимо использовать классы из группы InputStream.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для
 преобразования строки в массив байтов, пригодный для помещения в поток 
ByteArrayInputStream, в классе String предусмотрен метод getBytes(). 
Полученный ByteArrayInputStream представляет собой поток InputStream, 
подходящий для передачи DataInputStream.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">При
 побайтовом чтении символов из форматированного потока DataInputStream 
методом readByte() любое полученное значение будет считаться 
действительным, поэтому возвращаемое значение неприменимо для 
идентификации конца потока. Вместо этого можно использовать метод 
available(), который сообщает, сколько еще осталось символов.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Класс
 DataInputStream позволяет читать элементарные данные из потока через 
интерфейс DataInput, который определяет методы, преобразующие 
элементарные значения в форму последовательности байтов. Такие потоки 
облегчают сохранение в файле двоичных данных.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие классы-надстройки позволяют ускорить чтение/запись за счет использования буфера?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для этого используются классы, позволяющие буферизировать поток:</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">java.io.BufferedInputStream
 - буферизированный входной поток. Конструкторы: 
BufferedInputStream(InputStream in), BufferedInputStream(InputStream in,
 int size).</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">java.io.BufferedOutputStream
 - буферизированный выходной поток. Конструкторы: 
BufferedOutputStream(OutputStream out), 
BufferedOutputStream(OutputStream out, int size).</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">java.io.BufferedReader
 - буферизированный входной символьный поток. Конструкторы: 
BufferedReader(Reader r), BufferedReader(Reader in, int sz).</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">java.io.BufferedWriter
 - буферизированный выходной символьный поток. Конструкторы: 
BufferedWriter(Writer out), BufferedWriter(Writer out, int sz).</span></li>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие классы позволяют преобразовать байтовые потоки в символьные и обратно?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">OutputStreamWriter
 - это мост между классом OutputStream и классом Writer. Символы, 
записанные в поток, преобразовываются в байты.</span></div>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-T99_yEt1bCw/Vq4BY-zQQ6I/AAAAAAAAAOE/IkbM3I-7ziA/s1600/OutputStream_example.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="io%20p2_files/OutputStream_example.jpg" height="132" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">InputStreamReader
 - аналог для чтения. При помощи методов класса Reader читаются байты из
 потока InputStream и далее преобразуются в символы.</span></div>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-qWMY1eQ9gSg/Vq4BdC2oWYI/AAAAAAAAAOM/Ugck__wA1GY/s1600/InputStream_example.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="io%20p2_files/InputStream_example.jpg" height="212" border="0" width="640"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В чем отличие класса PrintWriter от PrintStream?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Прежде
 всего, в классе PrintWriter применен усовершенствованный способ работы с
 символами UNICODE и другой механизм буферизации вывода.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 классе PrintStream буфер вывода сбрасывался всякий раз, когда вызывался
 метод print или println. При использовании класса PrintWriter вы можете
 отказаться от автоматического сброса буферов, выполняя его явным 
образом при помощи метода flush.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В классе PrintWriter предусмотрено два конструктора, позволяющих работать с выходными потоками класса OutputStream:</span><br>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">public PrintWriter(OutputStream out); - создает поток без автоматического сброса буферов.</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">public
 PrintWriter(OutputStream out, boolean autoFlush); - способ сброса 
буферов при использовании второго конструктора зависит от значения 
параметра autoFlush. Если он равен true, автоматический сброс буферов 
выполняется, а если false - нет.</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Набор
 реализаций основных методов print и println класса PrintWriter 
аналогичен набору реализация этих методов класса PrintStream.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Здесь же мы упомянем только методы flush и checkError.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Метод
 flush вызывает принудительный сброс буфера вывода. Если поток 
PrintWriter создан на базе стандартного потока вывода System.out, то 
записанные в него данные появятся на консоли только после выполнения 
сброса буфера (автоматического или сделанного методом flush).</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что же касается метода checkError, то в случае возникновения ошибок он возвращает значение true.</span><br>
<div>
<br></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какой класс предназначен для работы с элементами файловой системы?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 отличие от большинства классов ввода/вывода, класс File работает не с 
потоками, а непосредственно с файлами. Данный класс позволяет получить 
информацию о файле: права доступа, время и дата создания, путь к 
каталогу. А также осуществлять навигацию по иерархиям подкаталогов.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Класс
 java.io.File может представлять имя определённого файла, а также имена 
группы файлов, находящихся в каталоге. Если класс представляет каталог, 
то его метод list() возвращает массив строк с именами всех файлов.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для создания объектов класса File можно использовать один из следующих конструкторов.</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">File(File dir, String name) - указывается объекта класса File (каталог) и имя файла</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">File(String path) - указывается путь к файлу без указания имени файла</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">File(String dirPath, Sring name) - указывается путь к файлу и имя файла</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">File(URI url) - указывается объекта URI, описывающий файл</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какой символ является разделителем при указании пути в файловой системе?</span></li>
</ul>
</h3>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для
 различных систем символ разделителя различается. Вытащить его можно 
используя file.separator, а так же в статическом поле File.separator. 
&nbsp;Для Windows это "\".</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие методы класса File ви знаєте?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">У класса File очень много методов, перечислим некоторые.</span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getAbsolutePath() - абсолютный путь файла, начиная с корня системы. В Android корневым элементом является символ слеша (/)</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">canRead() - доступно для чтения</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">canWrite() - доступно для записи</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">exists() - файл существует или нет</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getName() - возвращает имя файла</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getParent() - возвращает имя родительского каталога</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">getPath() - путь</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">lastModified() - дата последнего изменения</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">isFile() - объект является файлом, а не каталогом</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">isDirectory - объект является каталогом</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">isAbsolute() - возвращает true, если файл имеет абсолютный путь</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">renameTo(File
 newPath) - переименовывает файл. В параметре указывается имя нового 
имени файла. Если переименование прошло неудачно, то возвращается false</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">delete() - удаляет файл. Также можно удалить пустой каталог</span></li>
</ul>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что вы знаете об интерфейсе FileFilter?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Интерфейс
 FileFilter применяется для проверки, попадает ли объект ли объект File 
под некоторое условие. Этот интерфейс содержит единственный метод 
boolean accept(File pathName). Этот метод необходимо переопределить и 
реализовать.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какие классы позволяют архивировать объекты?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">DeflaterOutputStream, InflaterInputStream, ZipInputStream, ZipOutputStream, &nbsp;GZIPInputStream, GZIPOutputStream.</span></div>

</body></html>