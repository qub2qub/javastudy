<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>jQuery p1</title>
<link rel="stylesheet" href="../../Guides/grey.css">
</head>
<body>

<h3>
<ul>
<li>Что такое jQuery?</li>
</ul>
</h3>
jQuery
 - это быстрая, легковесная и многофункциональная JavaScript-библиотека 
(некоторые называют ее фреймворком), фокусирующаяся на взаимодействии 
JavaScript, HTML и CSS, с ее помощью легко сделать анимацию, добавить 
взаимодействие Ajax, манипулировать содержимим страницы, изменить стиль и
 обеспечить крутой UI-эффект. Это одна из самых популярных библиотек на 
стороне клиента. Она обеспечивает кроссбраузерную поддержку приложений 
(работает в Internet Explorer 6.0+, Mozilla Firefox 2+, Safari 3.0+, 
Opera 9.0+ и Chrome). Автор библиотеки Джон Резиг (John Resig) впервые 
представил свое творение в январе 2006.<br>
<br>
<h3>
<ul>
<li>Какие преимущества jQuery?</li>
</ul>
</h3>
Вот только некоторые преимущества jQuery:&nbsp;<br>
<div>
<ul>
<li>Существенно уменьшается количество кода (необходимого для работы скрипта) по сравнению с <a name="more"></a>JavaScript, что в свою очередь означает меньше временных затрат и более читабельный код.</li>
<li>Намного проще понять код (в отличии от JavaScript).&nbsp;</li>
<li>Облегчает манипулирование моделью документа DOM</li>
<li>Множество различных эфектов</li>
<li>Использование Ajax становится намного проще.</li>
<li>Кросс-браузерная совместимость</li>
<li>Огромное количество плагинов, с помощью которых можно сделать практически все что угодно.</li>
<li>Простота использования</li>
<li>Очень удобная документация и активное комьюнити, готовое всегда оказать помощь при необходимости.&nbsp;</li>
</ul>
<br></div>
<h3>
<ul>
<li>Чем отличаются JavaScript от jQuery?</li>
</ul>
</h3>
Javascript
 - это язык программирования, с помощью которого веб-страницам придается
 интерактивность. jQuery это библиотека, написанная на javascript.&nbsp;<br>
<br>
<h3>
<ul>
<li>jQuery это библиотека для написания сценариев на стороне клиента или на стороне сервера?</li>
</ul>
</h3>
На стороне клиента.<br>
<br>
<h3>
<ul>
<li>Является ли jQuery стандартом W3C?</li>
</ul>
</h3>
Нет jQuery не является стандартом W3C.&nbsp;<br>
<br>
<h3>
<ul>
<li>Как начать работать с jQuery?</li>
</ul>
</h3>
Первым
 делом Вам необходимо посетить главную страницу официального сайта 
jQuery и скачать наиболее свежую версию данного фреймворка. После 
необходимо закачать этот файл к себе, и в шапке документа прописать 
ссылку на этот файл.<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-2cImC8vf9qo/VxHIF_41igI/AAAAAAAAAh8/TXp0wus3BQIeK1xHdDDsHQTaUBRK53WwQCLcB/s1600/q006_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q006_p01.jpg" border="0"></a></div>
В
 качестве альтернативы, можно воспользоваться помощью Гугла и поставить 
ссылку на их сервер, где находятся всегда свежие версии любых 
фреймворков.<br>
<div>
<br></div>
<h3>
<ul>
<li>Что является отправной точкой начала выполнения кода в JQuery?</li>
</ul>
</h3>
<div>
Для
 выполнения нашего скрипта в jQuery, нам необходимо поместить весь наш 
скрипт в функцию. Эта функция будет выполнена при полной готовности DOM.
 Отправной точкой является функция $(document).ready(). Пример:</div>
<div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-2NVWXSrjTQ0/VxHI1t9CK5I/AAAAAAAAAiE/RtHskc1Stpw1dPqzUXAqPr9MOkVK8QdrQCLcB/s1600/q007_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q007_p01.jpg" border="0"></a></div>
Объясню что этот код означает.</div>
<div>
$() - это селектор, он позволяет выбрать нужный Вам HTML тег для дальнейшей манипуляции.<br>
Мы выбираем элемент "document" - это основной элемент документа в браузере.<br>
ready() - это событие, оно срабатывает, в нашем случае, когда выбранный элемент "document" будет готов.<br>
Далее мы создаем функцию и вызываем в ней любой JavaScript/JQuery код.&nbsp;<br>
<br>
<h3>
<ul>
<li>Что означает знак доллара ($) в JQuery?</li>
</ul>
</h3>
$()
 - это селектор, он позволяет выбрать нужный Вам HTML тег для дальнейшей
 манипуляции. Также ($) ето псевдоним для JQuery. Простой пример:<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-lFwnZQKflD0/VxHJD-Ku6YI/AAAAAAAAAiI/vzsqIYbfIyEjiOCPeDyjp6ZxSWmUB2DNwCLcB/s1600/q008_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q008_p01.jpg" border="0"></a>&nbsp;</div>
здесь знак $ можно заменить ключевое слово "JQuery".<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-NHIkqDnsyaY/VxHKGDriDXI/AAAAAAAAAiY/GkvAfus7goYgfo4vVLanqFbeKjsMFXj6ACLcB/s1600/q008_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q008_p02.jpg" border="0"></a>&nbsp;</div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<ul>
<li>Можем ли мы иметь несколько функций document.ready() на одной и той же странице?</li>
</ul>
</h3>
Да. Мы можем иметь любое количество функций document.ready() на одной и той же странице.&nbsp;<br>
<br>
<h3>
<ul>
<li>Можем ли мы использовать наш собственный символ вместо знака $ в JQuery?</li>
</ul>
</h3>
Да. Ето вполне возможно, &nbsp;с использованием jQuery.noConflict().&nbsp;<br>
<br>
<h3>
<ul>
<li>Можно ли на стороне клиента использовать другие библиотеки, такие как MooTools, Prototype вместе с JQuery?</li>
</ul>
</h3>
Да.&nbsp;<br>
<br>
<h3>
<ul>
<li>Что такое jQuery.noConflict?</li>
</ul>
</h3>
Этот метод отключает использование $ в качестве переменной jQuery.<br>
jQuery.noConflict( [ removeAll ] )<br>
removeAll
 &nbsp;- ето логическое значение, указывающее, нужно ли освобождать все 
&nbsp;имена переменных, занятые jQuery. По умолчанию false.<br>
Многие
 другие javascript библиотеки, так же как и jQuery используют $ как имя 
переменной или функции. Однако, в случае jQuery, $ является синонимом 
(алиасом) идентификатора jQuery. Поэтому, при освобождении имени $ с 
помощью jQuery.noConflict() мы не теряем функциональности библиотеки 
jQuery, посколько можем использовать вместо него jQuery.<br>
Если
 необходимо использовать другую JavaScript-библиотеку наряду jQuery, мы 
можем отдать контроль над переменной $ другой библиотеке с помощью 
метода $.noConflict():<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-EywdHAsAez4/VxHKfo3BxUI/AAAAAAAAAic/0wgSDdiNMjMA4vOW8CDtHn05bbaMd_mKgCLcB/s1600/q012_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q012_p01.jpg" border="0"></a></div>
Эту технику удобно применить, если использовать сразу несколько библиотек:<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-XyoP9rjzQ70/VxHLDZaIG2I/AAAAAAAAAio/hKBaGuZ_PmoXpMeB204MU0KZcuaEDtgkACLcB/s1600/q012_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q012_p02.jpg" border="0"></a></div>
создаём алиас на jQuery:<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-HzIGAGmqwlk/VxHLIwCHXqI/AAAAAAAAAis/uF8t1FOf-T4_mkbX0j5wq9QGqDrt-qvgACLcB/s1600/q012_p03.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q012_p03.jpg" border="0"></a></div>
<br>
<div>
</div>
<h3>
<ul>
<li>Какая разница между window.onload, document.ready() и $(function(){...});?</li>
</ul>
</h3>
onload - это событиев DOM, срабатывает после загрузки всего содержимого, включая и изображения, и прочее.&nbsp;<br>
$(document).ready - возникает в момент готовности дерева DOM, то есть не ожидает загрузки изображений.&nbsp;<br>
$(function(){...}); - это тоже самое, что $(document).ready(function () { ... });&nbsp;<br>
<br>
<h3>
<ul>
<li>Какая разница между jquery.js и jquery.min.js ?</li>
</ul>
</h3>
jquery.js
 (без приставки min в названии) - этот файл используется для разработки 
веб-сайтов и скриптов. Он представляет собой несжатый и легко читаемый 
Javascript код.<br>
jquery.min.js
 &nbsp;(добавлена приставка min в название файла) - отличие этого файла 
от предыдущего в том, что этот файл &nbsp;является более компактным, 
т.к. в нем удалены:&nbsp;<br>
<div>
<ul>
<li>отступы</li>
<li>переносы строк</li>
<li>укорачиваются имена переменных.&nbsp;</li>
</ul>
</div>
Преимущества, объем очень значительно уменьшается.<br>
Что касается функциональности обоих файлов, то она одинакова. Функции одни и те же.&nbsp;<br>
<div>
<br></div>
<h3>
<ul>
<li>Что такое селектор &nbsp;в JQuery, какие типы селекторов вы знаете?</li>
</ul>
</h3>
Для
 работы с элементами на странице, сначала нам нужно их найти. Для того, 
чтобы найти HTML элемент в JQuery мы используем селекторы. Есть много 
типов селектор, основные из них селекторы:<br>
<div>
<ul>
<li>#ID - Соответствует единственному элементу с заданным атрибутом ID.</li>
<li>element - Соответствует всем элементам с заданным именем.</li>
<li>.class - Соответствует всем элементам данного класса.</li>
<li>.class.class - Соответствует всем элементам данных классов.</li>
<li>* - Соответствует всему.</li>
<li>selector1, selector2, selectorN - Выводит результат в зависимости от комбинации указанных селекторов.&nbsp;</li>
</ul>
<br></div>
<h3>
<ul>
<li>Какие селекторы в JQuery самые быстрые?</li>
</ul>
</h3>
Самыми быстрыми селекторами в JQuery являются ID и element селекторы.<br>
<br>
<h3>
<ul>
<li>Как выбрать все элементы с id = idname</li>
</ul>
</h3>
$( '#idname ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все элементы div с id = idname&nbsp;</li>
</ul>
</h3>
$( 'div#idname ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все элементы с class = classname&nbsp;</li>
</ul>
</h3>
$( '.classname ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все элементы div с class = classname&nbsp;</li>
</ul>
</h3>
$( 'div.classname ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все span элементы в элементах div</li>
</ul>
</h3>
$( 'div span ');<br>
или так:<br>
$( 'div ').find('span ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все div и span элементы&nbsp;</li>
</ul>
</h3>
$( 'div, span ');<br>
<br>
<h3>
<ul>
<li>Как выбрать предыдущий элемент от найденного</li>
</ul>
</h3>
$( '#banner ').prev();<br>
<br>
<h3>
<ul>
<li>Как выбрать следующий элемент от найденного&nbsp;</li>
</ul>
</h3>
$( '#banner ').next();<br>
<br>
<h3>
<ul>
<li>Как выбрать все span элементы в элементах div, где span является прямым потомком div’a&nbsp;</li>
</ul>
</h3>
$( 'div &gt; span ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все span после первого элемента div?</li>
</ul>
</h3>
$( 'div ~ span ');<br>
<br>
<h3>
<ul>
<li>Как выбрать первый li в ul?</li>
</ul>
</h3>
$( 'ul li:first-child ');<br>
<br>
<h3>
<ul>
<li>Как выбрать div`ы у которых нет класса cls?</li>
</ul>
</h3>
$( 'div:not(.cls) ');<br>
<br>
<h3>
<ul>
<li>Как выбрать элементы с активной анимацией?</li>
</ul>
</h3>
$( 'div:animated ');<br>
<br>
<h3>
<ul>
<li>Как выбрать div-ы которые содержат класс firstclass и класс secondclass?</li>
</ul>
</h3>
$( 'div.firstclass ').filter('.secondclass ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все div-ы с атрибутом title = test?</li>
</ul>
</h3>
$( "div[title= 'test '] ");<br>
<br>
<h3>
<ul>
<li>Как выбрать все отмеченные чекбоксы?</li>
</ul>
</h3>
$( 'input:checked ');<br>
<br>
<h3>
<ul>
<li>Как выбрать все input с type = radio?</li>
</ul>
</h3>
$( 'input:radio ');<br>
<br>
<h3>
<ul>
<li>Как выбрать видимый div с именем red, который содержит тег span?</li>
</ul>
</h3>
$( "div[name=red]:visible:has(span) ");<br>
<br>
<h3>
<ul>
<li>Что выберет этот фільтр $("a[rel~= 'external ']"); ?</li>
</ul>
</h3>
Все &lt;а&gt; с атрибутом rel содержащим external в списке значений разделенных пробелом.<br>
<br>
<h3>
<ul>
<li>Что выберет этот фільтр $("div[name=apple]:visible:has(p)"); ?</li>
</ul>
</h3>
Выберет видимый div с именем apple, который содержит тег p.<br>
<br>
<h3>
<ul>
<li>Найти
 все элементы div с классом one, а также все элементы p с классом two, 
затем добавить им всем класс three и визуально плавно спустить вниз?</li>
</ul>
</h3>
$("div.one").add("p.two").addClass("three").slideDown("slow");<br>
<br>
<h3>
<ul>
<li>Сделать так, чтобы при нажатии на элемент &lt;а&gt; алертом выводилось "Hello world!".&nbsp;</li>
</ul>
</h3>
<div class="separator" style="clear: both; text-align: center;">
</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-8Y125xWRDhw/VxHPhonyrMI/AAAAAAAAAjM/ydSDXrm942AB-xfm2GY3Aw2y7Tu8vn8jwCLcB/s1600/q038_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q038_p01.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<ul>
<li>Что быстрее document.getElementByID('txtName') или $('#txtName')?</li>
</ul>
</h3>
JavaScript
 запрос всегда быстрее, так как для выбора txtName метод JQuery 
"$('#txtName')" делает вызов document.getElementById ('txtName'). &nbsp;<br>
<br>
<h3>
<ul>
<li>Какая разница между $(this) и 'this' в jQuery?</li>
</ul>
</h3>
$(this),
 когда Вы собираетесь работать с объектом jQuery. Если же Вы хотите 
обратиться напрямую к объекту DOM, тогда Вам нужен именно this.<br>
Стоит
 учитывать, что jQuery всегда возвращает массив, даже в том случае, если
 найден всего один элемент (тогда он будет первым, а точнее - нулевым 
элементом массива). Поэтому справедливым будет выражение $(this)[0] == 
this. Здесь важно понимать, что обращение к элементу jQuery по индексу в
 квадратных скобках вернёт не объект типа jQuery, а соответствующий ему 
объект DOM. Если же вы хотите из массива jQuery получить первый объект в
 виде jQuery-сущности, используйте для этого функцию eq().<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-Az0nPSQ-4zQ/VxHObZl_vVI/AAAAAAAAAjA/_zPGz0Hp_-sIEPu5ZaCJA1z5coVEcOQNQCLcB/s1600/q040_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p1_files/q040_p01.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<a href="https://jsehelper.blogspot.nl/2016/04/jquery-2.html"> jQuery (часть 2).</a></h3>
</div>


</body></html>