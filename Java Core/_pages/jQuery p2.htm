<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>jQuery p2</title>
<link rel="stylesheet" href="grey.css">
</head>
<body>

<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как проверить, что элемент пустой?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Есть 2 способа, чтобы проверить пустой элемент или нет. Первый мы можем проверить это с помощью селектора ":empty".</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-BY3Add3cSIE/VxJUvkeq7KI/AAAAAAAAAkE/_3Ns94BFA_IC04VGVTMJcgvKCSWypThjQCLcB/s1600/q041_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q041_p01.jpg" border="0"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; text-align: justify;">И второй способ используя метод "$.trim()".</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-BHaigwlmA5A/VxJU2cAQDjI/AAAAAAAAAkI/QRds54blsS0Uhu9Le44WlZ7comAVba0ywCLcB/s1600/q041_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q041_p02.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
</div>
<a name="more"></a><br>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как проверить существует ли элемент в JQuery?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Используя свойство JQuery length, мы можем убедиться существует элемент или нет.</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-GCXBWz7J-r4/VxJVODT4jeI/AAAAAAAAAkM/JMClnsXndbc5-E4ikMcNGfKm5LWrnyRnQCLcB/s1600/q042_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q042_p01.jpg" border="0"></a></div>
<div style="text-align: justify;">
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для чего используется функция jQuery ".each()"?&nbsp;</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Функция
 .each() применяется непосредственно на коллекции jQuery. Она выполняет 
итерацию по каждому соответствующему элементу в коллекции и выполняет 
обратный вызов на этом объекте. Это означает, что каждый раз, когда 
выполняется указанная функция (а выполняется она один раз для каждого 
совпавшего элемента) ключевое слово 'this' указывает на конкретный 
элемент DOM. Помните, что слово 'this' НЕ указывает на объект jQuery. 
Кроме того, запущенная функция передает единственный аргумент, который 
показывает позицию элемента в составе набора совпавших элементов 
(integer, отсчет с 0).&nbsp;</span></div>
<div style="text-align: justify;">
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какая разница между $('div') и $('&lt;div/&gt;') в jQuery?&nbsp;</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$('&lt;div/&gt;') - создает новый элемент DIV, однако не добавляет его в DOM дерево.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$('div') - &nbsp;выбирает все div элементы, присутствующие на странице.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div>
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какая разница между parent(), parents(), closest() в jQuery?&nbsp;</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.parent([selector]) - &nbsp;находит родителя строго на один уровень вверх.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Пример: $(this).parent()</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для
 того чтобы получить родителя от родителя нужно применять цепочку 
вызовов (произвольной глубины): $(this).parent().parent()....</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.parents([selector])
 &nbsp;- возвращает список всех родительских узлов, и, &nbsp;может 
содержать селектор, для уточнения набора родителей.&nbsp;</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Пример: $(this).parents("li.test")</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.closest(selector,
 [context]) - возвращает первый ближайший родительский узел или же 
текущий узел - которые удовлетворяют условию в селекторе (селектор 
обязательный). Может принимать контекст для уточнения поиска (набор 
узлов заранее выбранных).</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Основные отличия его от .parents():</span></div>
<div style="text-align: justify;">
</div>
<ul>
<li style="text-align: justify;"><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">может вернуть и текущий узел</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">обязательный селектор</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">возвращает только первый элемент который попал под условие, поиск ведется тоже вверх по дереву.&nbsp;</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Пример: $(this).closest("li.test") или $(this).closest("li.test", itemsList)&nbsp;</span><br>
<br>
<h3 style="text-align: left;">
<ul style="text-align: left;">
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какая разница между get() и eq() методами в jQuery?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Отметим
 различия методов get(i) и eq(i). Первый возвращает непосредственно 
DOM-объект элемента, идущего под номером i в наборе (кстати, нумерация 
начинается с 0). К такому элементу вы не сможете применить методы 
jQuery, зато сможете применить стандартные javascript методы. Метод 
eq(i) наоборот, возвращает i-й элемент в таком виде, что к нему можно 
применять методы jQuery. Вообще, для того, чтобы к элементам можно было 
применять методы библиотеки jQuery, они должны находиться в так 
называемом объекте jQuery, именно его возвращает функция $().</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<h3 style="text-align: left;">
<ul style="text-align: left;">
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как добавить анимацию в jQuery?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Ключевым
 методом, на которой базируются все остальные, является метод animate(),
 с помощью которого можно задавать плавное изменение различных 
CSS-свойств:</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.animate(properties, [duration], [easing], [callback])</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">properties
 - список CSS-свойств, участвующих в анимации и их конечных значений. 
Задаются объектом, в формате {ключ:значение}, например:{opacity: 50, 
width: 100, height: 200}.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">duration
 - продолжительность выполнения анимации. Может быть задана в 
миллисекундах или строковым значением 'fast' или 'slow' (200 и 600 
миллисекунд).</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">easing
 - изменение скорости анимации (будет ли она замедляется к концу 
выполнения или наоборот ускорится). Задается строковым значением: 
"linear" и "swing" (для равномерной анимации и анимации с ускорением). 
Другие варианты можно найти в плагинах.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">callback - функция, которая будет вызвана после завершения анимации.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Пример.
 Пусть у нас есть элемент div с каким-нибудь текстом. Мы хотим плавно 
скрыть этот элемент, заменить текст, и плавно сделать элемент видимым:</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-_V2jdO0pPrA/VxM3B_O-pbI/AAAAAAAAAkg/Hw0ZunS8f5U2UN5p4ZZypWu-ALzrP2SFACLcB/s1600/q047_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q047_p01.jpg" border="0"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">значения "hide", "show" означают исчезновение и появление элемента, за счет параметра, к которому они применены.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как отключить JQuery анимацию?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Чтобы
 отменить выполнения всех анимаций используют "jQuery.fx.off". Установив
 это свойство в true, вы отключите все анимации, которые можно выполнять
 с помощью jQuery. Для того, что бы анимации заработали вновь, 
необходимо установить это свойство обратно в false.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Простой пример:</span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-jBexpvWCH-U/VxM3T5-2v4I/AAAAAAAAAkk/tzg8pEkczIgzCc-zEZUmZs-I3m7bF5D-QCLcB/s1600/q048_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q048_p01.jpg" height="42" border="0" width="640"></a></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как остановить текущую запущенную анимацию в JQuery?&nbsp;</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Используя метод ".stop()". Он останавливает выполнение текущей анимации.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В чем разница между методами .empty () .remove () и .detach () в JQuery?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.empty()
 - очищает содержание выбранных элементов, т.е. удаляет все узлы-потомки
 (включая тексты) из выбранных элементов, все обработчики событий и 
внутренние кэш-данные.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.remove() - удаляет все выбранные элементы из DOM (указанный элемент и всех его потомков)</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.detach()
 - удаляет все выбранные элементы из DOM (указанный элемент и всех его 
потомков), но метод .detach() сохраняет данные jQuery, ассоциированные с
 удаляемым элементом и поэтому они могут быть восстановлены.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<h3 style="text-align: justify;">
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какая разница между .bind() .live() .delegate() и .on()?</span></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.bind() - навешивает обработчик непосредственно на элемент (когда тот есть в DOM-е). При удалении элемента так-же удаляется.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.live()
 - навешивает обработчик на document, используется делегирование 
(всплытие событий). Позволяет создать обработчик до того, как элемент 
появится в DOM-е. При удалении элумента обработчик не удаляется, а 
просто перестает срабатывать. Если в DOM снова вставить элемент, 
подходящий под селектор, обработчик снова отработает.</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.delegate()
 - точно так-же, как и live, использует делегирование, только явно 
указывается узел, на который навешивается обработчик. (удобно для 
разработки модулей, или как их еще называют, виджетов).</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.on()
 - объединяет возможности как bind, так и delegate (зависит от формы 
использования). Единый метод введен для того, чтобы не возникали вопросы
 какой метод использовать.</span></div>
<div style="text-align: justify;">
<br></div>
<h3 style="text-align: justify;">
<ul>
<li><b style="font-family: arial, helvetica, sans-serif;">Как создать клон объекта в JQuery?</b></li>
</ul>
</h3>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Для клонирования в JQuery есть метод .clone() - создает полную копию выбранных элементов.&nbsp;</span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span></div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.clone(
 [withDataAndEvents] ) где withDataAndEvents - логическое значение, 
указывающее нужно ли копировать данные и обработчики событий у выбранных
 элементов. По умолчанию false. Пример:</span></div>
<div style="text-align: justify;">
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-ITo9Nxqijr8/VxM436ijFRI/AAAAAAAAAk0/NEY3mcHr8hw8L92f6KnDEndL-QF1W1CUgCLcB/s1600/q052_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q052_p01.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
</div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В чем разница между prop и attr?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.prop() - возвращает/изменяет значение свойств выбранных элементов.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.attr() - получает/устанавливает значение атрибутов выбранных элементов.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Метод
 .prop() появился в версии 1.6, многие ошибочно используют метод .attr()
 для доступа к свойствам элементов и модификации их значений. Дело в 
том, что с версии 1.6 .attr() работает непосредственно с атрибутом 
элемента и в некоторых случаях результат не совсем ожидаемый.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Например,
 если мы хотим узнать состояние чекбокса, то .attr() может выдать его 
значение по умолчанию (которое видно в исходниках HTML страницы). В этом
 случае нам нужно использовать метод .prop() - он вернет текущее 
значение свойства элемента.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое event.preventDefault?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 jQuery есть один интересный метод preventDefault(), который позволяет 
предотвратить возникновение "действия по умолчанию" для конкретного 
события. Например, если в &nbsp;разметке есть гиперссылка, но мы хотим 
использовать эту ссылку как кнопку button - т.е. без перехода по URL, 
заданному в атрибуте href, то используется как раз preventDefault(). 
После этого, всё, что необходимо сделать, - это добавить вызов 
preventDefault() в обработчик события клика мышью.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В чем разница между event.PreventDefault и event.stopPropagation?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.event.preventDefault()
 - если будет вызван данный метод, то действие события по умолчанию не 
будет выполнено. К примеру, клик по ссылке не отправит пользователя по 
новому URL. Для определения, был ли вызван данный метод, можем 
воспользоваться функцией event.isDefaultPrevented().</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.event.stopPropagation()
 - станавливает "всплытие" вызова события к родительским элементам. 
Данный метод работает для собственных событий, вызванных методом 
trigger(). Заметьте, что данный метод не будет применён к другим 
обработчикам событий.&nbsp;</span><br>
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как проверить есть переменная числом, используя JQuery 1.7+?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">С помощью функции "IsNumeric()", которая была введена с JQuery 1.7.&nbsp;</span><br>
<br>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как проверить тип данных переменной в JQuery?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">С
 помощью $.type() - определяет класс заданного элемента (речь идет о 
внутренних классах javascript: string, boolean и т.д.). Функция имеет 
один вариант использования:</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$.type(Object) где Object - элемент, класс которого требуется определить.&nbsp;</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<br></div>
<div style="text-align: justify;">
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Как привязать обработчик события к выбранному элементу, которое должно быть выполнено только один раз?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Метод
 one() назначает обработчик одному или более событиям для каждого 
совпавшего элемента, который выполняется единожды. Обработчик 
запускается лишь раз для каждого элемента. Обработчик события принимает 
объект event, который можно использовать для предотвращения поведения по
 умолчанию. Пример:</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-i2LEDS0gfLs/VxM6SVRiyhI/AAAAAAAAAlA/SqNJRjFTl9kDda3jS-ENh0QA0hHCXf2DQCLcB/s1600/q058_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q058_p01.jpg" border="0"></a></div>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Можно ли удерживать или задержать выполнение document.ready на некоторое время?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Да
 это возможно. Начиная с версии 1.6 в jQuery появился новый метод 
".holdReady()". Метод позволяет приостановить выполнение обработчиков 
события ready.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">jQuery.holdReady(hold)
 - где hold в случае true приостанавливает выполнение обработчиков 
события ready, в случае false - возобновляет.&nbsp;</span><br>
<br>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое цепочка методов в jQuery?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Цепочкой
 методов называют последовательный вызов нескольких методов jQuery. Для 
удобочитаемости, цепочки часто пишут с переносами:</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Например код:</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"></span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-AIAzicsiGm0/VxM_D8Sv31I/AAAAAAAAAlM/SSqrOE-cc5ktrjXnKH13IT5q-ki-tcq9wCLcB/s1600/q060_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q060_p01.jpg" border="0"></a></div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">с использованием цепочки методов данный код будет выглядеть так:</span><br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-oGVsIjTko2k/VxM_WmfvxFI/AAAAAAAAAlQ/SK7lN2fk-cUSu_d1ioqXX5R4mBpQVmr_gCLcB/s1600/q060_p02.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q060_p02.jpg" border="0"></a></div>
<div class="separator" style="clear: both; text-align: justify;">
<br></div>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Можем ли мы использовать JQuery, чтобы сделать AJAX запрос?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Да. JQuery может быть использована для создания Ajax запроса.&nbsp;</span><br>
<br>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Какими методами можно сделать AJAX запрос в JQuery?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Сделать AJAX запрос можно с помощью следующих методов:&nbsp;</span><br>
<div>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">load() - загрузка HTML кода в необходимый нам DOM элемент на странице.&nbsp;</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$.getJSON() - загружает данные в формате JSON (удобней и быстрее нежели XML).&nbsp;</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$.getScript() - данная функция загружает и выполняет локальный JavaScript.&nbsp;</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$.get() - загружает страницу, используя для передачи данных GET запрос.&nbsp;</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$.post() - данный метод аналогичен предыдущему, лишь передаваемые данные уйдут на сервер посредством POST’а.&nbsp;</span></li>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">$.ajax() - это самый основной метод, а все последующие методы лишь обертки для метода jQuery.ajax</span><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">.&nbsp;</span></li>
</ul>
</div>
<br>
<h3>
<ul>
<li><b style="font-family: arial, helvetica, sans-serif;">Что такое отсроченные(Deferred) объекты в jQuery?</b></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">В
 версии jQuery 1.5 было внесено много изменений, однако, основные 
изменения коснулись внедрения объекта Deferred(), они помогают в 
обработке асинхронных функции, такие как Ajax.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Благодаря
 отложенным объектам, можно определять множество функций обратного 
вызова для какого-то результата, и любой из этих вызовов может быть 
использован после выполнения какой-либо задачи. Это может использоваться
 как в асинхронных, так и в обычных целях.&nbsp;</span><br>
<br>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что делает метод finish()?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Метод
 finish() останавливает текущую анимацию, удаляет все очереди анимации и
 завершает все анимации для соответствующих элементов.&nbsp;</span><br>
<br>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Можно ли не указывать протокол в URL когда jQuery ссылается на CDNs?</span></li>
</ul>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif; font-size: small;"><span style="font-weight: normal;">Да. код ниже полностью рабочий.</span></span></h3>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/--WlZJpF73uc/VxNAAIpad_I/AAAAAAAAAlc/VVcoNGmihAgCaHJZXPCqslJaQ6Z9xB1uACLcB/s1600/q065_p01.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img src="jQuery%20p2_files/q065_p01.jpg" border="0"></a></div>
<div>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span></div>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое Jquery плагины и какие преимущества их использования?</span></li>
</ul>
</h3>
</div>
<div style="text-align: justify;">
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">jQuery
 плагин это часть кода, написанного в стандартном JavaScript файле. Эти 
файлы предоставляют полезные функции, которые могут быть использованы 
вместе с методами библиотеки jQuery. JQuery плагинины очень полезны, это
 части кода, которые уже кем-то написаны и могут быть использованы 
повторно, что позволяет экономить время разработки.</span><br>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;"><br></span>
<h3>
<ul>
<li><span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">Что такое jQuery UI?</span></li>
</ul>
</h3>
<span style="font-family: &quot;arial&quot; , &quot;helvetica&quot; , sans-serif;">jQuery
 UI - это библиотека виджетов и плагинов, основанная на JavaScript 
библиотеке jQuery, которую можно использовать для создания интерактивных
 веб-приложений.</span></div>


</body></html>