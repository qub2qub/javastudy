<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="UTF-8">
	<title>log4j</title>
<link rel="stylesheet" href="../../Git Guide/grey.css">
</head>
<body>

<h3>
<ul>
<li>Из чего состоит логгер?</li>
</ul>
</h3>

<div>
Любой регистратор событий состоит из трех элементов:</div>
<div>
<ul>
<li>cобственно регистрирующего - logger;</li>
<li>направляющего вывод - appender;</li>
<li>форматирующего вывод - layout.</li>
</ul>
</div>
<div>
<br></div>
<div>
<h3>
<ul>
<li>Какие есть уровни сообщении в log4j?</li>
</ul>
</h3>
</div>
<div>
Приоритетов может быть ШЕСТЬ (log4j1.2.*):</div>
<div>
<ul>
<li>FATAL - произошла фатальная ошибка - у этого сообщения наивысший приоритет<a name="more"></a></li>
<li>ERROR - в программе произошла ошибка</li>
<li>WARN - предупреждение в программе что-то не так</li>
<li>INFO - информация.</li>
<li>DEBUG - детальная информация для отладки</li>
<li>TRACE– трассировка всех сообщений в указанный аппендер</li>
</ul>
</div>
<div>
OFF&lt; TRACE&lt; DEBUG&lt; INFO&lt; WARN&lt; ERROR&lt; FATAL&lt; ALL</div>
<div>
<br></div>
<div>
<h3>
<ul>
<li>Что такое Appender?</li>
</ul>
</h3>
</div>
<div>
Вывод
 регистратора может быть направлен в различные места назначения: файл, 
консоль и т. д. Каждому из них соответствует класс, реализующий 
интерфейс org.apache.log4j.Appender. Кроме того, вывод в базу данных 
можно произвести с помощью класса JDBCAppender, в журнал событий ОС - 
NTEventLogAppender, на SMTP-сервер - SMTPAppender.</div>
<div>
Если
 логгер - это та точка, откуда уходят сообщения в коде, то аппендер - 
это та точка, куда они приходят в конечном итоге. Например, файл или 
консоль.</div>
<div>
Список таких точек, поддерживаемых Log4J:</div>
<div>
<ul>
<li>консоль;</li>
<li>файлы (несколько различных типов);</li>
<li>JDBC;</li>
<li>темы (topics) JMS;</li>
<li>NT Event Log;</li>
<li>SMTP;</li>
<li>Сокет;</li>
<li>Syslog;</li>
<li>Telnet;</li>
<li>любой java.io.Writer или java.io.OutputStream.</li>
</ul>
</div>
<div>
<br></div>
<div>
<h3>
<ul>
<li>Какие основные аппендеры Log4j?</li>
</ul>
</h3>
</div>
<div>
Основными аппендерами, использующимися наиболее широко, являются файловые аппендеры. Их есть несколько типов:</div>
<div>
<ul>
<li>org.apache.log4j.FileAppender</li>
<li>org.apache.log4j.RollingFileAppender</li>
<li>org.apache.log4j.DailyRollingFileAppender</li>
</ul>
</div>
<div>
<br></div>
<div>
<h3>
<ul>
<li>Что такое Layout?</li>
</ul>
</h3>
</div>
<div>
Вывод
 регистратора может иметь различный формат. Каждый формат представлен 
классом, производным от Layout. Все методы класса Layout предназначены 
только для создания подклассов.</div>
<div>
<ul>
<li>org.apache.log4j.SimpleLayout - наиболее простой вариант. На выходе читается уровень вывода и сообщение.</li>
<li>org.apache.log4j.HTMLLayout - данный компоновщик форматирует сообщения в виде HTML-страницы.</li>
<li>org.apache.log4j.xml.XMLLayout - формирует сообщения в виде XML.</li>
<li>org.apache.log4j.PatternLayout
 и org.apache.log4j.EnhancedPatternLayout используют шаблонную строку 
для форматирования выводимого сообщения.</li>
</ul>
</div>
<link href="https://plus.google.com/105527202953364202368" rel="author">

<p></p>
	

</body></html>