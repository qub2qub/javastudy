<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>putty tunels</title>
    <link rel="stylesheet" href="grey.css">
	<style type="text/css">
	pre, div.note {
		font-family: "Trebuchet MS",Tahoma,Arial;
		font-size: 18px;
		font-weight: bold;
		border: 1px solid #000;
		background-color: #999;
		padding: 5px;
	}
	body {
		font-family: Arial,Tahoma,"Trebuchet MS";
		font-size: 20px;
		background-color: #c0c0c0;
	}
	table {
		table-layout: fixed;
		border-collapse: collapse;
		border-spacing: 0;
	}
	td, th {
		border: 1px solid black;
		word-wrap: break-word;
	}
	div.comment-container {
    		border: 1px solid #920000;
    }
	</style>
</head>
<body>
<a href="http://avz.org.ua/wp/2010/06/29/putty-how-to-make-your-windows-useful/">src</a>
<h2>PuTTY: делаем Windows полезным</h2>
<div class="entry-content full-content">
		<p>В данной статье будет описано как строить SSH-туннели с помощью PuTTY.</p>
<h3>1. Локальный проброс порта</h3>
<p>Рассмотрим следующую ситуацию. Мы находимся внутри корпоративной сети, у нашего компьютера адрес 192.168.0.2, доступ во внешний мир полностью закрыт (то есть никакого NAT-а, proxy и т.п.). Влиять на политику ограничения доступа у нас возможности нет, но зато есть SSH-доступ на один из серверов с маршрутизируемым IP-адресом, который доступен из Интернет. Внутренний адрес этого сервера, пусть будет для примера 192.168.0.3. Структура сети изображена на рисунке:</p>
<div style="margin-bottom: 15px" align="center"></div>
<p><img src="./putty tunels/p1.png"><br>
Предположим, что нам очень нужно подключиться, к примеру, по SSH на некоторый удалённый сервер с IP-адресом 212.212.212.212 где-то далеко в Интернет. Для этого запускаем PuTTY, создаём SSH-подключение к серверу 192.168.0.3 (далее по тексту SSH-сессия 1), идем в пункт Tunnels:<br>
<img src="./putty tunels/p2.png">
<br>
и указываем, что локальный порт 2222 нашего компьютера должен быть поставлен в соответствие порту 22 на сервере с IP-адресом 212.212.212.212. Далее жмем кнопку "Open", авторизуемся на сервере 192.168.0.3. Затем создаём ещё одно подключение (далее по тексту SSH-сессия 2), но уже на localhost, порт 2222 и жмём кнопку "Open":<br><img src="./putty tunels/p3.png"></p>
<div style="text-align:center; margin-bottom:15px;">
<script type="text/javascript"><!--
google_ad_client = "pub-9566425191373950";
/* avzblog_hrz_links_468x15_20091222 */
google_ad_slot = "0723178369";
google_ad_width = 468;
google_ad_height = 15;
//-->
</script><br>
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<p>В результате SSH-сессия 2 будет туннелироваться (т.е. будет установлена внутри ранее установленной SSH-сессии 1). Для удалённого сервера 212.212.212.212 всё будет выглядеть так, как будто к нему подключается 111.111.111.111:<br>
<img src="./putty tunels/p4.png"></p>
<h3>2. Удалённый проброс порта</h3>
<p>В этом случае подключение внутри SSH-туннеля устанавливается в другую сторону&nbsp;–&nbsp;от удаленного сервера на наш локальный компьютер. Может быть полезно, если требуется открыть доступ к локальным сервисам нашего компьютера. Рассмотрим ту же сеть, что и в пункте 1, но для простоты предположим, что теперь у нас есть NAT:<br>
<img src="./putty tunels/p5.png"><br>
Здесь уже у нас есть возможность подключаться через SSH напрямую к 212.212.212.212 благодаря наличию NAT-а. А вот 212.212.212.212 подключиться на 192.168.0.2 без специальных ухищрений, понятное дело, не сможет, т.к. 192.168.0.2 не подключен к Интернет непосредственно. Предположим, что пользователю, сидящему под X-ами на 212.212.212.212 нужно через remote desktop попасть на наш компьютер 192.168.0.2. Для этого в SSH-сеансе подключения с 192.168.0.2 на 212.212.212.212 нужно изменить настройки в разделе Tunnels следующим образом:<br>
<img src="./putty tunels/p6.png"><br>
В результате после успешной авторизации на 212.212.212.212 можно увидеть следующее:</p>
<div class="geshi no bash">
<div class="head">#lsof -i -nP | grep 3333</div>
<ol>
<li class="li1">
<div class="de1">sshd &nbsp;<span class="nu0">18598</span> &nbsp; avz &nbsp; 11u &nbsp;IPv4 <span class="nu0">592868957</span> &nbsp; TCP <span class="nu0">127.0</span><span class="nu0">.0</span><span class="nu0">.1</span>:<span class="nu0">3333</span> <span class="br0">(</span>LISTEN<span class="br0">)</span></div>
</li>
</ol>
</div>
<p>То есть sshd ожидает подключений на TCP-порт 3333, которые затем по SSH-туннелю будут перенаправлены на 192.168.0.2 порт 3389. И юзер сидящий за 212.212.212.212 сможет с помощью rdesktop увидеть наш рабочий стол:</p>
<p><img src="./putty tunels/p7.png"></p>
<h3>3. Socks-proxy</h3>
<p>В этом случае мы можем использовать сервер с SSH-демоном как промежуточный (proxy). Схема сети как в случае #1 (без NAT и штатных прокси):<br>
<img src="./putty tunels/p8.png"><br>
Чтобы заставить PuTTY испольнять роль socks-прокси, нужно параметры SSH-сессии с 192.168.0.2 на 192.168.0.3 изменить следующим образом:<br>
<img src="./putty tunels/p9.png"><br>
В результате после успешной авторизации со стороны клиента можно будет наблюдать следующее:</p>
<div class="geshi no bash">
<ol>
<li class="li1">
<div class="de1">C:\<span class="sy0">&gt;</span>netstat -ano <span class="sy0">|</span> <span class="kw2">find</span> <span class="st0">"1080"</span></div>
</li>
<li class="li1">
<div class="de1">&nbsp; TCP &nbsp; &nbsp;<span class="nu0">127.0</span><span class="nu0">.0</span><span class="nu0">.1</span>:<span class="nu0">1080</span> &nbsp; &nbsp; <span class="nu0">0.0</span><span class="nu0">.0</span><span class="nu0">.0</span>:<span class="nu0">0</span> &nbsp; &nbsp; &nbsp;LISTENING &nbsp; &nbsp; &nbsp; <span class="nu0">2392</span></div>
</li>
<li class="li1">
<div class="de1">C:\<span class="sy0">&gt;</span>tasklist <span class="sy0">|</span> <span class="kw2">find</span> <span class="sy0">/</span>i <span class="st0">"2392"</span></div>
</li>
<li class="li1">
<div class="de1">putty.exe &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="nu0">2392</span> Console &nbsp; &nbsp; &nbsp; &nbsp;<span class="nu0">0</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="nu0">5420</span> КБ</div>
</li>
</ol>
</div>
<p>То есть putty, выполняющийся с PID-ом 2392, начинает слушать порт 1080, ожидая подключений. Далее берем любое приложение, умеющее работать с SOCKS-прокси, например Firefox, и указываем ему использовать наш прокси:<br>
<img src="./putty tunels/p92.png"><br>Теперь все запросы от броузера будут проходить через сервер 192.168.0.3. В логах веб-сайтов, по которым мы таким образом будем ходить, будет отображаться внешний IP-адрес нашего сервера - 111.111.111.111.</p>
<p>P.S. Из help-файла Putty 0.58:<br>
<cite>Question A.10.3: What does ‘PuTTY’ mean?<br>
It's the name of a popular SSH and Telnet client. Any other meaning is in the eye of the beholder. It's been rumoured that ‘PuTTY’ is the antonym of ‘getty’, or that it's the stuff that makes your Windows useful...</cite> :)</p>
<div style="text-align: center; margin-top: -25px; margin-bottom: 5px">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-9566425191373950";
/* avzwp_468x60_20091129 */
google_ad_slot = "3298568033";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script><br>
<script type="text/javascript" src="./putty tunels/pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<p>P.P.S. Другой способ туннелирования трафика описан в заметке <a href="/wp/2011/06/24/policy-routing/">Разворачивание трафика на основе policy routing</a>. Весьма рекомендую к прочтению.</p>
<div class="ac_lix"><!-- SAPE RTB JS -->
<script async="async" src="//cdn-rtb.sape.ru/teasers/js/247/2/26247.js" type="text/javascript">
</script>
<!-- SAPE RTB END --> <a href="http://www.kurortazova.net/kirillovka/fedotova-kosa/" target="_blank">Федотова коса в Кирилловке</a> . </div><div class="yarpp-related">
<h3>Похожие заметки:</h3>
<ol>
		<li><a href="http://avz.org.ua/wp/2012/07/18/x-session-connecting-from-windows-via-x11vnc/" rel="bookmark">Как подключиться к X-сессии из Windows</a><!-- (11.4)--></li>
		<li><a href="http://avz.org.ua/wp/2009/01/09/linux-nat/" rel="bookmark">NAT в linux</a><!-- (9)--></li>
		<li><a href="http://avz.org.ua/wp/2011/06/17/printing-to-cups-from-windows/" rel="bookmark">Печать из windows на cups-принтер</a><!-- (7.8)--></li>
		<li><a href="http://avz.org.ua/wp/2011/03/27/xinetd-port-redirection/" rel="bookmark">Проброс портов с помощью xinetd</a><!-- (6.4)--></li>
	</ol>
</div>
	</div>
</body>
</html>