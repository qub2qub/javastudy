<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Spring Social Sign p1</title>
    <link rel="stylesheet" href="../Guides/grey.css">
    <style type="text/css">
    	div.comment-container {
    		border: 1px solid #920000;
    	}
    </style>
</head>
<body>
<a href="https://www.petrikainulainen.net/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/">src</a>
<h2>Adding Social Sign In to a Spring MVC Web Application: Configuration</h2>
<div class="post_content cye-lm-tag" itemprop="articleBody"><p class="cye-lm-tag">In the good old days users logged in by using the combination of username and password. Although nowadays some people still prefer the traditional way, a growing number of users want to sign in by using their social media accounts.</p>
<p class="cye-lm-tag">This is a what makes Spring Social (and its sub projects) an useful addition to the Spring project portfolio. However, integrating Spring Social with Spring Security has been a bit cumbersome.</p>
<p class="cye-lm-tag">Spring Social 1.1.0 changes all this. It provides seamless integration with Spring Security, and the Java configuration support of Spring Security makes the configuration feel like a walk in the park.</p>
<p class="cye-lm-tag">You don’t have to take my word for it. Keep on reading and you will learn how this is done.</p>
<p class="cye-lm-tag">The requirements of our solution are the following:</p>
<ul><li>It must be possible to create an user account by using a normal registration form.</li><li>It must be possible to create an user account by using a social sign in.</li><li>It must be possible to login by using username and password.</li><li>It must be possible to login by using a SaaS API provider.</li><li>The application must support Facebook and Twitter.</li><li>The application must use “regular” Spring MVC controllers (no REST).</li></ul><p class="cye-lm-tag">Let’s start by taking a look at the prerequisites of this tutorial.</p>
<h2>Prerequisites</h2><p class="cye-lm-tag">This tutorial assumes that you have already created the Facebook and Twitter application used by the example application. You can create these applications by following these links:</p>
<ul><li><a href="https://developers.facebook.com/" target="_blank">Facebook Developers</a></li><li><a href="https://dev.twitter.com/" target="_blank">Twitter Developers</a></li></ul><p class="cye-lm-tag">If you don’t know how to do this, you can check out the following links:</p>
<ul><li><a href="https://developers.facebook.com/docs/guides/appcenter/#creating" target="_blank">Facebook Developers – Creating an App Details Page</a> (Select “website with Facebook login” when you are asked how your application integrates with FB).</li><li><a href="http://iag.me/socialmedia/how-to-create-a-twitter-app-in-8-easy-steps/" target="_blank">How to Create a Twitter App in 8 Easy Steps</a> (Enable the “allow this application to be used to Sign in with Twitter” checkbox).</li></ul><p class="cye-lm-tag">Let’s move on and find out how we can get the required dependencies with Maven.</p>
<h2>Getting the Required Dependencies with Maven</h2><p class="cye-lm-tag">The first thing that we have to do is to get the required dependencies with Maven. We can do this by declaring the following dependencies in our POM file:</p>
<ul><li>Spring Security (version 3.2.0.RELEASE).<ul><li>The <em>core</em> module contains core authentication and and access control components.</li><li>The <em>config</em> module contains the code used to parse XML configuration files using the Spring Security XML namespace.</li><li>The <em>taglibs</em> module contains the Spring Security JPS tag libraries.</li><li>The <em>web</em> module contains filters and all other code related to web security.</li></ul></li><li>Apache HttpClient (version 4.3.2). Apache HttpClient is an optional dependency (but recommended) dependency of Spring Social. If it is present, Spring Social will use it as a HTTP client. If not, Spring social will use the standard Java SE components.</li><li>Spring Social (version 1.1.0.RELEASE).<ul><li>The <em>config</em> module contains the code used to parse XML configuration files using the Spring Social XML namespace. It also adds support for Java Configuration of Spring Social.</li><li>The <em>core</em> module contains the connect framework and provides support for OAuth clients.</li><li>The <em>security</em> module integrates Spring Security with Spring Social. It delegates the authentication concerns typically taken care by Spring Security to service providers by using Spring Social.</li><li>The <em>web</em> module contains components which handle the authentication handshake between our web application and the service provider.</li></ul></li><li>Spring Social Facebook (version 1.1.0.RELEASE) is an extension to Spring Social and it provides Facebook integration.</li><li>Spring Social Twitter (version 1.1.0.RELEASE) is an extension to Social Social which provides Twitter integration.</li></ul><p class="cye-lm-tag">The relevant part of the <em>pom.xml</em> file looks as follows:</p>
<div><div id="highlighter_824102" class="syntaxhighlighter  xml"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml comments">&lt;!-- Spring Security --&gt;</code></div><div class="line number2 index1 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.security&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-security-core&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;3.2.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number6 index5 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number7 index6 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number8 index7 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.security&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number9 index8 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-security-config&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number10 index9 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;3.2.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number11 index10 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number12 index11 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number13 index12 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.security&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number14 index13 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-security-taglibs&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number15 index14 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;3.2.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number16 index15 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number17 index16 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number18 index17 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.security&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number19 index18 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-security-web&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number20 index19 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;3.2.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number21 index20 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="xml comments">&lt;!-- Use Apache HttpClient as HTTP Client --&gt;</code></div><div class="line number24 index23 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number25 index24 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.apache.httpcomponents&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number26 index25 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;httpclient&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number27 index26 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;4.3.2&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number28 index27 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="xml comments">&lt;!-- Spring Social --&gt;</code></div><div class="line number31 index30 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number32 index31 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.social&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number33 index32 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-social-config&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number34 index33 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;1.1.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number35 index34 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number36 index35 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number37 index36 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.social&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number38 index37 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-social-core&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number39 index38 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;1.1.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number40 index39 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number41 index40 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;&nbsp;&nbsp;&nbsp;&nbsp; </code></div><div class="line number42 index41 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.social&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number43 index42 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-social-security&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number44 index43 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;1.1.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number45 index44 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number46 index45 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number47 index46 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.social&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number48 index47 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-social-web&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number49 index48 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;1.1.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number50 index49 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number51 index50 alt2"><code class="xml spaces">&nbsp;</code>&nbsp;</div><div class="line number52 index51 alt1"><code class="xml comments">&lt;!-- Spring Social Facebook --&gt;</code></div><div class="line number53 index52 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number54 index53 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.social&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number55 index54 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-social-facebook&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number56 index55 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;1.1.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number57 index56 alt2"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number58 index57 alt1"><code class="xml spaces">&nbsp;</code>&nbsp;</div><div class="line number59 index58 alt2"><code class="xml comments">&lt;!-- Spring Social Twitter --&gt;</code></div><div class="line number60 index59 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div><div class="line number61 index60 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;org.springframework.social&lt;/</code><code class="xml keyword">groupId</code><code class="xml plain">&gt;</code></div><div class="line number62 index61 alt1"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;spring-social-twitter&lt;/</code><code class="xml keyword">artifactId</code><code class="xml plain">&gt;</code></div><div class="line number63 index62 alt2"><code class="xml spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="xml plain">&lt;</code><code class="xml keyword">version</code><code class="xml plain">&gt;1.1.0.RELEASE&lt;/</code><code class="xml keyword">version</code><code class="xml plain">&gt;</code></div><div class="line number64 index63 alt1"><code class="xml plain">&lt;/</code><code class="xml keyword">dependency</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div><div class="note">Our application has other dependencies as well. For example, it uses Spring Framework 4.0.0.RELEASE, Spring Data JPA 1.4.3, and Hibernate 4.2.4.Final. These dependencies are left out from the dependency listing for the sake of clarity. You can <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/pom.xml" target="_blank">get the full list of dependencies from Github</a>.<p class="cye-lm-tag"></p>
<p class="cye-lm-tag">You might also want to read the following documents which give you more information about the dependencies of the frameworks discussed in this blog post (Spring Security and Spring Social):</p>
<ul><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#get-spring-security" target="_blank">Spring Security Reference Manual: 1.4 Getting Spring Security</a></li><li><a href="http://docs.spring.io/spring-social/docs/1.1.x/reference/htmlsingle/#section_how-to-get" target="_blank">Spring Social Reference Manual: 1.3 How to get</a></li><li><a href="http://docs.spring.io/spring-social-facebook/docs/1.1.x/reference/htmlsingle/#how-to-get" target="_blank">Spring Social Facebook Reference Manual: 1.2 How to get</a></li><li><a href="http://docs.spring.io/spring-social-twitter/docs/1.1.x/reference/htmlsingle/#how-to-get" target="_blank">Spring Social Twitter Reference Manual: 1.2 How to get</a></li></ul></div><p class="cye-lm-tag">Next we have to create a properties file for the configuration properties of our application. Let’s find out how this is done.</p>
<h2>Creating the Properties File</h2><p class="cye-lm-tag">We can create the properties file by following these steps:</p>
<ol><li>Create a file called <em>application.properties</em> and ensure that it is found from the classpath.</li><li>Configure the database connection.</li><li>Configure Hibernate.</li><li>Add the Facebook application id and application secret to the properties file.</li><li>Add the Twitter consumer key and consumer secret to the properties file.</li></ol><p class="cye-lm-tag">The contents of the <em>application.properties</em> file looks as follows:</p>
<div><div id="highlighter_301645" class="syntaxhighlighter  plain"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">#Database Configuration</code></div><div class="line number2 index1 alt1"><code class="plain plain">db.driver=com.mysql.jdbc.Driver</code></div><div class="line number3 index2 alt2"><code class="plain plain">db.url=jdbc:mysql://localhost:3306/socialtwitter</code></div><div class="line number4 index3 alt1"><code class="plain plain">db.username=socialtwitter</code></div><div class="line number5 index4 alt2"><code class="plain plain">db.password=password</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="plain plain">#Hibernate Configuration</code></div><div class="line number8 index7 alt1"><code class="plain plain">hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect</code></div><div class="line number9 index8 alt2"><code class="plain plain">hibernate.format_sql=true</code></div><div class="line number10 index9 alt1"><code class="plain plain">hibernate.hbm2ddl.auto=validate</code></div><div class="line number11 index10 alt2"><code class="plain plain">hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy</code></div><div class="line number12 index11 alt1"><code class="plain plain">hibernate.show_sql=false</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="plain plain">#Facebook</code></div><div class="line number15 index14 alt2"><code class="plain plain">facebook.app.id=foo</code></div><div class="line number16 index15 alt1"><code class="plain plain">facebook.app.secret=bar</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="plain plain">#Twitter</code></div><div class="line number19 index18 alt2"><code class="plain plain">twitter.consumer.key=foo</code></div><div class="line number20 index19 alt1"><code class="plain plain">twitter.consumer.secret=bar</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">Before we can configure our application, we have to create a few common components. Let’s find out what these components are, and how we can create them.</p>
<h2>Creating the Common Components</h2><p class="cye-lm-tag">We have to create three components which are used during the authentication process. These components are:</p>
<ul><li>We have create a class which contains the user details of an authenticated user.</li><li>We have to create a class which implements the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/core/userdetails/UserDetailsService.html" target="_blank"><em>UserDetailsService</em></a> interface. This class is used to load user information when the user uses form login.</li><li>We have to create a class which implements the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/security/SocialUserDetailsService.html" target="_blank"><em>SocialUserDetailsService</em></a> interface. This class is used to load user information when the user uses social sign in.</li></ul><p class="cye-lm-tag">Let’s move on and find out how we can implement these classes.</p>
<h3>Creating the User Details Class</h3><p class="cye-lm-tag">We have to take the following requirements into account when we are creating the class which contains the user details of the authenticated user:</p>
<ul><li>The class which stores the user details of a user who uses form login must implement the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/core/userdetails/UserDetails.html" target="_blank"><em>UserDetails</em></a> interface.</li><li>The class which stores the user details of a user who uses social sign in must implement the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/security/SocialUserDetails.html" target="_blank"><em>SocialUserDetails</em></a> interface.</li></ul><p class="cye-lm-tag">Spring Social has a <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/security/SocialUser.html" target="_blank"><em>SocialUser</em></a> class which fulfils both of these requirements. However, often we want to add application specific information to our user details class.</p>
<p class="cye-lm-tag">We can do this by following these steps:</p>
<ol><li>Create the user details class.</li><li>Extend the <em>SocialUser</em> class.</li><li>Add application specific fields to the created class. The application specific fields of our example application are: <em>id</em>, <em>firstName</em>, <em>lastName</em>, <em>role</em>, and <em>socialSignInProvider</em>.</li><li>Create a constructor which takes the username, password and a collection of granted authorities as parameters. Pass these parameters forward to the constructor of the <em>SocialUser</em> class.</li><li>Create getters for application specific fields.</li><li>Add an inner builder class which is used to build new <em>ExampleUserDetails</em> objects.</li></ol><p class="cye-lm-tag">The source code of our user details class looks as follows:</p>
<div><div id="highlighter_632996" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div><div class="line number74 index73 alt1">74</div><div class="line number75 index74 alt2">75</div><div class="line number76 index75 alt1">76</div><div class="line number77 index76 alt2">77</div><div class="line number78 index77 alt1">78</div><div class="line number79 index78 alt2">79</div><div class="line number80 index79 alt1">80</div><div class="line number81 index80 alt2">81</div><div class="line number82 index81 alt1">82</div><div class="line number83 index82 alt2">83</div><div class="line number84 index83 alt1">84</div><div class="line number85 index84 alt2">85</div><div class="line number86 index85 alt1">86</div><div class="line number87 index86 alt2">87</div><div class="line number88 index87 alt1">88</div><div class="line number89 index88 alt2">89</div><div class="line number90 index89 alt1">90</div><div class="line number91 index90 alt2">91</div><div class="line number92 index91 alt1">92</div><div class="line number93 index92 alt2">93</div><div class="line number94 index93 alt1">94</div><div class="line number95 index94 alt2">95</div><div class="line number96 index95 alt1">96</div><div class="line number97 index96 alt2">97</div><div class="line number98 index97 alt1">98</div><div class="line number99 index98 alt2">99</div><div class="line number100 index99 alt1">100</div><div class="line number101 index100 alt2">101</div><div class="line number102 index101 alt1">102</div><div class="line number103 index102 alt2">103</div><div class="line number104 index103 alt1">104</div><div class="line number105 index104 alt2">105</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.apache.commons.lang3.builder.ToStringBuilder;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.GrantedAuthority;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.authority.SimpleGrantedAuthority;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.security.SocialUser;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">java.util.Collection;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.HashSet;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">java.util.Set;</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">ExampleUserDetails </code><code class="java keyword">extends</code> <code class="java plain">SocialUser {</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Long id;</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String firstName;</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String lastName;</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Role role;</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">SocialMediaService socialSignInProvider;</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">ExampleUserDetails(String username, String password, Collection&lt;? </code><code class="java keyword">extends</code> <code class="java plain">GrantedAuthority&gt; authorities) {</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">super</code><code class="java plain">(username, password, authorities);</code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Getters are omitted for the sake of clarity.</code></div><div class="line number27 index26 alt2">&nbsp;</div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">class</code> <code class="java plain">Builder {</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Long id;</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String username;</code></div><div class="line number33 index32 alt2">&nbsp;</div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String firstName;</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String lastName;</code></div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String password;</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Role role;</code></div><div class="line number41 index40 alt2">&nbsp;</div><div class="line number42 index41 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">SocialMediaService socialSignInProvider;</code></div><div class="line number43 index42 alt2">&nbsp;</div><div class="line number44 index43 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Set&lt;GrantedAuthority&gt; authorities;</code></div><div class="line number45 index44 alt2">&nbsp;</div><div class="line number46 index45 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder() {</code></div><div class="line number47 index46 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.authorities = </code><code class="java keyword">new</code> <code class="java plain">HashSet&lt;&gt;();</code></div><div class="line number48 index47 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number49 index48 alt2">&nbsp;</div><div class="line number50 index49 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder firstName(String firstName) {</code></div><div class="line number51 index50 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.firstName = firstName;</code></div><div class="line number52 index51 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">this</code><code class="java plain">;</code></div><div class="line number53 index52 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder id(Long id) {</code></div><div class="line number56 index55 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.id = id;</code></div><div class="line number57 index56 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">this</code><code class="java plain">;</code></div><div class="line number58 index57 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number59 index58 alt2">&nbsp;</div><div class="line number60 index59 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder lastName(String lastName) {</code></div><div class="line number61 index60 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.lastName = lastName;</code></div><div class="line number62 index61 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">this</code><code class="java plain">;</code></div><div class="line number63 index62 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number64 index63 alt1">&nbsp;</div><div class="line number65 index64 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder password(String password) {</code></div><div class="line number66 index65 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(password == </code><code class="java keyword">null</code><code class="java plain">) {</code></div><div class="line number67 index66 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">password = </code><code class="java string">"SocialUser"</code><code class="java plain">;</code></div><div class="line number68 index67 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number69 index68 alt2">&nbsp;</div><div class="line number70 index69 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.password = password;</code></div><div class="line number71 index70 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">this</code><code class="java plain">;</code></div><div class="line number72 index71 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number73 index72 alt2">&nbsp;</div><div class="line number74 index73 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder role(Role role) {</code></div><div class="line number75 index74 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.role = role;</code></div><div class="line number76 index75 alt1">&nbsp;</div><div class="line number77 index76 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">SimpleGrantedAuthority authority = </code><code class="java keyword">new</code> <code class="java plain">SimpleGrantedAuthority(role.toString());</code></div><div class="line number78 index77 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.authorities.add(authority);</code></div><div class="line number79 index78 alt2">&nbsp;</div><div class="line number80 index79 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">this</code><code class="java plain">;</code></div><div class="line number81 index80 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number82 index81 alt1">&nbsp;</div><div class="line number83 index82 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder socialSignInProvider(SocialMediaService socialSignInProvider) {</code></div><div class="line number84 index83 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.socialSignInProvider = socialSignInProvider;</code></div><div class="line number85 index84 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">this</code><code class="java plain">;</code></div><div class="line number86 index85 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number87 index86 alt2">&nbsp;</div><div class="line number88 index87 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Builder username(String username) {</code></div><div class="line number89 index88 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.username = username;</code></div><div class="line number90 index89 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">this</code><code class="java plain">;</code></div><div class="line number91 index90 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number92 index91 alt1">&nbsp;</div><div class="line number93 index92 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">ExampleUserDetails build() {</code></div><div class="line number94 index93 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ExampleUserDetails user = </code><code class="java keyword">new</code> <code class="java plain">ExampleUserDetails(username, password, authorities);</code></div><div class="line number95 index94 alt2">&nbsp;</div><div class="line number96 index95 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">user.id = id;</code></div><div class="line number97 index96 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">user.firstName = firstName;</code></div><div class="line number98 index97 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">user.lastName = lastName;</code></div><div class="line number99 index98 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">user.role = role;</code></div><div class="line number100 index99 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">user.socialSignInProvider = socialSignInProvider;</code></div><div class="line number101 index100 alt2">&nbsp;</div><div class="line number102 index101 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">user;</code></div><div class="line number103 index102 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number104 index103 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number105 index104 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">The <em>Role</em> is a simple enum which specifies the “legal” user roles of our example application. Its source code looks as follows:</p>
<div><div id="highlighter_690157" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">enum</code> <code class="java plain">Role {</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ROLE_USER</code></div><div class="line number3 index2 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">The SocialMediaService is an enum which identifies the SaaS API provider which was used when user created an user account to our example application. Its source code looks as follows:</p>
<div><div id="highlighter_18447" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">enum</code> <code class="java plain">SocialMediaService {</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">FACEBOOK,</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">TWITTER</code></div><div class="line number4 index3 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h3>Implementing the UserDetailsService interface</h3><p class="cye-lm-tag">We can create our own implementation of the <em>UserDetailsService</em> interface by following these steps:</p>
<ol><li>Create a class which implements the <em>UserDetailsService</em> interface.</li><li>Add a <em>UserRepository</em> field to created class.</li><li>Create a constructor which takes a <em>UserRepository</em> as a constructor argument and annotate the constructor with the <em>@Autowired</em> annotation.</li><li>Implement the <em>loadUserByUsername(String username)</em> method of the <em>UserDetailsService</em> interface. The implementation of this method consists of following steps:<ol><li>Get the user by calling the <em>findByEmail()</em> method of the <em>UserRepository</em> interface. This method returns the user whose email matches with the username given as a method parameter.</li><li>If the user is not found, throw a new <em>UsernameNotFoundException</em>.</li><li>Create a new <em>ExampleUserDetails</em> object.</li><li>Return the created object.</li></ol></li></ol><p class="cye-lm-tag">The source code of the <em>RepositoryUserDetailsService</em> class looks as follows:</p>
<div><div id="highlighter_69688" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.beans.factory.annotation.Autowired;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.userdetails.UserDetails;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.userdetails.UserDetailsService;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.userdetails.UsernameNotFoundException;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">RepositoryUserDetailsService </code><code class="java keyword">implements</code> <code class="java plain">UserDetailsService {</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">UserRepository repository;</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Autowired</code></div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">RepositoryUserDetailsService(UserRepository repository) {</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.repository = repository;</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">UserDetails loadUserByUsername(String username) </code><code class="java keyword">throws</code> <code class="java plain">UsernameNotFoundException {</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">User user = repository.findByEmail(username);</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(user == </code><code class="java keyword">null</code><code class="java plain">) {</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">throw</code> <code class="java keyword">new</code> <code class="java plain">UsernameNotFoundException(</code><code class="java string">"No user found with username: "</code> <code class="java plain">+ username);</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ExampleUserDetails principal = ExampleUserDetails.getBuilder()</code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.firstName(user.getFirstName())</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.id(user.getId())</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.lastName(user.getLastName())</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.password(user.getPassword())</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.role(user.getRole())</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.socialSignInProvider(user.getSignInProvider())</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.username(user.getEmail())</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.build();</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">principal;</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number35 index34 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">The <em>UserRepository</em> is a simple Spring Data JPA repository, and its source code looks as follows:</p>
<div><div id="highlighter_928561" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.jpa.repository.JpaRepository;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">public</code> <code class="java keyword">interface</code> <code class="java plain">UserRepository </code><code class="java keyword">extends</code> <code class="java plain">JpaRepository&lt;User, Long&gt; {</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">User findByEmail(String email);</code></div><div class="line number6 index5 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">The <em>User</em> is the only entity of our example application, and it contains the information of a user who has created user account to our example application. The relevant part of its source code looks as follows:</p>
<div><div id="highlighter_782808" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.*;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java color1">@Entity</code></div><div class="line number4 index3 alt1"><code class="java color1">@Table</code><code class="java plain">(name = </code><code class="java string">"user_accounts"</code><code class="java plain">)</code></div><div class="line number5 index4 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">User </code><code class="java keyword">extends</code> <code class="java plain">BaseEntity&lt;Long&gt; {</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Id</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@GeneratedValue</code><code class="java plain">(strategy = GenerationType.AUTO)</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Long id;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"email"</code><code class="java plain">, length = </code><code class="java value">100</code><code class="java plain">, nullable = </code><code class="java keyword">false</code><code class="java plain">, unique = </code><code class="java keyword">true</code><code class="java plain">)</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String email;</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"first_name"</code><code class="java plain">, length = </code><code class="java value">100</code><code class="java plain">,nullable = </code><code class="java keyword">false</code><code class="java plain">)</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String firstName;</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"last_name"</code><code class="java plain">, length = </code><code class="java value">100</code><code class="java plain">, nullable = </code><code class="java keyword">false</code><code class="java plain">)</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String lastName;</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"password"</code><code class="java plain">, length = </code><code class="java value">255</code><code class="java plain">)</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String password;</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Enumerated</code><code class="java plain">(EnumType.STRING)</code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"role"</code><code class="java plain">, length = </code><code class="java value">20</code><code class="java plain">, nullable = </code><code class="java keyword">false</code><code class="java plain">)</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Role role;</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Enumerated</code><code class="java plain">(EnumType.STRING)</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"sign_in_provider"</code><code class="java plain">, length = </code><code class="java value">20</code><code class="java plain">)</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">SocialMediaService signInProvider;</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">User() {</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java comments">//Getters and other methods are omitted for the sake of clarity.</code></div><div class="line number36 index35 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h3>Implementing the SocialUserDetailsService interface</h3><p class="cye-lm-tag">We can implement the <em>SocialUserDetailsService</em> interface by following these steps:</p>
<ol><li>Create a class which implements the <em>SocialUserDetailsService</em>.</li><li>Add a <em>UserDetailsService</em> field to the created class.</li><li>Create a constructor which takes a <em>UserDetailsService</em> object as a constructor parameter, and annotate the constructor with the <em>@Autowired</em> annotation.</li><li>Implement the <em>loadUserByUserId(String userId)</em> method of the <em>SocialUserDetailsInterface</em>.</li><li>Get the correct <em>UserDetails</em> object by calling the <em>loadUserByUsername()</em> method and pass the user id as a method parameter. We can do this because our application uses the username of the user as the user id.</li><li>Cast the returned object to <em>SocialUserDetails</em> object and return it.</li></ol><p class="cye-lm-tag">The source code of the <em>SimpleSocialUserDetailsService</em> class looks as follows:</p>
<div><div id="highlighter_652006" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.dao.DataAccessException;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.userdetails.UserDetails;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.userdetails.UserDetailsService;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.userdetails.UsernameNotFoundException;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.security.SocialUser;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.security.SocialUserDetails;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.security.SocialUserDetailsService;</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">SimpleSocialUserDetailsService </code><code class="java keyword">implements</code> <code class="java plain">SocialUserDetailsService {</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">UserDetailsService userDetailsService;</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">SimpleSocialUserDetailsService(UserDetailsService userDetailsService) {</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.userDetailsService = userDetailsService;</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">SocialUserDetails loadUserByUserId(String userId) </code><code class="java keyword">throws</code> <code class="java plain">UsernameNotFoundException, DataAccessException {</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">UserDetails userDetails = userDetailsService.loadUserByUsername(userId);</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">(SocialUserDetails) userDetails;</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number23 index22 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">That is all. We are now ready to configure the application context of our application. Let’s find out how we can do that.</p>
<h2 id="application-context-configuration">Configuring the Application Context</h2><p class="cye-lm-tag">This section describes how we can configure the application context of our example application by using Java configuration. The application context configuration has been divided into multiple configuration classes by following these guidelines:</p>
<ol><li>Each configuration class contains configuration which is associated with a specific part of our example application. This make it easy to find out the relevant configuration if we have to check something out or change something a few months (or years) after we created the initial configuration.</li><li>The configuration has been divided in a way which makes it easy to write unit tests for the web layer by using <a href="/spring-mvc-test-tutorial/">Spring MVC Test</a>. We will talk more about this in the third part of this tutorial where we will write unit tests for the web layer of our application.</li><li>The configuration makes it easy remove dependencies to external resources when we are writing integration tests for our application. We will talk more about this in the fourth part of this tutorial which describes how we can write integration tests for our application.</li></ol><div class="note">If you want to use XML configuration, you can take look at the example application of this blog post which has a <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal/src/main/resources" target="_blank">working XML configuration</a> as well (no web.xml though).</div><p class="cye-lm-tag">Let’s start by configuring the persistence layer of our application.</p>
<h3>Configuring the Persistence Layer</h3><p class="cye-lm-tag">The persistence layer of our application stores the user account information and provides a way to access this information. This important for two reasons:</p>
<ul><li>We can provide a way to sign in by using username and password.</li><li>We can store application specific information and link this information to the user who uses social sign in.</li></ul><p class="cye-lm-tag">Let’s find out how we can configure it by using both Java configuration class.</p>
<div class="note">The persistence layer of example application uses Spring Data JPA 1.3.4. I will keep this section as thin as possible. If you want to learn more about Spring Data JPA, you can read my <a href="/spring-data-jpa-tutorial/">Spring Data JPA tutorial</a>. I have also written a <a href="/books/spring-data/">book about Spring Data</a> which should help you to get started in no time.</div><p class="cye-lm-tag">We can configure our persistence layer by following these steps:</p>
<ol><li>Create the configuration class and annotate the created class with the <em>@Configuration</em> annotation.</li><li>Annotate the class with the <em>@EnableJpaRepositories</em> annotation and set the base package of our Spring Data JPA repositories.</li><li>Enable the Spring transaction management by annotating the configuration class with the <em>@EnableTransactionManagement</em> annotation.</li><li>Add an <em>Environment</em> field to the class and annotate the field with the <em>@Autowired</em> annotation. We don’t need to configure the properties file by using the <em>@PropertySource</em> annotation because it is already configured in the “parent” application context configuration class.</li><li>Configure the data source bean. This bean provides database connections to the entity manager but it has also another purpose. It is used by Spring Social when it persists connections to the database and loads them from the database.</li><li>Configure the transaction manager bean.</li><li>Configure the entity manager factory bean.</li></ol><p class="cye-lm-tag">The source code of the <em>PersistenceContext</em> class looks as follows:</p>
<div><div id="highlighter_182784" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">com.jolbox.bonecp.BoneCPDataSource;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.Bean;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.Configuration;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.core.env.Environment;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.data.jpa.repository.config.EnableJpaRepositories;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.orm.jpa.JpaTransactionManager;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.transaction.annotation.EnableTransactionManagement;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">javax.annotation.Resource;</code></div><div class="line number12 index11 alt1"><code class="java keyword">import</code> <code class="java plain">javax.sql.DataSource;</code></div><div class="line number13 index12 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.Properties;</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="java color1">@Configuration</code></div><div class="line number16 index15 alt1"><code class="java color1">@EnableJpaRepositories</code><code class="java plain">(basePackages = {</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"net.petrikainulainen.spring.social.signinmvc.user.repository"</code></div><div class="line number18 index17 alt1"><code class="java plain">})</code></div><div class="line number19 index18 alt2"><code class="java color1">@EnableTransactionManagement</code></div><div class="line number20 index19 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">PersistenceContext {</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Resource</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Environment env;</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">DataSource dataSource() {</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">BoneCPDataSource dataSource = </code><code class="java keyword">new</code> <code class="java plain">BoneCPDataSource();</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">dataSource.setDriverClass(env.getRequiredProperty(</code><code class="java string">"db.driver"</code><code class="java plain">));</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">dataSource.setJdbcUrl(env.getRequiredProperty(</code><code class="java string">"db.url"</code><code class="java plain">));</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">dataSource.setUsername(env.getRequiredProperty(</code><code class="java string">"db.username"</code><code class="java plain">));</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">dataSource.setPassword(env.getRequiredProperty(</code><code class="java string">"db.password"</code><code class="java plain">));</code></div><div class="line number33 index32 alt2">&nbsp;</div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">dataSource;</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number36 index35 alt1">&nbsp;</div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">JpaTransactionManager transactionManager() {</code></div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">JpaTransactionManager transactionManager = </code><code class="java keyword">new</code> <code class="java plain">JpaTransactionManager();</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">transactionManager.setEntityManagerFactory(entityManagerFactory().getObject());</code></div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">transactionManager;</code></div><div class="line number42 index41 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number43 index42 alt2">&nbsp;</div><div class="line number44 index43 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number45 index44 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">LocalContainerEntityManagerFactoryBean entityManagerFactory() {</code></div><div class="line number46 index45 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = </code><code class="java keyword">new</code> <code class="java plain">LocalContainerEntityManagerFactoryBean();</code></div><div class="line number47 index46 alt2">&nbsp;</div><div class="line number48 index47 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">entityManagerFactoryBean.setDataSource(dataSource());</code></div><div class="line number49 index48 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">entityManagerFactoryBean.setJpaVendorAdapter(</code><code class="java keyword">new</code> <code class="java plain">HibernateJpaVendorAdapter());</code></div><div class="line number50 index49 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">entityManagerFactoryBean.setPackagesToScan({</code></div><div class="line number51 index50 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"net.petrikainulainen.spring.social.signinmvc.common.model"</code><code class="java plain">,</code></div><div class="line number52 index51 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"net.petrikainulainen.spring.social.signinmvc.user.model"</code></div><div class="line number53 index52 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">});</code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Properties jpaProperties = </code><code class="java keyword">new</code> <code class="java plain">Properties();</code></div><div class="line number56 index55 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">jpaProperties.put(</code><code class="java string">"hibernate.dialect"</code><code class="java plain">, env.getRequiredProperty(</code><code class="java string">"hibernate.dialect"</code><code class="java plain">));</code></div><div class="line number57 index56 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">jpaProperties.put(</code><code class="java string">"hibernate.format_sql"</code><code class="java plain">, env.getRequiredProperty(</code><code class="java string">"hibernate.format_sql"</code><code class="java plain">));</code></div><div class="line number58 index57 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">jpaProperties.put(</code><code class="java string">"hibernate.hbm2ddl.auto"</code><code class="java plain">, env.getRequiredProperty(</code><code class="java string">"hibernate.hbm2ddl.auto"</code><code class="java plain">));</code></div><div class="line number59 index58 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">jpaProperties.put(</code><code class="java string">"hibernate.ejb.naming_strategy"</code><code class="java plain">, env.getRequiredProperty(</code><code class="java string">"hibernate.ejb.naming_strategy"</code><code class="java plain">));</code></div><div class="line number60 index59 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">jpaProperties.put(</code><code class="java string">"hibernate.show_sql"</code><code class="java plain">, env.getRequiredProperty(</code><code class="java string">"hibernate.show_sql"</code><code class="java plain">));</code></div><div class="line number61 index60 alt2">&nbsp;</div><div class="line number62 index61 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">entityManagerFactoryBean.setJpaProperties(jpaProperties);</code></div><div class="line number63 index62 alt2">&nbsp;</div><div class="line number64 index63 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">entityManagerFactoryBean;</code></div><div class="line number65 index64 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number66 index65 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">Let’s move on and find out how we can create the security configuration for our application.</p>
<h3>Configuring Spring Security</h3><p class="cye-lm-tag">Spring Security provides authentication mechanism for users who uses either form login or social sign in, and it is also responsible of authorization.</p>
<p class="cye-lm-tag">We can configure Spring Security by following these steps:</p>
<ol><li>Create the configuration class and annotate the created class with the <em>@Configuration</em> annotation.</li><li>Annotate the class with the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/config/annotation/web/configuration/EnableWebSecurity.html" target="_blank"><em>@EnableWebSecurity</em></a> annotation. This makes it possible to configure Spring Security by implementing the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/config/annotation/web/WebSecurityConfigurer.html" target="_blank"><em>WebSecurityConfigurer</em></a> interface.</li><li>Ensure that our configuration class extends the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" target="_blank"><em>WebSecurityConfigurerAdapter</em></a> class which is a base class for creating <em>WebSecurityConfigurer</em> instances. After we have done this, we can customize the security configuration by overriding methods.</li><li>Add an <em>UserRepository</em> field to the configuration and annotate the field with the <em>@Autowired</em> annotation.</li><li>Override the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html#configure%28org.springframework.security.config.annotation.web.builders.WebSecurity%29" target="_blank"><em>configure(WebSecurity web)</em></a> method of the <em>WebSecurityConfigurerAdapter</em> class. Ensure that Spring Security ignores requests made to static resources such as CSS and Javascript files.</li><li>Override the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html#configure%28org.springframework.security.config.annotation.web.builders.HttpSecurity%29" target="_blank"><em>configure(HttpSecurity http)</em></a> method of the <em>WebSecurityConfigurerAdapter</em> class and implement it by following these steps:<ol><li>Configure form login by following these steps:<ol><li>Set the login page url to ‘/login’.</li><li>Set the url which processes login form submissions to ‘/login/authenticate’.</li><li>Set the login failure url to ‘/login?error=bad_credentials’.</li></ol></li><li>Configure the logout function by following these steps:<ol><li>Ensure that a cookie called <em>JSESSIONID</em> is deleted after logout.</li><li>Set the logout url to ‘/logout’.</li><li>Set the logout success url to ‘/login’.</li></ol></li><li>Configure url based authorization. The main point of this phase is to ensure that anonymous users can access all urls which are related to the sign in / registration process, and protect the rest of our application from anonymous users.</li><li>Add the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/security/SocialAuthenticationFilter.html" target="_blank"><em>SocialAuthenticationFilter</em></a> to the Spring Security filter chain. We can do this by creating a new <em>SpringSocialConfigurer</em> object and ensuring that this object is used when Spring Security is configured.</li></ol></li><li>Configure the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/crypto/password/PasswordEncoder.html" target="_blank"><em>PasswordEncoder</em></a> bean which is used to hash the password of the user (if the user uses form registration and login). We can do this by creating a new <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.html" target="_blank"><em>BCryptPasswordEncoder</em></a> object and returning the created object.</li><li>Configure the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/core/userdetails/UserDetailsService.html" target="_blank"><em>UserDetailsService</em></a> bean. We can do this by creating a new <em>RepositoryUserDetailsService</em> object and passing the <em>UserRepository</em> as a constructor argument.</li><li>Override the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html#configure%28org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder%29" target="_blank"><em>configure(AuthenticationManagerBuilder auth)</em></a> method of the <em>WebSecurityConfigurerAdapter</em> class. We use this method for configuring authentication requests if the user uses form login. Implement this method by following these steps:<ol><li>Pass the <em>UserDetailsService</em> bean to the <em>AuthenticationManagerBuilder</em> object given as a method parameter.</li><li>Pass the <em>PasswordEncoder</em> bean to the <em>AuthenticationManagerBuilder</em> object given as a method parameter.</li></ol></li><li>Configure the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/security/SocialUserDetailsService.html" target="_blank"><em>SocialUserDetailsService</em></a> bean. We can do this by creating a new <em>SimpleSocialUserDetailsService</em> object and passing the <em>UserDetailsService</em> bean as a constructor argument. This bean loads the user specific data when social sign in is used.</li></ol><p class="cye-lm-tag">The source code of our application context configuration class looks as follows:</p>
<div><div id="highlighter_144788" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div><div class="line number74 index73 alt1">74</div><div class="line number75 index74 alt2">75</div><div class="line number76 index75 alt1">76</div><div class="line number77 index76 alt2">77</div><div class="line number78 index77 alt1">78</div><div class="line number79 index78 alt2">79</div><div class="line number80 index79 alt1">80</div><div class="line number81 index80 alt2">81</div><div class="line number82 index81 alt1">82</div><div class="line number83 index82 alt2">83</div><div class="line number84 index83 alt1">84</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.beans.factory.annotation.Autowired;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.ApplicationContext;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.Bean;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.ComponentScan;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.Configuration;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.config.annotation.web.builders.HttpSecurity;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.config.annotation.web.builders.WebSecurity;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</code></div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</code></div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.core.userdetails.UserDetailsService;</code></div><div class="line number12 index11 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</code></div><div class="line number13 index12 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.crypto.password.PasswordEncoder;</code></div><div class="line number14 index13 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.security.SocialUserDetailsService;</code></div><div class="line number15 index14 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.security.SpringSocialConfigurer;</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="java color1">@Configuration</code></div><div class="line number18 index17 alt1"><code class="java color1">@EnableWebSecurity</code></div><div class="line number19 index18 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">SecurityContext </code><code class="java keyword">extends</code> <code class="java plain">WebSecurityConfigurerAdapter {</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Autowired</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">UserRepository userRepository;</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">configure(WebSecurity web) </code><code class="java keyword">throws</code> <code class="java plain">Exception {</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">web</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Spring Security ignores request to static resources such as CSS or JS files.</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.ignoring()</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.antMatchers(</code><code class="java string">"/static/**"</code><code class="java plain">);</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">protected</code> <code class="java keyword">void</code> <code class="java plain">configure(HttpSecurity http) </code><code class="java keyword">throws</code> <code class="java plain">Exception {</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">http</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Configures form login</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.formLogin()</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.loginPage(</code><code class="java string">"/login"</code><code class="java plain">)</code></div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.loginProcessingUrl(</code><code class="java string">"/login/authenticate"</code><code class="java plain">)</code></div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.failureUrl(</code><code class="java string">"/login?error=bad_credentials"</code><code class="java plain">)</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Configures the logout function</code></div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.and()</code></div><div class="line number42 index41 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.logout()</code></div><div class="line number43 index42 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.deleteCookies(</code><code class="java string">"JSESSIONID"</code><code class="java plain">)</code></div><div class="line number44 index43 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.logoutUrl(</code><code class="java string">"/logout"</code><code class="java plain">)</code></div><div class="line number45 index44 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.logoutSuccessUrl(</code><code class="java string">"/login"</code><code class="java plain">)</code></div><div class="line number46 index45 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Configures url based authorization</code></div><div class="line number47 index46 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.and()</code></div><div class="line number48 index47 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.authorizeRequests()</code></div><div class="line number49 index48 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Anyone can access the urls</code></div><div class="line number50 index49 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.antMatchers(</code></div><div class="line number51 index50 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"/auth/**"</code><code class="java plain">,</code></div><div class="line number52 index51 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"/login"</code><code class="java plain">,</code></div><div class="line number53 index52 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"/signup/**"</code><code class="java plain">,</code></div><div class="line number54 index53 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"/user/register/**"</code></div><div class="line number55 index54 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">).permitAll()</code></div><div class="line number56 index55 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//The rest of the our application is protected.</code></div><div class="line number57 index56 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.antMatchers(</code><code class="java string">"/**"</code><code class="java plain">).hasRole(</code><code class="java string">"USER"</code><code class="java plain">)</code></div><div class="line number58 index57 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Adds the SocialAuthenticationFilter to Spring Security's filter chain.</code></div><div class="line number59 index58 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.and()</code></div><div class="line number60 index59 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.apply(</code><code class="java keyword">new</code> <code class="java plain">SpringSocialConfigurer());</code></div><div class="line number61 index60 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number62 index61 alt1">&nbsp;</div><div class="line number63 index62 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number64 index63 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">protected</code> <code class="java keyword">void</code> <code class="java plain">configure(AuthenticationManagerBuilder auth) </code><code class="java keyword">throws</code> <code class="java plain">Exception {</code></div><div class="line number65 index64 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">auth</code></div><div class="line number66 index65 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.userDetailsService(userDetailsService())</code></div><div class="line number67 index66 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">.passwordEncoder(passwordEncoder());</code></div><div class="line number68 index67 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number69 index68 alt2">&nbsp;</div><div class="line number70 index69 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number71 index70 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">PasswordEncoder passwordEncoder() {</code></div><div class="line number72 index71 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">BCryptPasswordEncoder(</code><code class="java value">10</code><code class="java plain">);</code></div><div class="line number73 index72 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number74 index73 alt1">&nbsp;</div><div class="line number75 index74 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number76 index75 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">SocialUserDetailsService socialUserDetailsService() {</code></div><div class="line number77 index76 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">SimpleSocialUserDetailsService(userDetailsService());</code></div><div class="line number78 index77 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number79 index78 alt2">&nbsp;</div><div class="line number80 index79 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number81 index80 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">UserDetailsService userDetailsService() {</code></div><div class="line number82 index81 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">RepositoryUserDetailsService(userRepository);</code></div><div class="line number83 index82 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number84 index83 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">Let’s move on and find out how we can configure Spring Social.</p>
<h3>Configuring Spring Social</h3><p class="cye-lm-tag">Spring Social provides integrations with SaaS API providers such as Facebook and Twitter. We can configure Spring Social by following these steps:</p>
<ol><li>Create the application context configuration class which implements the <em>SocialConfigurer</em> interface and annotate the created class with the <em>@Configuration</em> annotation. The SocialConfigurer interface declares callback methods which can be used to configure Spring Social.</li><li>Annotate the class with the <em>@EnableSocial</em> annotation. This enables Spring Social and imports the <em>SocialConfiguration</em> configuration class.</li><li>Add a <a href="http://docs.oracle.com/javase/6/docs/api/javax/sql/DataSource.html" target="_blank"><em>DataSource</em></a> field to the configuration class and annotate the field with the <a href="http://docs.spring.io/spring/docs/3.2.x/javadoc-api/org/springframework/beans/factory/annotation/Autowired.html" target="_blank"><em>@Autowired</em></a> annotation.</li><li>Add the <em>addConnectionFactories()</em> method of the <em>SocialConfigurer</em> interface to the created configuration class. This method takes two method parameters which are described in the following:<ol><li>The first parameter is a <em>ConnectionFactoryConfigurer</em> object which can be used to register connection factories.</li><li>The second parameter is an <a href="http://docs.spring.io/spring/docs/3.2.x/javadoc-api/org/springframework/core/env/Environment.html" target="_blank"><em>Environment</em></a> object which represents the environment in which our example application is running.</li></ol></li><li>Implement the <em>addConnectionFactories()</em> method by following these steps:<ol><li>Create a new <a href="http://docs.spring.io/spring-social-twitter/docs/1.1.x/apidocs/org/springframework/social/twitter/connect/TwitterConnectionFactory.html" target="_blank"><em>TwitterConnectionFactory</em></a> object, and pass the consumer key and the consumer secret as constructor arguments.</li><li>Register the created <em>TwitterConnectionFactory</em> object by calling the <em>addConnectionFactory()</em> method of the <em>ConnectionFactoryConfigurer</em> interface. Pass the created <em>TwitterConnectionFactory</em> object as a method parameter.</li><li>Create a new <a href="http://docs.spring.io/spring-social-facebook/docs/1.1.x/apidocs/org/springframework/social/facebook/connect/FacebookConnectionFactory.html" target="_blank"><em>FacebookConnectionFactory</em></a> object, and pass the application id and the application secret as constructor arguments.</li><li>Register the created <em>FacebookConnectionFactory</em> object by calling the <em>addConnectionFactory</em> method of the <em>ConnectionFactoryConfigurer</em> interface. Pass the created <em>FacebookConnectionFactory</em> object as a method parameter.</li></ol></li><li>Add the <em>getUserIdSource()</em> method of the <em>SocialConfigurer</em> interface to the created class. The <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/UserIdSource.html" target="_blank"><em>UserIdSource</em></a> object returned by this method is responsible of determining the correct account id of the user. Because our example application uses the username of the user as an account id, we have to implement this method by returning a new <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/security/AuthenticationNameUserIdSource.html" target="_blank"><em>AuthenticationNameUserIdSource</em></a> object.</li><li>Add the <em>getUsersConnectionRepository()</em> method of the <em>SocialConfigurer</em> interface to the created class. This method takes a <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/ConnectionFactoryLocator.html" target="_blank"><em>ConnectionFactoryLocator</em></a> object as a method parameter and returns a <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/UsersConnectionRepository.html" target="_blank"><em>UsersConnectionRepository</em></a> object.</li><li>Implement the <em>getUsersConnectionRepository()</em> method by following these steps:<ol><li>Create a new <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.html" target="_blank"><em>JdbcUsersConnectionRepository</em></a> object and pass the following objects as constructor arguments:<ol><li>The first argument is a <em>DataSource</em> object. We pass the value of the <em>dataSource</em> field as the first method parameter.</li><li>The second argument is a <em>ConnectionFactoryLocator</em> object. We pass the value of the <em>connectionFactoryLocator</em> method parameter as the second method parameter.</li><li>The third parameter is a <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/crypto/encrypt/TextEncryptor.html" target="_blank"><em>TextEncryptor</em></a> object which encrypts the authorization details of the connection established between a SaaS API provider and our application. We create this object by calling the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/crypto/encrypt/Encryptors.html#noOpText%28%29" target="_blank"><em>noOpText()</em></a> method of the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/crypto/encrypt/Encryptors.html" target="_blank"><em>Encryptors</em></a> class. This means that our example application stores these details as plaintext. This is handy during the development phase but <strong>we should not use it in production</strong>.</li></ol></li><li>Return the created object.</li></ol></li><li>Configure the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/web/ConnectController.html" target="_blank"><em>ConnectController</em></a> bean. The method which configures this bean has two parameters. The first parameter is the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/ConnectionFactoryLocator.html" target="_blank"><em>ConnectionFactoryLocator</em></a> bean. The second parameter is the used <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/ConnectionRepository.html" target="_blank"><em>ConnectionRepository</em></a> bean. Pass these parameters as constructor arguments when you are creating a new <em>ConnectController</em> object.</li></ol><p class="cye-lm-tag">The source code of our configuration class looks as follows:</p>
<div><div id="highlighter_47056" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.beans.factory.annotation.Autowired;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.*;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.core.env.Environment;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.security.crypto.encrypt.Encryptors;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.UserIdSource;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.config.annotation.ConnectionFactoryConfigurer;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.config.annotation.EnableSocial;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.config.annotation.SocialConfigurer;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.connect.ConnectionFactoryLocator;</code></div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.connect.ConnectionRepository;</code></div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.connect.UsersConnectionRepository;</code></div><div class="line number12 index11 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository;</code></div><div class="line number13 index12 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.connect.web.ConnectController;</code></div><div class="line number14 index13 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.facebook.connect.FacebookConnectionFactory;</code></div><div class="line number15 index14 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.security.AuthenticationNameUserIdSource;</code></div><div class="line number16 index15 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.social.twitter.connect.TwitterConnectionFactory;</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java keyword">import</code> <code class="java plain">javax.sql.DataSource;</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java color1">@Configuration</code></div><div class="line number21 index20 alt2"><code class="java color1">@EnableSocial</code></div><div class="line number22 index21 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">SocialContext </code><code class="java keyword">implements</code> <code class="java plain">SocialConfigurer {</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Autowired</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">DataSource dataSource;</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">addConnectionFactories(ConnectionFactoryConfigurer cfConfig, Environment env) {</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">cfConfig.addConnectionFactory(</code><code class="java keyword">new</code> <code class="java plain">TwitterConnectionFactory(</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">env.getProperty(</code><code class="java string">"twitter.consumer.key"</code><code class="java plain">),</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">env.getProperty(</code><code class="java string">"twitter.consumer.secret"</code><code class="java plain">)</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">));</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">cfConfig.addConnectionFactory(</code><code class="java keyword">new</code> <code class="java plain">FacebookConnectionFactory(</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">env.getProperty(</code><code class="java string">"facebook.app.id"</code><code class="java plain">),</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">env.getProperty(</code><code class="java string">"facebook.app.secret"</code><code class="java plain">)</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">));</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number38 index37 alt1">&nbsp;</div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">UserIdSource getUserIdSource() {</code></div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">AuthenticationNameUserIdSource();</code></div><div class="line number42 index41 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number43 index42 alt2">&nbsp;</div><div class="line number44 index43 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number45 index44 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">UsersConnectionRepository getUsersConnectionRepository(ConnectionFactoryLocator connectionFactoryLocator) {</code></div><div class="line number46 index45 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">JdbcUsersConnectionRepository(</code></div><div class="line number47 index46 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">dataSource,</code></div><div class="line number48 index47 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">connectionFactoryLocator,</code></div><div class="line number49 index48 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Encryptors.noOpText()</code></div><div class="line number50 index49 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">);</code></div><div class="line number51 index50 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number52 index51 alt1">&nbsp;</div><div class="line number53 index52 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number54 index53 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">ConnectController connectController(ConnectionFactoryLocator connectionFactoryLocator, ConnectionRepository connectionRepository) {</code></div><div class="line number55 index54 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">ConnectController(connectionFactoryLocator, connectionRepository);</code></div><div class="line number56 index55 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number57 index56 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">Our next step is to configure the web layer of our application. Let’s get to work.</p>
<h3>Configuring the Web Layer</h3><p class="cye-lm-tag">We can configure the web layer of our application by following these steps:</p>
<ol><li>Create the configuration class by following these steps:<ol><li>Extend the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html" target="_blank"><em>WebMvcConfigurerAdapter</em></a> class.</li><li>Annotate the created class with the <em>@Configuration</em> annotation.</li></ol></li><li>Ensure that all controller classes are found by annotating the class with the <em>@ComponentScan</em> annotation and setting the base packages of our controllers.</li><li>Enable the annotation driven web mvc by annotating the class with the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/config/annotation/EnableWebMvc.html" target="_blank"><em>@EnableWebMvc</em></a> annotation.</li><li>Ensure that static resources are served by container’s default servlet.<ol><li>Configure the static resources by overriding the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html#addResourceHandlers%28org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry%29" target="_blank"><em>addResourceHandlers()</em></a> method of the <em>WebMvcConfigurerAdapter</em> class.</li><li>Ensure that requests made to static resources are delegated forward to the container’s default servlet. This is done by overriding the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/config/annotation/WebMvcConfigurerAdapter.html#configureDefaultServletHandling%28org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer%29" target="_blank"><em>configureDefaultServletHandling()</em></a> method of the <em>WebMvcConfigurerAdapter</em> class.</li></ol></li><li>Configure the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.html" target="_blank">exception resolver</a> bean.</li><li>Configure the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/ViewResolver.html" target="_blank">ViewResolver</a> bean.</li></ol><p class="cye-lm-tag">The source code of the <em>WebAppContext</em> class looks as follows:</p>
<div><div id="highlighter_277237" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.Bean;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.ComponentScan;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.Configuration;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.ViewResolver;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.config.annotation.EnableWebMvc;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.handler.SimpleMappingExceptionResolver;</code></div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.view.InternalResourceViewResolver;</code></div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.view.JstlView;</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.Properties;</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="java color1">@Configuration</code></div><div class="line number16 index15 alt1"><code class="java color1">@ComponentScan</code><code class="java plain">(basePackages = {</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"net.petrikainulainen.spring.social.signinmvc.common.controller"</code><code class="java plain">,</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"net.petrikainulainen.spring.social.signinmvc.security.controller"</code><code class="java plain">,</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"net.petrikainulainen.spring.social.signinmvc.user.controller"</code></div><div class="line number20 index19 alt1"><code class="java plain">})</code></div><div class="line number21 index20 alt2"><code class="java color1">@EnableWebMvc</code></div><div class="line number22 index21 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">WebAppContext </code><code class="java keyword">extends</code> <code class="java plain">WebMvcConfigurerAdapter {</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">addResourceHandlers(ResourceHandlerRegistry registry) {</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">registry.addResourceHandler(</code><code class="java string">"/static/**"</code><code class="java plain">).addResourceLocations(</code><code class="java string">"/static/"</code><code class="java plain">);</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">configurer.enable();</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number33 index32 alt2">&nbsp;</div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">SimpleMappingExceptionResolver exceptionResolver() {</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">SimpleMappingExceptionResolver exceptionResolver = </code><code class="java keyword">new</code> <code class="java plain">SimpleMappingExceptionResolver();</code></div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Properties exceptionMappings = </code><code class="java keyword">new</code> <code class="java plain">Properties();</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">exceptionMappings.put(</code><code class="java string">"java.lang.Exception"</code><code class="java plain">, </code><code class="java string">"error/error"</code><code class="java plain">);</code></div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">exceptionMappings.put(</code><code class="java string">"java.lang.RuntimeException"</code><code class="java plain">, </code><code class="java string">"error/error"</code><code class="java plain">);</code></div><div class="line number42 index41 alt1">&nbsp;</div><div class="line number43 index42 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">exceptionResolver.setExceptionMappings(exceptionMappings);</code></div><div class="line number44 index43 alt1">&nbsp;</div><div class="line number45 index44 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Properties statusCodes = </code><code class="java keyword">new</code> <code class="java plain">Properties();</code></div><div class="line number46 index45 alt1">&nbsp;</div><div class="line number47 index46 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">statusCodes.put(</code><code class="java string">"error/404"</code><code class="java plain">, </code><code class="java string">"404"</code><code class="java plain">);</code></div><div class="line number48 index47 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">statusCodes.put(</code><code class="java string">"error/error"</code><code class="java plain">, </code><code class="java string">"500"</code><code class="java plain">);</code></div><div class="line number49 index48 alt2">&nbsp;</div><div class="line number50 index49 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">exceptionResolver.setStatusCodes(statusCodes);</code></div><div class="line number51 index50 alt2">&nbsp;</div><div class="line number52 index51 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">exceptionResolver;</code></div><div class="line number53 index52 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number56 index55 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">ViewResolver viewResolver() {</code></div><div class="line number57 index56 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">InternalResourceViewResolver viewResolver = </code><code class="java keyword">new</code> <code class="java plain">InternalResourceViewResolver();</code></div><div class="line number58 index57 alt1">&nbsp;</div><div class="line number59 index58 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">viewResolver.setViewClass(JstlView.</code><code class="java keyword">class</code><code class="java plain">);</code></div><div class="line number60 index59 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">viewResolver.setPrefix(</code><code class="java string">"/WEB-INF/jsp/"</code><code class="java plain">);</code></div><div class="line number61 index60 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">viewResolver.setSuffix(</code><code class="java string">".jsp"</code><code class="java plain">);</code></div><div class="line number62 index61 alt1">&nbsp;</div><div class="line number63 index62 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">viewResolver;</code></div><div class="line number64 index63 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number65 index64 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">Let’s find out how we can tie this all together and create a “parent” application context configuration class for our application.</p>
<h3>Tieing It All Together</h3><p class="cye-lm-tag">The last application context configuration class has three responsibilities:</p>
<ol><li>It configures general components used throughout our example application.</li><li>It ensures that the service classes of our application are found during the classpath scan.</li><li>It is the root application context configuration class of our application.</li></ol><p class="cye-lm-tag">We can create this configuration class by following these steps:</p>
<ol><li>Create the configuration class and annotate the created class with the <em>@Configuration</em> annotation.</li><li>Ensure that our service classes are found during the component scan by annotating the class with <em>@ComponentScan</em> annotation and setting the base package of our services.</li><li>Import the other application context configuration classes by annotating the class with the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/context/annotation/Import.html" target="_blank"><em>@Import</em></a> annotation.</li><li>Annotate the class with the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/context/annotation/PropertySource.html" target="_blank"><em>@PropertySource</em></a> annotation, and configure it to look for a properties file called <em>application.properties</em> from the classpath. This ensures that the configuration properties can be accessed in the imported application context configuration classes.</li><li>Configure the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/context/MessageSource.html" target="_blank"><em>MessageSource</em></a> bean.</li><li>Configure the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html" target="_blank"><em>PropertySourcesPlaceholderConfigurer</em></a> bean.</li></ol><p class="cye-lm-tag">The source code the <em>ExampleApplicationContext</em> class looks as follows:</p>
<div><div id="highlighter_596009" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.MessageSource;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.annotation.*;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.support.PropertySourcesPlaceholderConfigurer;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.context.support.ResourceBundleMessageSource;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java color1">@Configuration</code></div><div class="line number7 index6 alt2"><code class="java color1">@ComponentScan</code><code class="java plain">(basePackages = {</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java string">"net.petrikainulainen.spring.social.signinmvc.user.service"</code></div><div class="line number9 index8 alt2"><code class="java plain">})</code></div><div class="line number10 index9 alt1"><code class="java color1">@Import</code><code class="java plain">({WebAppContext.</code><code class="java keyword">class</code><code class="java plain">, PersistenceContext.</code><code class="java keyword">class</code><code class="java plain">, SecurityContext.</code><code class="java keyword">class</code><code class="java plain">, SocialContext.</code><code class="java keyword">class</code><code class="java plain">})</code></div><div class="line number11 index10 alt2"><code class="java color1">@PropertySource</code><code class="java plain">(</code><code class="java string">"classpath:application.properties"</code><code class="java plain">)</code></div><div class="line number12 index11 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">ExampleApplicationContext {</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">MessageSource messageSource() {</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ResourceBundleMessageSource messageSource = </code><code class="java keyword">new</code> <code class="java plain">ResourceBundleMessageSource();</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">messageSource.setBasename(</code><code class="java string">"i18n/messages"</code><code class="java plain">);</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">messageSource.setUseCodeAsDefaultMessage(</code><code class="java keyword">true</code><code class="java plain">);</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">messageSource;</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Bean</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">PropertySourcesPlaceholderConfigurer propertyPlaceHolderConfigurer() {</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">new</code> <code class="java plain">PropertySourcesPlaceholderConfigurer();</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number28 index27 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p class="cye-lm-tag">We have now configured the application context of our example application. However, we still have to configure our web application. Let’s see how we can do this by using Java configuration.</p>
<h2>Configuring the Web Application</h2><p class="cye-lm-tag">Our last step is to configure our example application. We can do this without <em>web.xml</em> as long as our application is deployed to a servlet 3.0 compliant container.</p>
<p class="cye-lm-tag">We can configure the web application by following these steps:</p>
<ol><li>Create a class which implements the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/WebApplicationInitializer.html" target="_blank"><em>WebApplicationInitializer</em></a> interface.</li><li>Configure our application by overriding the <em>onStartup()</em> method of the <em>WebApplicationInitializer</em> interface. We can implement this method by following these steps:<ol><li>Create the root context of the application and register the <em>ExampleApplicationContext</em> class to the created root context.</li><li>Configure the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/DispatcherServlet.html" target="_blank">dispatcher servlet</a>.</li><li>Configure <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/filter/CharacterEncodingFilter.html" target="_blank">character encoding filter</a>.</li><li>Configure the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/filter/DelegatingFilterProxy.html" target="_blank">Spring Security filter chain</a>.</li><li>Configure Sitemesh.</li><li>Add the <a href="http://docs.spring.io/spring/docs/3.2.4.RELEASE/javadoc-api/org/springframework/web/context/ContextLoaderListener.html" target="_blank">context loader listener</a> to the servlet context.</li></ol></li></ol><p class="cye-lm-tag">The source code of the <em>ExampleApplicationConfig</em> class looks as follows:</p>
<div><div id="highlighter_28283" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">org.sitemesh.config.ConfigurableSiteMeshFilter;</code></div><div class="line number2 index1 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.WebApplicationInitializer;</code></div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.context.ContextLoaderListener;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.context.support.AnnotationConfigWebApplicationContext;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.context.support.XmlWebApplicationContext;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.filter.CharacterEncodingFilter;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.filter.DelegatingFilterProxy;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">org.springframework.web.servlet.DispatcherServlet;</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">javax.servlet.*;</code></div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.EnumSet;</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">ExampleApplicationConfig </code><code class="java keyword">implements</code> <code class="java plain">WebApplicationInitializer {</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">onStartup(ServletContext servletContext) </code><code class="java keyword">throws</code> <code class="java plain">ServletException {</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">AnnotationConfigWebApplicationContext rootContext = </code><code class="java keyword">new</code> <code class="java plain">AnnotationConfigWebApplicationContext();</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">rootContext.register(ExampleApplicationContext.</code><code class="java keyword">class</code><code class="java plain">);</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ServletRegistration.Dynamic dispatcher = servletContext.addServlet(</code><code class="java string">"dispatcher"</code><code class="java plain">, </code><code class="java keyword">new</code> <code class="java plain">DispatcherServlet(rootContext));</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">dispatcher.setLoadOnStartup(</code><code class="java value">1</code><code class="java plain">);</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">dispatcher.addMapping(</code><code class="java string">"/"</code><code class="java plain">);</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">EnumSet&lt;DispatcherType&gt; dispatcherTypes = EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD);</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">CharacterEncodingFilter characterEncodingFilter = </code><code class="java keyword">new</code> <code class="java plain">CharacterEncodingFilter();</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">characterEncodingFilter.setEncoding(</code><code class="java string">"UTF-8"</code><code class="java plain">);</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">characterEncodingFilter.setForceEncoding(</code><code class="java keyword">true</code><code class="java plain">);</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">FilterRegistration.Dynamic characterEncoding = servletContext.addFilter(</code><code class="java string">"characterEncoding"</code><code class="java plain">, characterEncodingFilter);</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">characterEncoding.addMappingForUrlPatterns(dispatcherTypes, </code><code class="java keyword">true</code><code class="java plain">, </code><code class="java string">"/*"</code><code class="java plain">);</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">FilterRegistration.Dynamic security = servletContext.addFilter(</code><code class="java string">"springSecurityFilterChain"</code><code class="java plain">, </code><code class="java keyword">new</code> <code class="java plain">DelegatingFilterProxy());</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">security.addMappingForUrlPatterns(dispatcherTypes, </code><code class="java keyword">true</code><code class="java plain">, </code><code class="java string">"/*"</code><code class="java plain">);</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">FilterRegistration.Dynamic sitemesh = servletContext.addFilter(</code><code class="java string">"sitemesh"</code><code class="java plain">, </code><code class="java keyword">new</code> <code class="java plain">ConfigurableSiteMeshFilter());</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">sitemesh.addMappingForUrlPatterns(dispatcherTypes, </code><code class="java keyword">true</code><code class="java plain">, </code><code class="java string">"*.jsp"</code><code class="java plain">);</code></div><div class="line number38 index37 alt1">&nbsp;</div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">servletContext.addListener(</code><code class="java keyword">new</code> <code class="java plain">ContextLoaderListener(rootContext));</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number41 index40 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h2>What is Next?</h2><p class="cye-lm-tag">We have now successfully configured our example application by using Java configuration. This tutorial has taught us two things:</p>
<ul><li>We learned how we can implement the components required by Spring Security and Spring Social.</li><li>We learned to integrate Spring Security and Spring Social by using Java configuration.</li></ul><p class="cye-lm-tag">The next part of this tutorial describes how we can <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/">add registration and login functions to our example application</a>.</p>
<p class="cye-lm-tag">As always, the example application of this blog post is available <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal" target="_blank">at Github</a>.</p>
<div class="note">If you want to learn how to use Spring Social, you should read my <a href="/spring-social-tutorial/">Spring Social tutorial</a>.</div> <span id="tve_leads_end_content" style="display: block; visibility: hidden; border: 1px solid transparent;" class="cye-lm-tag"></span><div class="tve-leads-post-footer tve-tl-anim tve-leads-track-post_footer-11 tl-anim-instant tve-leads-triggered"><div class="tl-style" id="tve_20_set" data-state="11"><div class="tve-leads-conversion-object" data-tl-type="post_footer"><div class="tve_flt"><div id="tve_editor" class="tve_shortcode_editor"><div class="thrv-leads-form-box tve_no_drag tve_no_icons tve_element_hover thrv_wrapper tve_editor_main_content tve_20_set tve_teal tve_brdr_solid">
<div class="thrv_wrapper thrv_columns tve_clearfix" style="margin-top: 0;">
<div class="tve_colm tve_foc tve_df tve_ofo ">
<div style="width: 113px;" class="thrv_wrapper tve_image_caption aligncenter">
<span class="tve_image_frame cye-lm-tag">
<img class="tve_image" src="/wp-content/plugins/thrive-leads/editor-templates/_form_css/images/set_20_icon.png" style="width: 113px;" height="113" width="113">
</span>
</div>
</div>
<div class="tve_colm tve_tfo tve_df tve_lst">
<h2 style="color: #101010; font-size: 34px; margin-top: 25px;margin-bottom: 0;" class="rft">
GET FREE EBOOK<br></h2>
<p data-unit="px" style="color: rgb(0, 0, 0); font-size: 16px; margin-top: 0px; line-height: 24px;" class="cye-lm-tag">
Subscribe my email newsletter <span class="bold_text cye-lm-tag">AND</span> you will get my eBook: Writing Integration Tests for Spring Powered Repositories <span class="bold_text cye-lm-tag">FOR FREE</span>.</p>

</div>
</div>
<div class="thrv_wrapper thrv_contentbox_shortcode" data-tve-style="5">
<div class="tve_cb tve_cb5 tve_teal">
<div class="tve_cb_cnt">
<div data-tve-style="1" class="thrv_wrapper thrv_lead_generation tve_clearfix tve_red thrv_lead_generation_horizontal tve_2" data-inputs-count="2" style="margin-top: 0;margin-bottom: 0;">
<div style="display: none;" class="thrv_lead_generation_code"></div>
<input class="tve-lg-err-msg" value="{&quot;email&quot;:&quot;Please enter a valid email address&quot;,&quot;phone&quot;:&quot;Please enter a valid phone number&quot;,&quot;required&quot;:&quot;Name and Email fields are required&quot;}" type="hidden">
<div class="thrv_lead_generation_container tve_clearfix">
<div class="tve_lead_generated_inputs_container tve_clearfix">
<div class="tve_lead_fields_overlay"></div>
<form action="https://www.getdrip.com/forms/9536594/submissions" method="POST" data-drip-embedded-form="9536594">
<div class="tve_lg_input_container  tve_lg_2 tve_lg_input">
<input name="fields[email]" value="" data-placeholder="email" placeholder="Email Address..." type="text">
</div>
<div class="tve_lg_input_container tve_submit_container tve_lg_2 tve_lg_submit">
<button type="Submit" data-drip-attribute="sign-up-button">SUBSCRIBE</button>
</div>
</form>
</div>
</div>
</div>
</div>
</div>
</div><p style="line-height: 24px;" data-unit="px" class="tve_p_center cye-lm-tag"><span class="tve_custom_font_size cye-lm-tag" style="font-size: 16px;">I will never rent, sell, or share your email address.<br></span></p>

</div></div></div></div></div></div></div>

<br><hr>
<section id="comments"><div class="comments_intro"><span class="num_comments cye-lm-tag">252</span> comments… <a href="#commentform" rel="nofollow">add one</a></div><ul class="comment_list"><li class="comment even thread-even depth-1" id="comment-275790"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">jay.cz</span>  <span class="comment_date cye-lm-tag">October 4, 2013, 20:32</span></div><div class="comment_text" id="comment-body-275790"><p class="cye-lm-tag">Looking forward to second part of tutorial…</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-275794"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 4, 2013, 21:28</span></div><div class="comment_text" id="comment-body-275794"><p class="cye-lm-tag">I start writing it tomorrow. I think that I can publish it next week.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-275955"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Caio</span>  <span class="comment_date cye-lm-tag">October 5, 2013, 23:28</span></div><div class="comment_text" id="comment-body-275955"><p class="cye-lm-tag">great post, helped me very much. I’m waiting for the next.</p>
<p class="cye-lm-tag">obrigado</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-276437"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 8, 2013, 17:25</span></div><div class="comment_text" id="comment-body-276437"><p class="cye-lm-tag">I am happy to hear that I could help you out.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-276011"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag"><a href="http://fruzenshtein.com/" rel="external nofollow" class="url">Alexey Zvolinskiy</a></span>  <span class="comment_date cye-lm-tag">October 6, 2013, 10:56</span></div><div class="comment_text" id="comment-body-276011"><p class="cye-lm-tag">Petri, I have made a pause in a Spring article writing, but you inspired me to return to this =)</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-276439"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 8, 2013, 17:27</span></div><div class="comment_text" id="comment-body-276439"><p class="cye-lm-tag">Hi Alexey,</p>
<p class="cye-lm-tag">It is good to hear from you! Also, continue writing Spring articles. :)</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-276060"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Caio</span>  <span class="comment_date cye-lm-tag">October 6, 2013, 18:06</span></div><div class="comment_text" id="comment-body-276060"><p class="cye-lm-tag">Great, I’m from Brazil and this post helped to understand spring’s configuration.</p>
<p class="cye-lm-tag">congratulations</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-276438"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 8, 2013, 17:26</span></div><div class="comment_text" id="comment-body-276438"><p class="cye-lm-tag">Thank you! I appreciate your kind words.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-288965"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 17:47</span></div><div class="comment_text" id="comment-body-288965"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">nice detail articular. i am struggling to get this working, appreciate you help.</p>
<p class="cye-lm-tag">1. i could not  working, hence i configured below in xml then, at deployment it failed with below error</p>
<p class="cye-lm-tag">exception<br> Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name ‘socialAuthenticationFilter’ defined in ServletContext resource [/WEB-INF/spring/LBSWeb/security-config.xml]: Unsatisfied dependency expressed through constructor argument with index 2 of type [org.springframework.social.connect.UsersConnectionRepository]: Could not convert constructor argume<br> nt value of type [com.sun.proxy.$Proxy198] to required type [org.springframework.social.connect.UsersConnectionRepository]: Failed to convert value of type ‘com.sun.proxy.$Proxy198 implementing org.springframework.social.connect.ConnectionRepository,java.io.Serializable,org.springframework.<br> aop.scope.ScopedObject,org.springframework.aop.framework.AopInfrastructureBean,<br> org.springframework.aop.Spring<br> Proxy,org.springframework.aop.framework.Advised’ to required type ‘org.springframework.social.connect.UsersConnectionRepository’; nested exception is java.lang.IllegalStateException: Cannot convert value of type [com.sun.proxy.$Proxy198 implementing org.springframework.social.connect.ConnectionRepository,java.io.Serializable,<br> org.springframework.aop.scope.ScopedObject,org.springframework.aop.framework.<br> AopInfrastructureBean,<br> org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised] to required type [org.springframework.social.connect.UsersConnectionRepository]: no matching editors or conversion strategy found<br> at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray<br> (ConstructorResolver.java:702)</p>
<p class="cye-lm-tag">hope you can help me out.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-288971"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 18:10</span></div><div class="comment_text" id="comment-body-288971"><p class="cye-lm-tag">Hi Sam,</p>
<p class="cye-lm-tag">It seems that Wordpress ate your XML configuration. However, it seems that Spring cannot convert the constructor argument with index 2 to required type (<code>UsersConnectionRepository</code>). It is kind of hard to figure out what could be wrong without seeing the XML configuration file. Can you paste it to Pastebin?</p>
<p class="cye-lm-tag">Also, have you compared the XML configuration of the example application to your application context configuration?</p>
<p class="cye-lm-tag">The configuration files which are relevant to you are: <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/resources/exampleApplicationContext-social.xml" target="_blank" rel="nofollow"><em>exampleApplicationContext-social.xml</em></a> and <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/resources/exampleApplicationContext-security.xml" target="_blank" rel="nofollow"><em>exampleApplicationContext-security.xml</em></a>.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-288978"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 18:44</span></div><div class="comment_text" id="comment-body-288978"><p class="cye-lm-tag">Thank you for the quick revert.</p>
<p class="cye-lm-tag">i posted the xml on Pastebin ‘ SamJay – spring social xml configuration issue’. i am using spring.social.version&gt;1.1.0.M4</p>
<p class="cye-lm-tag">actually i tried to make the configuration work as give by you. but for some reason social:jdbc-connection-repository did not work or recongnized, it failed to compiler with nodefine bean expectation for usersConnectionRepository, that’s why i switched to xml configuration at first place.</p>
<p class="cye-lm-tag">i understand there are 2 place where usersConnectionRepository has being used (socialAuthenticationFilter and socialAuthenticationProvider ), i get the  exception with socialAuthenticationProvider .</p>
<p class="cye-lm-tag">thank you.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-288984"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 19:05</span></div><div class="comment_text" id="comment-body-288984"><p class="cye-lm-tag">For some reason I cannot find the XML from Pastebin by using the search term: ‘SamJay – spring social xml configuration issue’. Could you provide a direct link to it?</p>
<p class="cye-lm-tag">By the way, this example assumes that you use Spring Social version 1.1.0.BUILD-SNAPHOT. The reason for this is that some classes which makes the configuration a lot simpler are not available in the version 1.1.0.M4.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-288986"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 19:11</span></div><div class="comment_text" id="comment-body-288986"><p class="cye-lm-tag">here is the link Petri.<br> <a href="http://pastebin.com/uu9K2tJH" rel="nofollow">http://pastebin.com/uu9K2tJH</a></p>
<p class="cye-lm-tag">i did try with the as is configuration given by you but it still does not pick the social:jdbc-connection-repository so its failed at deployment to JBoss.</p>
<p class="cye-lm-tag">thanks.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-288993"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 19:30</span></div><div class="comment_text" id="comment-body-288993"><p class="cye-lm-tag">The reason why you cannot use Java configuration if you deploy to JBoss is that <a href="https://issues.jboss.org/browse/SNOWDROP-41" target="_blank" rel="nofollow">JBoss doesn’t support Spring Java configuration yet</a>. Have you tried to deploy the application to Tomcat 7? It could be useful because this way you could figure out if this is a JBoss related problem.</p>
<p class="cye-lm-tag">I noticed that you don’t set the value of the <code>index</code> attribute when you use the <code>constructor-arg</code> element. Have you tried to set it?</p>
<p class="cye-lm-tag">Also, some of your configuration files use the old Spring versions (3.1). You should probably update them to the latest versions.</p>
<p class="cye-lm-tag">Have you tried to update your Spring Social version to 1.1.0.BUILD-SNAPSHOT? If you would do that, you should be able to use my versions of the XML configuration files. This would make your application context configuration files easier to read and less brittle.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-289009"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 20:16</span></div><div class="comment_text" id="comment-body-289009"><p class="cye-lm-tag">thanks,<br> i am not using Java configuration at all only old faction xml, and adding constructor-arg element also made no difference.</p>
<p class="cye-lm-tag">i will deploy the app to the tomcat to eliminate the server.</p>
<p class="cye-lm-tag">below has simile issue being discussed, but could not really help.<br> <a href="http://forum.spring.io/forum/spring-projects/web/social/118162-exception-faced-while-migrating-social-s-java-based-configuration-style-to-xml-based" rel="nofollow">http://forum.spring.io/forum/spring-projects/web/social/118162-exception-faced-while-migrating-social-s-java-based-configuration-style-to-xml-based</a></p>
<p class="cye-lm-tag">thanks<br> will write to you with update.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-289017"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 17, 2013, 20:47</span></div><div class="comment_text" id="comment-body-289017"><p class="cye-lm-tag">After I read that discussion, I realized that is probably an AOP related issue. I noticed a small difference between your XML configuration file and a file mentioned in that thread. Have you tried to declare the <code>JdbcUsersConnectionRepository</code> bean as follows:</p>
<pre><code>
&lt;bean id="jdbcConnectionRepository"
	class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository" 
	primary="true" 
	scope="singleton" &gt;
	&lt;constructor-arg ref="dataSource" /&gt;
	&lt;constructor-arg ref="connectionFactoryLocator" /&gt;
	&lt;constructor-arg ref="textEncryptor" /&gt;
	&lt;aop:scoped-proxy proxy-target-class="false" /&gt;
&lt;/bean&gt;
</code>
</pre></div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-289283"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 18, 2013, 10:03</span></div><div class="comment_text" id="comment-body-289283"><p class="cye-lm-tag">thanks, i tried that, but still get the same error,</p>
<p class="cye-lm-tag">one other think i tried to get the Spring Social version 1.1.0.BUILD-SNAPHOT from.<br> <a href="http://projects.spring.io/spring-social/core.html" rel="nofollow">http://projects.spring.io/spring-social/core.html</a>, but it also failed downloading the jar’s.</p>
<p class="cye-lm-tag">dependencies&gt;</p>
<p class="cye-lm-tag"> org.springframework.social<br> spring-social<br> 1.1.0.BUILD-SNAPSHOT</p>
<p class="cye-lm-tag"> spring-snapshots<br> Spring Snapshots<br> <a href="http://repo.spring.io/snapshot" rel="nofollow">http://repo.spring.io/snapshot</a></p>
<p class="cye-lm-tag"> true</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-289366"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 18, 2013, 13:44</span></div><div class="comment_text" id="comment-body-289366"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">You can get the correct dependencies from the Spring snapshot repository by following these steps:</p>
<ol><li>Add the snapshot repository to your POM file (I assume that you did this).</li><li>Use the groupId <em>org.springframework.social</em> (This was also right).</li><li>Add the following modules to your POM: <em>spring-social-core</em>, <em>spring-social-security</em>, and <em>spring-social-web</em>.</li><li>Add the required client modules to your POM.</li></ol><p class="cye-lm-tag">Check the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/pom.xml" target="_blank" rel="nofollow">POM file of the example application</a> for more details about this.</p>
<p class="cye-lm-tag">Also, It seems that the <a href="http://repo.spring.io/snapshot/org/springframework/social/" target="_blank" rel="nofollow">required modules are found from the snapshot repository</a>. Perhaps the download failed because of a network issue or something.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-289319"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 18, 2013, 12:29</span></div><div class="comment_text" id="comment-body-289319"><p class="cye-lm-tag">Hi Petri,<br> deployment failed on tomcat 7 as well with same exception.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-289369"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 18, 2013, 13:54</span></div><div class="comment_text" id="comment-body-289369"><p class="cye-lm-tag">I was expecting that. The problem is related to Spring AOP and not to the used server. I noticed that you <a href="http://forum.spring.io/forum/spring-projects/web/social/118162-exception-faced-while-migrating-social-s-java-based-configuration-style-to-xml-based" target="_blank" rel="nofollow">answered to this thread</a>.</p>
<p class="cye-lm-tag">Let’s hope that you get an answer soon (I want to hear what the problem was)!</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-289858"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 20, 2013, 01:43</span></div><div class="comment_text" id="comment-body-289858"><p class="cye-lm-tag">Will keep you posted as soon as i get a answer.</p>
<p class="cye-lm-tag">on a different note can you please enplane the below please.</p>
<p class="cye-lm-tag">with the ConnectController, called back (redirect) into your app: GET /connect/facebook?code=xxx, which ends up with page not found.</p>
<p class="cye-lm-tag">how should i capture the call back here and seamlessly integrate with the app</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-290329"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 21, 2013, 19:49</span></div><div class="comment_text" id="comment-body-290329"><p class="cye-lm-tag">If you want to redirect the user a specific page after the connection has been created, you should override the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/web/ConnectController.html#connectionStatusRedirect%28java.lang.String,%20org.springframework.web.context.request.NativeWebRequest%29" target="_blank" rel="nofollow">connectionStatusRedirect() method of the ConnectionController</a> class.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-290010"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">November 20, 2013, 14:20</span></div><div class="comment_text" id="comment-body-290010"><p class="cye-lm-tag">Hi</p>
<p class="cye-lm-tag">do u know the reason for this error please</p>
<p class="cye-lm-tag">[ServerImpl] JBoss (Microcontainer) [5.0.1.GA (build: SVNTag=JBoss_5_0_1_GA date=200902231221)] Started in 1m:27s:96ms<br> [STDOUT] WARN : org.springframework.social.connect.web.ConnectController – Exception while handling OAuth2 callback (The OAuth2 ‘state’ parameter doesn’t match.). Redirecting to facebook connection status page.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-290325"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 21, 2013, 19:30</span></div><div class="comment_text" id="comment-body-290325"><p class="cye-lm-tag">I haven’t run into this problem but I found some additional information it. You might want to check out the Github issue titled: <a href="https://github.com/spring-projects/spring-social-facebook/issues/103" target="_blank" rel="nofollow">Facebook connection infinite redirect loop workaround</a>.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-296504"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sai</span>  <span class="comment_date cye-lm-tag">December 6, 2013, 05:08</span></div><div class="comment_text" id="comment-body-296504"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">I have added /web-inf/jsp/js/app.js and web-inf/jsp/js/controller.js and updated<br> layout.jsp with below includes.</p>
<p class="cye-lm-tag">&lt;script type="text/javascript" src="”&gt;</p>
<p class="cye-lm-tag">getting below errors in javascript console</p>
<p class="cye-lm-tag">Refused to execute script from ‘http://localhost:8080/springsocialsignin/js/app.js’ because its MIME type (‘text/html’) is not executable, and strict MIME type checking is enabled. login:1<br> Refused to execute script from ‘http://localhost:8080/springsocialsignin/js/controller.js’ because its MIME type (‘text/html’) is not executable, and strict MIME type checking is enabled. login:1</p>
<p class="cye-lm-tag">do i need to update webapp? any pointers??</p>
<p class="cye-lm-tag">sridhar</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-296728"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 6, 2013, 12:04</span></div><div class="comment_text" id="comment-body-296728"><p class="cye-lm-tag">Hi Sai,</p>
<p class="cye-lm-tag">The problem is that tou put your Javascript files to <em>WEB-INF/jsp/js/</em> directory, and servlet containers do not serve any content put to the <em>WEB-INF</em> directory.</p>
<p class="cye-lm-tag">You can solve this by moving your Javascript files to the <em>src/main/webapp</em> directory. If you use the same approach which I used in the example application, you should move the <em>app.js</em> and <em>controller.js</em> files to the <em>src/main/webapp/static/js/app</em> directory and add the following code to the <em>layout.jsp</em> file:</p>
<pre><code>
&lt;script type="text/javascript" 
  src="${pageContext.request.contextPath}/static/js/app/app.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" 
  src="${pageContext.request.contextPath}/static/js/app/controller.js"&gt;&lt;/script&gt;
</code>
</pre><p class="cye-lm-tag">I hope that this answered to your question.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-305360"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">RetRo</span>  <span class="comment_date cye-lm-tag">December 14, 2013, 07:58</span></div><div class="comment_text" id="comment-body-305360"><p class="cye-lm-tag">I think there is a dependency missing: spring-social-config</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-305516"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 14, 2013, 11:11</span></div><div class="comment_text" id="comment-body-305516"><p class="cye-lm-tag">You are right! Thanks for pointing this out. It seems that the spring-social-config module is a transitive dependency but I agree that it might be better to explicitly specify it (at least in this case). I will update the blog post and the example application.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-305361"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">RetRo</span>  <span class="comment_date cye-lm-tag">December 14, 2013, 07:59</span></div><div class="comment_text" id="comment-body-305361"><p class="cye-lm-tag">oops, forgot to say first, awesome article, thanks a lot for sharing :)</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-305525"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 14, 2013, 11:25</span></div><div class="comment_text" id="comment-body-305525"><p class="cye-lm-tag">Thanks! I appreciate your kind words.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-307270"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Davi</span>  <span class="comment_date cye-lm-tag">December 16, 2013, 08:55</span></div><div class="comment_text" id="comment-body-307270"><p class="cye-lm-tag">Hi petri, i’am newbie in spring. How to add your example source to my project in eclipse?<br> Thank you</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-307307"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 16, 2013, 09:49</span></div><div class="comment_text" id="comment-body-307307"><p class="cye-lm-tag">Hi Davi,</p>
<p class="cye-lm-tag">I haven’t been using Eclipse for several years but let’s see if I can help you out. Which Eclipse version are you using?</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-1048246"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">danang</span>  <span class="comment_date cye-lm-tag">December 15, 2014, 08:58</span></div><div class="comment_text" id="comment-body-1048246"><p class="cye-lm-tag">hi Petri, What are you using for this project?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-1048318"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 15, 2014, 09:46</span></div><div class="comment_text" id="comment-body-1048318"><p class="cye-lm-tag">I use IntelliJ Idea, but the example application uses Maven. In other words, you can compile / package / run it without using an IDE. All you have to do is to clone it from the Github repository and you are ready to go (if you have installed JDK + Maven).</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-307533"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Davi</span>  <span class="comment_date cye-lm-tag">December 16, 2013, 14:01</span></div><div class="comment_text" id="comment-body-307533"><p class="cye-lm-tag">Thank you for your reply. I’m using eclipse kepler.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-307552"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 16, 2013, 14:16</span></div><div class="comment_text" id="comment-body-307552"><p class="cye-lm-tag">It seems that you should be able to do this by navigating to:</p>
<p class="cye-lm-tag">File -&gt; Import -&gt; Browse to general -&gt; Maven Projects</p>
<p class="cye-lm-tag">This <a href="https://github.com/OneBusAway/onebusaway/wiki/Importing-source-code-into-Eclipse" target="_blank" rel="nofollow">wiki page</a> has more information about this (including screenshots).</p>
<p class="cye-lm-tag">I hope that this solved your problem.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-307632"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Davi</span>  <span class="comment_date cye-lm-tag">December 16, 2013, 16:10</span></div><div class="comment_text" id="comment-body-307632"><p class="cye-lm-tag">Great, thank you. Great tutorial petri.</p>
</div> </div></li><li class="comment odd alt thread-even depth-1" id="comment-328649"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Phuong Dang</span>  <span class="comment_date cye-lm-tag">January 13, 2014, 09:38</span></div><div class="comment_text" id="comment-body-328649"><p class="cye-lm-tag">uhmm. It’s should not be this complicated.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-329100"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">January 13, 2014, 20:11</span></div><div class="comment_text" id="comment-body-329100"><p class="cye-lm-tag">I agree. It will be interesting to see if <a href="http://projects.spring.io/spring-boot/" target="_blank" rel="nofollow">Spring Boot</a> will be integrated with Spring Social.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-331294"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Kumar</span>  <span class="comment_date cye-lm-tag">January 14, 2014, 21:55</span></div><div class="comment_text" id="comment-body-331294"><p class="cye-lm-tag">New to this , I am getting the following error when I import the code to the eclipse<br> Error loading property file ‘/Users/akumar/Documents/development/tracks/git/spring-social-examples/sign-in/spring-mvc-normal/profiles/dev/socialConfig.properties’ (org.apache.maven.plugins:maven-resources-plugin:2.6:testResources:default-testResources:process-test-resources)</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-331344"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">January 14, 2014, 22:22</span></div><div class="comment_text" id="comment-body-331344"><p class="cye-lm-tag">You need to create the <code>socialConfig.properties</code> file yourself. This file contains the configuration of your Facebook and Twitter applications. See the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/README.md" target="_blank" rel="nofollow">README of the example application</a> for more details about this.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-339818"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag"><a href="http://TomTom.com" rel="external nofollow" class="url">Daniel</a></span>  <span class="comment_date cye-lm-tag">January 19, 2014, 18:24</span></div><div class="comment_text" id="comment-body-339818"><p class="cye-lm-tag">Hello, im having huge problems adopting new facebook api to our application. Before i knew ill have to add it, i’ve created normal spring security besed User management. But now i have to add facebook. With new Social Security have been added XML based configuration with UserIdSource etc. But i’ve no idea how to use it. Could you be so nice and also create tutorial for XML based configuration that can be adopted to already existing spring security projects :( ?<br> Huge thx for all help.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-339903"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">January 19, 2014, 19:46</span></div><div class="comment_text" id="comment-body-339903"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">Have you checked out the <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal/src/main/resources" target="_blank" rel="nofollow">XML configuration of the example application</a>? It should help you get started if you want to configure your application by using XML.</p>
<p class="cye-lm-tag">I was planning to describe it in this blog post as well but I noticed that the blog post would probably be too long. That is why I decided to skip it and provided a link to the XML configuration instead.</p>
<p class="cye-lm-tag">If you cannot solve problem by reading the configuration files, let me know and I will write a brief description about the required steps.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-353624"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">February 1, 2014, 04:56</span></div><div class="comment_text" id="comment-body-353624"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">I have managed to get the FB logging to work. Now i see that data are being populated to ‘userconnection’ table through ConnectController and when i disconnected from the service, the data from the table get deleted as well (hope the expected behavior).<br> My query is:<br> I have a table called ‘user’ which maintains the application form logging users information’s and authenticates via spring-security.<br> What i want to figure out is, i would like to sync userconnection data which maintains FB user data with ‘user’ table which maintain the form application local user accounts. So in a situation where a client logging with a FB, i should be able to create an account in the site as well and pass that information (ex: a passwrod) via a mail. So that user has the ability to either use FB or site account.<br> Can you please help me to understand am i thinking on the right direction? And what are the steps that i should do to achieve this.</p>
<p class="cye-lm-tag">Thanks<br> Sam</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-354094"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">February 1, 2014, 22:28</span></div><div class="comment_text" id="comment-body-354094"><p class="cye-lm-tag">Hi Sam,</p>
<p class="cye-lm-tag">If your application uses email as username and you <a href="https://developers.facebook.com/docs/reference/login/email-permissions/" target="_blank" rel="nofollow">get the email address of the user from Facebook</a>, you can create a row to the <code>user</code> table when a user signs in by using Facebook.</p>
<p class="cye-lm-tag">The way I see this, you have two options:</p>
<ol><li>Modify the example application to create a new user account automatically (without rendering the registration form) when user signs in by using social sign in. However, I wouldn’t create the password automatically and send it to the given email address because email isn’t a secure way to transfer this kind of information. I would implement a password reset function which would allow the user to set his password. Read Troy Hunt’s blog post titled <a href="http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html" target="_blank" rel="nofollow">Everything you ever wanted to know about building a secure password reset feature</a> for more details about this (it is not Spring specific). Also, if you have to support other social sign in providers, you might run into problems because all social sign providers do not return the email address.</li><li>Modify the example application of this blog post to ask (and process) the password information even if the user is using social sign in.</li></ol><p class="cye-lm-tag">The first option provides a better user experience. The problem is that you cannot use it if your application has to support social sign in providers which don’t return the email address of the user or if you don’t use email address as the username.</p>
<p class="cye-lm-tag">The second option is easier to implement but it can be annoying because often users expect that they don’t have to enter password information if they use social sign in.</p>
<p class="cye-lm-tag">I hope that this answered to your question. If you need more advice about this, don’t hesitate to ask additional questions.</p>
</div> </div><ul class="children"><li class="comment odd alt depth-3" id="comment-354207"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">February 2, 2014, 02:48</span></div><div class="comment_text" id="comment-body-354207"><p class="cye-lm-tag">HiPetri,</p>
<p class="cye-lm-tag">Thank you very much for the detail explanation &amp; ill go through the links you provided and get back to you on the outcome. I do want to support FB, Twitter, Googal+, hence need to check whether email is being returned by those services. but my current implementation does not use email as the username, yet i am able to get the username with below.</p>
<p class="cye-lm-tag">Regarding the second point:<br> i am not clear on this, what do you mean is; at the end of authentication success, inject a page to capture a password, is it?</p>
<p class="cye-lm-tag">another  query that i came across is,</p>
<p class="cye-lm-tag">once the FB authentication is successful, default behaviors is, the flow returns to the facebookConnected.jsp. what is the configuration (bean) to allow the flow to be continued to the application since the user is now authenticated ?</p>
<p class="cye-lm-tag">Thanks<br> Saranga</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-4" id="comment-356649"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">February 4, 2014, 21:47</span></div><div class="comment_text" id="comment-body-356649"><p class="cye-lm-tag">Hi Sam,</p>
<p class="cye-lm-tag"><strong>First</strong>, I am not sure if you have tried the example application of this blog post but its registration flow goes like this:</p>
<ol><li>If the user is creating user account by using social sign in, the registration form has first name, last name, and email address fields.</li><li>If the user is creating user account by using “normal registration”, the registration form has first name, last name, email address, password, and password verification fields.</li></ol><p class="cye-lm-tag">What I meant was that you could ask the password information from users who are using social sign in. If you want to know more about the registration flow of the example application, you should read my blog post titled <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">Adding Social Sign In to a Spring MVC Web Application: Registration and Login</a>.</p>
<p class="cye-lm-tag"><strong>Second</strong>, have you integrated Spring Social with Spring Security or are you using only Spring Social?</p>
<p class="cye-lm-tag">If you have integrated Spring Social with Spring Security, you can configure the <code>AuthenticationSuccessHandler</code> bean. If you are using Java configuration, you should take a look at <a href="http://stackoverflow.com/questions/21097528/moving-spring-security-to-java-config-where-does-authentication-success-handler" target="_blank" rel="nofollow">this StackOverflow question</a>.</p>
<p class="cye-lm-tag">On the other hand, if you are using only Spring Social, you could try to set the url by calling the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/web/ProviderSignInController.html#setPostSignInUrl%28java.lang.String%29" target="_blank" rel="nofollow"><code>setPostSignInUrl()</code> method of the <code>ProviderSignInController</code> class</a>. I haven’t tested this though so I am not sure if this is the right way to handle this.</p>
</div> </div><ul class="children"><li class="comment odd alt depth-5" id="comment-357428"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">February 5, 2014, 22:06</span></div><div class="comment_text" id="comment-body-357428"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">i am using the Spring Social with Spring Security and i have gone though your example which user xml, configuration.</p>
<p class="cye-lm-tag">i have posted my 2 xml file here for your reference. <a href="http://pastebin.com/P6u6cpyv" rel="nofollow">http://pastebin.com/P6u6cpyv</a> (social-security xmls). hope it will make sense.</p>
<p class="cye-lm-tag">i am going through the clinks that you are given. i am stuck on what to do with when the authentication call back return to facebookConnected.jsp. i guess, i want to capture the callback and take the control to spring-security and let the application work flow proceed.<br> as you can see, i have used default spring provided controller, i guess i need to overwrite this and configure a way to let the flow run through the application flow.</p>
<p class="cye-lm-tag">thank you very much for your help.</p>
<p class="cye-lm-tag">thanks<br> saranga</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-5" id="comment-357466"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">February 5, 2014, 23:57</span></div><div class="comment_text" id="comment-body-357466"><p class="cye-lm-tag">Hi Sam,</p>
<p class="cye-lm-tag">I just realized something. Do you use the url <em>/auth/[provider]</em> (in other words, for Facebook this url would be <em>/auth/facebook</em>) to start the social sign in flow or do you use the url <em>/connect/[provider]</em>?</p>
<p class="cye-lm-tag">If you only want to authenticate the user, you should use the first url (<em>/auth/[provider]</em>) because requests send to that url are processed by the <code>SocialAuthenticationFilter</code>.</p>
<p class="cye-lm-tag">I took a very quick look at your configuration files and they seemed to be fine.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-357892"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Moussi</span>  <span class="comment_date cye-lm-tag">February 6, 2014, 21:29</span></div><div class="comment_text" id="comment-body-357892"><p class="cye-lm-tag">I want to make a full example integrating spring social and spring security using MongoDB , i need some examples , links or tuorials that help me to achieve that. i don’t know the needed changes to make in order to use mongodb instead of mysql because the problem that i faced is that Spring Social project already provides a jdbc based connection repository implementation to persist user connection data into a relational database. i don’t know if this is only used by relational databases :(</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-358664"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">February 8, 2014, 10:44</span></div><div class="comment_text" id="comment-body-358664"><p class="cye-lm-tag">Hi Moussi,</p>
<p class="cye-lm-tag">The <code>JdbcUsersConnectionRepository</code> class persist connection information to a relational database. If you want to save this information to MongoDB, you have implement the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/UsersConnectionRepository.html" target="_blank" rel="nofollow"><code>UsersConnectionRepository</code></a> interface.</p>
<p class="cye-lm-tag">I have never done this but I found a blog post titled <strong>Customize Spring Social Connect Framework For MongoDB</strong> (unfortunately this blog post has been removed). It explains how you can persist connection information to MongoDB. You can <a href="https://github.com/jiwhiz/JiwhizBlogWeb" target="_blank" rel="nofollow">get the example application of this blog post from Github</a>.</p>
<p class="cye-lm-tag">I hope this helps you to achieve your goal!</p>
</div> </div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365552"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Yves Tanas</span>  <span class="comment_date cye-lm-tag">February 14, 2014, 22:40</span></div><div class="comment_text" id="comment-body-365552"><p class="cye-lm-tag">I am looking forward on using this solution for testing in my environment.<br> As i have had no contact yet with sitemesh, here’s my question.<br> How would i do sth. like this:<br> <a href="https://groups.google.com/forum/#!topic/sitemesh3-users/KjxbrtC0fFI" rel="nofollow">https://groups.google.com/forum/#!topic/sitemesh3-users/KjxbrtC0fFI</a><br> I think this work should be done in ExampleApplicationConfig, but i am stuck with this.<br> Is there some easy solution to add things like  ?</p>
</div> </div></li><li class="comment even thread-even depth-1" id="comment-365723"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Yves Tanas</span>  <span class="comment_date cye-lm-tag">February 15, 2014, 02:51</span></div><div class="comment_text" id="comment-body-365723"><p class="cye-lm-tag">Hi there, forget about my last post.<br> I made a small change in “ExampleApplicationConfig” on setting up the sitemesh</p>
<p class="cye-lm-tag">FilterRegistration.Dynamic sitemesh = servletContext.addFilter(“sitemesh”, new TagBundlerFilterForSite());<br> sitemesh.addMappingForUrlPatterns(dispatcherTypes, true, “*.jsp”);</p>
<p class="cye-lm-tag">While adding the new Class to the same package:<br> public class TagBundlerFilterForSite extends ConfigurableSiteMeshFilter {<br> public TagBundlerFilterForSite(){<br> this.applyCustomConfiguration(new SiteMeshFilterBuilder());<br> }<br> @Override<br> protected void applyCustomConfiguration(SiteMeshFilterBuilder builder) {<br> builder.addTagRuleBundle (new DivExtractingTagRuleBundle ());<br> }<br> }</p>
<p class="cye-lm-tag">I can now do this:</p>
<p class="cye-lm-tag">Template:</p>
<p class="cye-lm-tag">JSP-Page:Some more data</p>
<p class="cye-lm-tag">for me this really helps to use my template well, maybe u or others can use that.<br> I know the setup on the constructor is a bad thing, but as i really tried to get this working, i was happy for now. If there is a better solution, let me know ! :)</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-367453"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">February 17, 2014, 19:18</span></div><div class="comment_text" id="comment-body-367453"><p class="cye-lm-tag">It is great to hear that you were able to solve your problem!</p>
<p class="cye-lm-tag">Also, thanks for coming back and posting your solution to my blog. Now I know where to look if I need similar functionality (I have never needed it yet).</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-376352"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Twinkle</span>  <span class="comment_date cye-lm-tag">March 4, 2014, 05:29</span></div><div class="comment_text" id="comment-body-376352"><p class="cye-lm-tag">Heh,<br> This is really an awesome post.This will help me a lot.<br> Can you please mail me the zip file of the complete code? I tried to copy the code and and run, but it’s not working. Am trying to remove errors since last 3 days, but not able to do so.<br> Please help me out.<br> Mail me as soon as possible.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-376384"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 4, 2014, 06:26</span></div><div class="comment_text" id="comment-body-376384"><p class="cye-lm-tag">You can <a href="https://github.com/pkainulainen/spring-social-examples" target="_blank" rel="nofollow">get the code from Github</a> (you can either clone the repository or download the code as a Zip file). Remember to <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal" target="_blank" rel="nofollow">read the README as well</a>.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-386028"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Nandhana</span>  <span class="comment_date cye-lm-tag">March 11, 2014, 08:46</span></div><div class="comment_text" id="comment-body-386028"><p class="cye-lm-tag">Hi petri,<br> I have one doubt.How to set the anonymous user for authentication without xml configuration?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-386685"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 11, 2014, 20:50</span></div><div class="comment_text" id="comment-body-386685"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">If you are talking about the <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#anonymous" target="_blank" rel="nofollow">anonymous authentication support of Spring Security</a>, it should be enabled by default. The default role of the anonymous user is <em>ROLE_ANONYMOUS</em>, and you can use this role when you specify the authorization rules of your application.</p>
<p class="cye-lm-tag">Unfortunately I don’t how you can customize the anonymous authentication support without using XML configuration. :(</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-389933"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Roman</span>  <span class="comment_date cye-lm-tag">March 14, 2014, 05:50</span></div><div class="comment_text" id="comment-body-389933"><p class="cye-lm-tag">Hello! I’m trying to follow this tutorial, but I have a problem downloading the dependencies.<br> Can you help me out?</p>
<p class="cye-lm-tag">Thanks</p>
<p class="cye-lm-tag">The following artifacts could not be resolved: org.springframework.social:spring-social-config:jar:1.1.0.BUILD-SNAPSHOT, org.springframework.social:spring-social-core:jar:1.1.0.BUILD-SNAPSHOT, org.springframework.social:spring-social-security:jar:1.1.0.BUILD-SNAPSHOT, org.springframework.social:spring-social-web:jar:1.1.0.BUILD-SNAPSHOT, org.springframework.social:spring-social-facebook:jar:1.1.0.BUILD-SNAPSHOT: Failure to find org.springframework.social:spring-social-config:jar:1.1.0.BUILD-SNAPSHOT in <a href="http://repo.springsource.org/libs-milestone" rel="nofollow">http://repo.springsource.org/libs-milestone</a> was cached in the local repository, resolution will not be reattempted until the update interval of spring-milestone has elapsed or updates are forced</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-390200"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 14, 2014, 10:12</span></div><div class="comment_text" id="comment-body-390200"><p class="cye-lm-tag">Hi Roman,</p>
<p class="cye-lm-tag">It seems that I forgot to mention that you have to add the Spring Snapshot repository to the <em>pom.xml</em> file (<a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/pom.xml" target="_blank" rel="nofollow">see the <em>pom.xml</em> file of the example application</a>).</p>
<p class="cye-lm-tag">Also, you might want to <a href="https://spring.io/blog/2014/03/11/spring-social-1-1-0-rc1-released" target="_blank" rel="nofollow">use version 1.1.0.RC1 because it was released this week</a> (I will update the example during the weekend).</p>
<p class="cye-lm-tag">I hope that this answered to your question. If not, let me know!</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-395303"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Christopher Smith</span>  <span class="comment_date cye-lm-tag">March 18, 2014, 01:04</span></div><div class="comment_text" id="comment-body-395303"><p class="cye-lm-tag">Please let me know if I’m misunderstanding, but it appears that this application permits a user to associate exactly one social-media account–of any type–with their application account, so that a user can’t associate both Facebook and Twitter accounts simultaneously. It appears that the SocialUserDetails interface has a massive flaw in that its getUserId() method takes no parameter specifying *which* social service for which we’re looking up the user’s identity. Did I overlook some out-of-band information to the persistence layer about which social network is being talked about (such as an injectable thread-local holder), or does is this entire setup limited to a single social-media association per user?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-396615"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 18, 2014, 20:40</span></div><div class="comment_text" id="comment-body-396615"><p class="cye-lm-tag">You are right. If a user creates a user account by using Facebook, he cannot sign in by using Twitter (or associate a Twitter account with his local user account). However, it is possible to support multiple social sign in providers as well.</p>
<p class="cye-lm-tag">I haven’t done this myself but I think that you can do this by following these steps:</p>
<ol><li>Modify the <code>User</code> entity and add support for multiple social sign in providers (this is required only if you want to store this information).</li><li>Implement the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/UserIdSource.html" target="_blank" rel="nofollow"><code>UserIdSource</code></a> interface and create a userId which contains the information required to identify the local user and the used social sign in provider.</li><li>Implement the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/security/SocialUserDetailsService.html" target="_blank" rel="nofollow"><code>SocialUserDetailsService</code></a> interface and ensure that it can handle the “new” userId (you have to parse the local username from userId and load the correct user).</li><li>Use the “new” userId when you persist the connection between the user and the social sign in provider (See the javadoc <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/web/ProviderSignInUtils.html" target="_blank" rel="nofollow"><code>ProviderSignInUtils</code></a> class.</li></ol><p class="cye-lm-tag">If you have any further questions, don’t hesitate to ask them.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-453154"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">JSSAggie</span>  <span class="comment_date cye-lm-tag">April 14, 2014, 07:13</span></div><div class="comment_text" id="comment-body-453154"><p class="cye-lm-tag">Petri,</p>
<p class="cye-lm-tag">I was looking around on the web to find out how to change the scope when doing a Facebook login authorization.  I was looking to make the change in the configuration rather having to send a post with a hidden variable on the social login button.</p>
<p class="cye-lm-tag">I see in SocialContext that we are adding the Facebook connection factory and it has a method to set the scope.  I changed the scope and it does not change the scope on the authorization.  Do you know how to change this at the configuration level?</p>
<p class="cye-lm-tag">There is an “Authorization scope” section that explains how it is done but not at the configuration level.<br> <a href="http://docs.spring.io/spring-social/docs/1.0.3.RELEASE/reference/html/connecting.html" rel="nofollow">http://docs.spring.io/spring-social/docs/1.0.3.RELEASE/reference/html/connecting.html</a></p>
<p class="cye-lm-tag">Have you done this before?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-456182"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 14, 2014, 21:23</span></div><div class="comment_text" id="comment-body-456182"><p class="cye-lm-tag">I was able to verify that setting the scope by calling the <code>setScope(String scope)</code> method of the <code>OAuth2ConnectionFactory</code> class (<code>FacebookConnectionFactory</code> extends this class) doesn’t seem to do anything.</p>
<p class="cye-lm-tag">Unfortunately I cannot provide an answer right away, but I promise that I will take a closer look at this because the Javadoc of that method suggests that it should work. I will let you know if I find a solution.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-458257"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">JSSAggie</span>  <span class="comment_date cye-lm-tag">April 15, 2014, 06:34</span></div><div class="comment_text" id="comment-body-458257"><p class="cye-lm-tag">I looked around tonight and did not find a way to set the scope but I did find that OAuth2AuthenticationService.defaultScope is really what is being used when it adds the scope to the URL.  If you don’t pass a scope as a hidden variable it will use the defaultScope.</p>
<p class="cye-lm-tag">Thanks again for always being so helpful.</p>
</div> </div><ul class="children"><li class="comment odd alt depth-4" id="comment-542509"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">JSSAggie</span>  <span class="comment_date cye-lm-tag">May 3, 2014, 00:46</span></div><div class="comment_text" id="comment-body-542509"><p class="cye-lm-tag">Petri,</p>
<p class="cye-lm-tag">Have you found a work around for this?  I have not.  I tried looking through the source code and kept getting a little lost and did not find a path to set the scope.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-5" id="comment-544019"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 3, 2014, 12:16</span></div><div class="comment_text" id="comment-body-544019"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">Actually I did found something from the web:</p>
<ul><li><a href="http://stackoverflow.com/questions/17732858/how-to-specify-oauth2-scope-with-spring-social-security-socialauthenticationfilt" target="_blank" rel="nofollow">How to specify OAuth2 scope with spring-social-security SocialAuthenticationFilter?</a></li><li><a href="http://forum.spring.io/forum/spring-projects/web/social/130443-can-not-set-scope-with-a-request-parameter-using-socialauthenticationfilter" target="_blank" rel="nofollow">Can not set scope with a request parameter using SocialAuthenticationFilter </a></li></ul><p class="cye-lm-tag">It seems that if you want to set the default scope, you have to use the <code>FacebookAuthenticationService</code> class.</p>
<p class="cye-lm-tag">The <code>SecurityEnabledConnectionFactoryConfigurer</code> object given as a method parameter to the <code>addConnectionFactories()</code> method of the <code>SocialConfigurer</code>interface creates the required authentication service objects BUT it doesn’t set the default scope.</p>
<p class="cye-lm-tag">I assume that if you want to set the default scope, you have remove the <code>@EnableSocial</code> annotation from the <code>SocialContext</code> class and create all required beans manually.</p>
<p class="cye-lm-tag">I can take a closer look at this tomorrow.</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-548949"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 4, 2014, 11:44</span></div><div class="comment_text" id="comment-body-548949"><p class="cye-lm-tag">I checked this out and I noticed one problem:</p>
<p class="cye-lm-tag">I should create a <code>ConnectionRepository</code> bean but I am unable to do it because the <code>ConnectionRepository</code> class is package-private (and I don’t want to move the <code>SocialContext</code> class to the same package).</p>
<p class="cye-lm-tag">You could of course configure Spring Social by using XML configuration but if you don’t want to do that,  you should <a href="https://jira.spring.io/browse/SOCIAL" target="_blank" rel="nofollow">create a new issue to the Spring Social project</a>.</p>
</div></div></li><li class="comment even depth-5" id="comment-556868"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">JSSAggie</span>  <span class="comment_date cye-lm-tag">May 6, 2014, 06:05</span></div><div class="comment_text" id="comment-body-556868"><p class="cye-lm-tag">Petri,</p>
<p class="cye-lm-tag">Thanks again.  I created a ticket.  With your help I hope they have enough information to find the bug.  I am a little lost.</p>
<p class="cye-lm-tag"><a href="https://jira.spring.io/browse/SOCIAL-436" rel="nofollow">https://jira.spring.io/browse/SOCIAL-436</a></p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-559558"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 6, 2014, 17:55</span></div><div class="comment_text" id="comment-body-559558"><p class="cye-lm-tag">You are welcome! Let’s hope that the Spring Social team can solve this soon.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-475469"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag"><a href="http://imediadesigns.org/" rel="external nofollow" class="url">iMedia Designs</a></span>  <span class="comment_date cye-lm-tag">April 18, 2014, 14:45</span></div><div class="comment_text" id="comment-body-475469"><p class="cye-lm-tag">great post, helped me very much.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-544037"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 3, 2014, 12:19</span></div><div class="comment_text" id="comment-body-544037"><p class="cye-lm-tag">I am happy to hear that.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-565757"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Ademir Constantino</span>  <span class="comment_date cye-lm-tag">May 7, 2014, 22:29</span></div><div class="comment_text" id="comment-body-565757"><p class="cye-lm-tag">Hi Petri,<br> I’m trying to implement spring-social-facebook in my application, however I’m stuck in the JdbcUsersConnectionRepository part. I would like to have my own UsersConnectionRepository using Hibernate but without JPA.</p>
<p class="cye-lm-tag">Thanks much in advance</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-565871"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 7, 2014, 22:57</span></div><div class="comment_text" id="comment-body-565871"><p class="cye-lm-tag">The <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.html" target="_blank" rel="nofollow"><code>JdbcUsersConnectionRepository</code></a> class uses the JDBC API. In other words, you can use it in an application which uses the “native” Hibernate API.</p>
<p class="cye-lm-tag">You can of course create your own implementation by implementing the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/UsersConnectionRepository.html" target="_blank" rel="nofollow"><code>UsersConnectionRepository</code></a> interface but I am not sure if it is worth the effort.</p>
<p class="cye-lm-tag">Did you mean that you want to create a custom <code>UserDetailsService</code> which uses Hibernate instead of Spring Data JPA?</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-671753"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">RCB</span>  <span class="comment_date cye-lm-tag">June 1, 2014, 19:46</span></div><div class="comment_text" id="comment-body-671753"><p class="cye-lm-tag">HI Petri</p>
<p class="cye-lm-tag">At the end of this tutorial I have an error with the servletContext.addServlet, servletContext.addFilter and servletContext.addListener … I´m workinh with Eclipse and the message that appear is “The method addListener(ContextLoaderListener) is undefined for the type ServletContext”.<br> The solution tath Eclipse suggest me is “Add Cast to servletContext”</p>
<p class="cye-lm-tag">What can I do?<br> Thanks much in advance</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-673310"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 2, 2014, 22:40</span></div><div class="comment_text" id="comment-body-673310"><p class="cye-lm-tag">You need to use the Servlet API 3.0. You can get the full list of required dependencies by reading the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/pom.xml" target="_blank" rel="nofollow"><code>pom.xml</code> file of the example application</a>.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-694914"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">PR</span>  <span class="comment_date cye-lm-tag">June 14, 2014, 03:09</span></div><div class="comment_text" id="comment-body-694914"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Thank you very much for the detailed tutorials!<br> I have a question that is similar to the one from Ademir. I would like to integrate spring social into my project however I don’t need any of the spring social persistence stuff and just seems to conflict with my application. All I really need is Spring Social’s Facebook methods. Is this possible to simplify the setup in this way?<br> Any help would be greatly appreciated!</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-696748"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 15, 2014, 11:46</span></div><div class="comment_text" id="comment-body-696748"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">Do you want that your application is able to read information from Facebook and write information to Facebook (and that is it)? If that is the case, you should read a tutorial titled <a href="https://spring.io/guides/gs/accessing-facebook/" target="_blank" rel="nofollow">Accessing Facebook Data</a>. It should help you to get started.</p>
<p class="cye-lm-tag">If that guide doesn’t solve your problem, let me know!</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-708680"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">farziny</span>  <span class="comment_date cye-lm-tag">June 24, 2014, 19:07</span></div><div class="comment_text" id="comment-body-708680"><p class="cye-lm-tag">hello my friend,<br> i have a trouble to run this sample, in “” class on line 68 we have<br> .apply(new SpringSocialConfigurer())<br> but i get can’t resolve method ! i’m sure that i provide all maven dependencies correctly,<br> then i tried to upgrade the “spring.security.version” to 3.2.4.RELEASE but the problem remains.<br> whats the problem ?<br> thanks.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-708811"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 24, 2014, 22:18</span></div><div class="comment_text" id="comment-body-708811"><p class="cye-lm-tag">Are you getting a compilation error or a runtime error? Also, if you get a runtime error, it would be useful to see the stacktrace.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-709135"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">farziny</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 06:57</span></div><div class="comment_text" id="comment-body-709135"><p class="cye-lm-tag">hello again,<br> when i start packaging app by using maven directly, i get rid of my first question, because that was just an IDE wrong alert.<br> but now i have another problem after returning from facebook auth, the page redirected into<br> <a href="http://localhost:8080/signin#_=_" rel="nofollow">http://localhost:8080/signin#_=_</a><br> and i an error 404 will raise.<br> of course i can’t find any controller matching /signin url<br> why!?<br> whats the problem you think ?<br> thank you</p>
</div> </div><ul class="children"><li class="comment odd alt depth-4" id="comment-709313"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">farziny</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 11:06</span></div><div class="comment_text" id="comment-body-709313"><p class="cye-lm-tag">Hi, Petri<br> can you help me on my question ?<br> thanks</p>
</div> </div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-4" id="comment-709317"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 11:11</span></div><div class="comment_text" id="comment-body-709317"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">Yes, I was wondering if your previous problem was an IDE alert because I used to see a similar alert in IntelliJ Idea. However, it disappeared after I updated it to a newer version.</p>
<p class="cye-lm-tag">I assume that your problem occurs when a registered user tries to log in to your application (because of the url). If this isn’t the case, let me know.</p>
<p class="cye-lm-tag">Anyway, you can configure the url in which the user is redirected after a successful login by <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/#comment-592795" rel="nofollow">following the instructions which I gave in this comment</a>.</p>
<p class="cye-lm-tag">Let me know if this doesn’t solve your problem.</p>
</div> </div><ul class="children"><li class="comment odd alt depth-5" id="comment-709402"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">farziny</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 13:12</span></div><div class="comment_text" id="comment-body-709402"><p class="cye-lm-tag">here is my changes</p>
<pre><code>
protected void configure(HttpSecurity http) throws Exception {
   SpringSocialConfigurer springSocialConfigurer = new SpringSocialConfigurer();
   springSocialConfigurer.postLoginUrl("/myurl");
   ...
}
</code>
</pre><p class="cye-lm-tag">in http:/localhost:8080/login i click on Sign in With facebook then i redirected to<br> facebook and have a successful login but it  still redirected to<br> http:/localhost:8080/signin#_=_</p>
<p class="cye-lm-tag">here is statcktrace<br> DEBUG – LoginController            – Rendering login page.<br> DEBUG – RequestAddCookies          – CookieSpec selected: best-match<br> DEBUG – RequestAuthCache           – Auth cache not set in the context<br> DEBUG – ttpClientConnectionManager – Connection request: [route: {s}-&gt;https:/graph.facebook.com:443][total kept alive: 0; route allocated: 0 of 5; total allocated: 0 of 10]<br> DEBUG – ttpClientConnectionManager – Connection leased: [id: 0][route: {s}-&gt;https:/graph.facebook.com:443][total kept alive: 0; route allocated: 1 of 5; total allocated: 1 of 10]<br> DEBUG – MainClientExec             – Opening connection {s}-&gt;https:/graph.facebook.com:443<br> DEBUG – ttpClientConnectionManager – Connecting to graph.facebook.com/173.252.112.23:443<br> DEBUG – anagedHttpClientConnection – http-outgoing-0: Shutdown connection<br> DEBUG – MainClientExec             – Connection discarded<br> DEBUG – anagedHttpClientConnection – http-outgoing-0: Close connection<br> DEBUG – ttpClientConnectionManager – Connection released: [id: 0][route: {s}-&gt;https:/graph.facebook.com:443][total kept alive: 0; route allocated: 0 of 5; total allocated: 0 of 10]</p>
</div></div></li><li class="comment even depth-5" id="comment-709485"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">farziny</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 15:53</span></div><div class="comment_text" id="comment-body-709485"><p class="cye-lm-tag">sorry Petri,<br> can i ask what url you expected to called after return from facebook ?<br> which controller must catch the request and how can i get auth_token to get all friends of logged in user ?<br> i have so many quastions, but at first i need to run application properly,<br> i googling so much for some other examples but yours is best article ever.<br> thanks again.</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-709555"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 18:10</span></div><div class="comment_text" id="comment-body-709555"><p class="cye-lm-tag">No problem. I happy to help but I am on summer holiday at the moment so my response time might be a bit longer than in a normal situation.</p>
<p class="cye-lm-tag">Anyway, if you <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">implement the registration and login functions as described in this blog post</a>, the only urls you should care about are:</p>
<ul><li>The sign up url. A user is redirected to this url when Facebook login is suggesful but a user account isn’t found from the database. The default value of the sign up url is ‘/signup’. You can override this by using XML configuration. At the moment it isn’t possible to override this url if you use Java configuration.</li><li>The post login url. A user is redirected to this url when Facebook login is successful and a user account is found from the database. You can change this url by following the instruction given in my last comment.</li></ul><p class="cye-lm-tag">I have never experienced a situation where the user would have been redirected to the ‘/signin’ url, so I am not sure how you can solve this problem (The log you added to your comment doesn’t reveal anything unusual).</p>
<p class="cye-lm-tag">I think that the easiest to way to solve this problem is to compare the configuration of your application with the configuration of <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal" target="_blank" rel="nofollow">my example application</a>. Unfortunately it is impossible to figure out the root cause without seeing the source code of your application.</p>
<p class="cye-lm-tag">About your second question: I have never used Spring Social Facebook for accessing user’s Facebook data (such as list of friends), so I don’t know how you can do it. I think that your best bet is to read this guide which explains how you can <a href="https://spring.io/guides/gs/accessing-facebook/" target="_blank" rel="nofollow">create a simple web application that reads data from Facebook</a>.</p>
</div></div></li><li class="comment even depth-5" id="comment-710480"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">farziny</span>  <span class="comment_date cye-lm-tag">June 26, 2014, 16:24</span></div><div class="comment_text" id="comment-body-710480"><p class="cye-lm-tag">excuse me Petri,<br> i found that my server doesn’t have an access to graph.facebook.com:443<br> this make’s the problem, after i resolve this issue now have a null pointer exception at<br> org.springframework.social.security.SocialAuthenticationFilter.doAuthentication(SocialAuthenticationFilter.java:301)</p>
<p class="cye-lm-tag">Authentication success = getAuthenticationManager().authenticate(token);<br> and getAuthenticationManager(). return null value !<br> do you have any suggestion ?<br> thanks you for your replies,</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-710500"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 26, 2014, 16:45</span></div><div class="comment_text" id="comment-body-710500"><p class="cye-lm-tag">Have you configured the <code>AuthenticationManager</code> bean?</p>
<p class="cye-lm-tag">You can do this by overriding the <code>protected void configure(AuthenticationManagerBuilder auth)</code> method of the <code>WebSecurityConfigurerAdapter</code> in the <code>SecurityContext</code> class (assuming that your configuration is similar than mine).</p>
</div></div></li><li class="comment even depth-5" id="comment-710542"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">farziny</span>  <span class="comment_date cye-lm-tag">June 26, 2014, 17:43</span></div><div class="comment_text" id="comment-body-710542"><p class="cye-lm-tag">finally, all thing worked together successfully.<br> thanks for all of your advises.<br> have a good holidays.</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-710572"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 26, 2014, 18:15</span></div><div class="comment_text" id="comment-body-710572"><p class="cye-lm-tag">Thanks! It is good to hear that you were able to solve your problem.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-709240"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Coder</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 09:51</span></div><div class="comment_text" id="comment-body-709240"><p class="cye-lm-tag">Hi in RepositoryUserDetailService  I am getting error “The method getBuilder() is undefined for the type ExampleUserDetails”…Please Help anyone..</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-709299"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 25, 2014, 10:52</span></div><div class="comment_text" id="comment-body-709299"><p class="cye-lm-tag">Some of the methods of the <code>ExampleUserDetails</code> class were left out from this blog post because I wanted to shorten the code listings. The <code>getBuilder()</code> method was one of them.</p>
<p class="cye-lm-tag">You can <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/security/dto/ExampleUserDetails.java" target="_blank" rel="nofollow">get the source code of the <code>ExampleUserDetails</code> class from Github</a>.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-712096"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">FANA</span>  <span class="comment_date cye-lm-tag">June 28, 2014, 11:26</span></div><div class="comment_text" id="comment-body-712096"><p class="cye-lm-tag">hello Peter.. thank your for this article.. can u create a video tutorial for this article..?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-712127"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 28, 2014, 12:09</span></div><div class="comment_text" id="comment-body-712127"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">That is a great idea. I will add this to my Trello board, and I will record the video tutorial in the future.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-712291"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">daniel</span>  <span class="comment_date cye-lm-tag">June 28, 2014, 16:05</span></div><div class="comment_text" id="comment-body-712291"><p class="cye-lm-tag">I’m using your example and my question is where the method is implemented<br> public User findByEmail(String email);?? i dont see (interface UserRepository.class)</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-712300"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 28, 2014, 16:21</span></div><div class="comment_text" id="comment-body-712300"><p class="cye-lm-tag">The <code>findByEmail(String email)</code> is a custom query method which is found from the <code>UserRepository</code> interface. This has been explained in the section titled ‘Implementing the UserDetailsService interface’. You can also <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/user/repository/UserRepository.java" target="_blank" rel="nofollow">get the source code of the <code>UserRepository</code> interface from Github</a>.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-712302"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">daniel</span>  <span class="comment_date cye-lm-tag">June 28, 2014, 16:26</span></div><div class="comment_text" id="comment-body-712302"><p class="cye-lm-tag">yes, but I do not see where is the implementation of the method, see the calling but where is the implementation?</p>
</div> </div></li><li class="comment odd alt depth-3" id="comment-712308"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">daniel</span>  <span class="comment_date cye-lm-tag">June 28, 2014, 16:33</span></div><div class="comment_text" id="comment-body-712308"><p class="cye-lm-tag">I really doubt that userRepository class implements the interface for the method to work findByEmail</p>
<p class="cye-lm-tag">sorry for my English</p>
<p class="cye-lm-tag">thanks!!</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-4" id="comment-712322"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 28, 2014, 16:55</span></div><div class="comment_text" id="comment-body-712322"><p class="cye-lm-tag">The example application uses <a href="/spring-data-jpa-tutorial/" rel="nofollow">Spring Data JPA</a> which provides a proxy implementations for each interface which extends the <code>Repository</code> interface. That is why there is no need to implement the <code>UserRepository</code> interface.</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-714335"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">June 30, 2014, 17:41</span></div><div class="comment_text" id="comment-body-714335"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">I in the process of implemented Spring Security &amp; Spring Social for the website and also would like to allow for the iOS and Android apps to connect via the social as well. Idea i had in mind is to have the centralised api expose in web end and let it handle the social signup/sing in process where mobile end only connect to this api.</p>
<p class="cye-lm-tag">Can you please help me on modelling such and how should i go on about this.</p>
<p class="cye-lm-tag">Thanks</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-716163"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 2, 2014, 11:15</span></div><div class="comment_text" id="comment-body-716163"><p class="cye-lm-tag">Hi Sam,</p>
<p class="cye-lm-tag">I have never done this myself (surprising but it is the truth).</p>
<p class="cye-lm-tag">However, I found <a href="http://stackoverflow.com/a/15524831/313554" target="_blank" rel="nofollow">an answer to StackOverflow question titled ‘Integrate app with spring social website’</a> which looks quite promising. The idea is that you have to first implement the social sign in by using the native APIs (Android, iOS) and then provide the required credentials to your backend and log the user in.</p>
<p class="cye-lm-tag">I am planning to extend my Spring Social tutorial to cover REST APIs in the future. I will probably take a closer look at this when I do that.</p>
</div> </div><ul class="children"><li class="comment odd alt depth-3" id="comment-720568"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">sam</span>  <span class="comment_date cye-lm-tag">July 6, 2014, 16:58</span></div><div class="comment_text" id="comment-body-720568"><p class="cye-lm-tag">Thanks Petri. Look forward to it.</p>
</div> </div><ul class="children"><li class="comment even depth-4" id="comment-1235553"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Armen</span>  <span class="comment_date cye-lm-tag">June 30, 2015, 23:01</span></div><div class="comment_text" id="comment-body-1235553"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Did you have a chance to add REST API support in this example?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-1235585"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 30, 2015, 23:49</span></div><div class="comment_text" id="comment-body-1235585"><p class="cye-lm-tag">Hi Armen,</p>
<p class="cye-lm-tag">No. I will update my <a href="/spring-data-jpa-tutorial/" rel="nofollow">Spring Data JPA</a> and <a href="/spring-mvc-test-tutorial/" rel="nofollow">Spring MVC Test</a> tutorials before I will update this tutorial. If everything goes as planned, I will do it at November or most likely at December.</p>
<p class="cye-lm-tag">Actually I asked this from the creator of Spring Social because <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-1224715" rel="nofollow">one of my readers asked the same question</a>, and <a href="https://twitter.com/habuma/status/609418147599257601" target="_blank" rel="nofollow">he said</a> that at the moment the best way to do this is to do a normal GET request and let the backend handle the authentication dance.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-723631"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Amit</span>  <span class="comment_date cye-lm-tag">July 9, 2014, 13:25</span></div><div class="comment_text" id="comment-body-723631"><p class="cye-lm-tag">Hi Petri,<br> Thank you for your quick response. I tried working with maven but facing below issue. Can you please help me to look into this issue.</p>
<p class="cye-lm-tag">[INFO] ————————————————————————<br> [INFO] BUILD FAILURE<br> [INFO] ————————————————————————<br> [INFO] Total time: 4.906 s<br> [INFO] Finished at: 2014-07-09T15:47:17+05:30<br> [INFO] Final Memory: 13M/154M<br> [INFO] ————————————————————————<br> [ERROR] Failed to execute goal org.apache.maven.plugins:maven-resources-plugin:2.6:resources (defau<br> lt-resources) on project spring-mvc-normal: Error loading property file ‘F:\workspace\login\profile<br> s\dev\socialConfig.properties’ -&gt; [Help 1]<br> [ERROR]</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-723699"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 9, 2014, 14:43</span></div><div class="comment_text" id="comment-body-723699"><p class="cye-lm-tag">Hi Amit,</p>
<p class="cye-lm-tag">the Maven build is a bit different than the setup described in this blog post. It expects to find <code>socialConfig.properties</code> file from the <code>profiles/dev/</code> directory. This properties file contains the configuration of your Facebook and Twitter application (app id and app secret).</p>
<p class="cye-lm-tag">Also, the example application doesn’t contain this file. This means that you have to create it yourself.The <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/README.md" target="_blank" rel="nofollow">README of the example application</a> explains how you can set up the example application before you can run it.</p>
<p class="cye-lm-tag">I hope this answered to your question. If not, feel free to ask more questions!</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-728623"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Amit Kumar Singh</span>  <span class="comment_date cye-lm-tag">July 15, 2014, 10:02</span></div><div class="comment_text" id="comment-body-728623"><p class="cye-lm-tag">I deployed the project but not able to access registration page and also authentication page is not available. can you please provide me complete setup of this project to learn more.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-728640"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 15, 2014, 10:35</span></div><div class="comment_text" id="comment-body-728640"><p class="cye-lm-tag">Did you follow the steps described in the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/README.md" target="_blank" rel="nofollow">README</a> of the example application?</p>
<p class="cye-lm-tag">If you did follow them, could you check the log and paste the relevant part of it here (also, if you see any stack traces, add them here as well)?</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-728652"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Amit</span>  <span class="comment_date cye-lm-tag">July 15, 2014, 10:56</span></div><div class="comment_text" id="comment-body-728652"><p class="cye-lm-tag">I followed the steps as you have mentioned and getting the login page. But when i tried to login my url is this “http://localhost:8080/spring-social-normal-mvc/login” and after submitting the URL it redirects to “http://localhost:8080/login”. So, I feel the problem is redirecting the URL. It’s not redirecting properly. Also, After login with facebook the url redirects to “http://localhost:8080/spring-social-normal-mvc/signin#_=_” and it shows 404 error. Please let me know if i have to update anything more in configuration.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-728667"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 15, 2014, 11:25</span></div><div class="comment_text" id="comment-body-728667"><blockquote><p class="cye-lm-tag">I followed the steps as you have mentioned and getting the login page. But when i tried to login my url is this “http://localhost:8080/spring-social-normal-mvc/login” and after submitting the URL it redirects to “http://localhost:8080/login”.</p>
</blockquote><p class="cye-lm-tag">The reason for this is that the <code>action</code> attribute of the login form ignores the context path. You can fix this by replacing the <code>form</code> tag with this one:</p>
<pre><code>
&lt;form action="${pageContext.request.contextPath}/login/authenticate" 
      method="POST" 
      role="form"&gt;
</code>
</pre><p class="cye-lm-tag">I made the fix to the example application. Thank you for reporting this bug.</p>
<blockquote><p class="cye-lm-tag">Also, After login with facebook the url redirects to “http://localhost:8080/spring-social-normal-mvc/signin#_=_” and it shows 404 error.</p>
</blockquote><p class="cye-lm-tag"><a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-709135" rel="nofollow">Another reader had the same problem</a>, and the reason for this behavior was that <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-710480" rel="nofollow">his server didn’t have access to the Facebook Graph API</a>.</p>
</div> </div><ul class="children"><li class="comment even depth-5" id="comment-728692"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Amit</span>  <span class="comment_date cye-lm-tag">July 15, 2014, 11:56</span></div><div class="comment_text" id="comment-body-728692"><p class="cye-lm-tag">Thank you Petri. It works…. cheers :)</p>
</div></div></li><li class="comment odd alt depth-5" id="comment-728726"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Amit</span>  <span class="comment_date cye-lm-tag">July 15, 2014, 12:45</span></div><div class="comment_text" id="comment-body-728726"><p class="cye-lm-tag">I tried as mentioned above but still it redirects to same url. I pasted my console log. Please have a look and help me to fix this issue.</p>
<p class="cye-lm-tag">DEBUG – ttpClientConnectionManager – Connection leased: [id: 0][route: {s}-&gt;https:/<br> /graph.facebook.com:443][total kept alive: 0; route allocated: 1 of 5; total alloca<br> ted: 1 of 10]<br> DEBUG – MainClientExec             – Opening connection {s}-&gt;https:/graph.facebook<br> .com:443<br> DEBUG – ttpClientConnectionManager – Connecting to graph.facebook.com/31.13.74.128:<br> 443<br> DEBUG – anagedHttpClientConnection – http-outgoing-0: Shutdown connection<br> DEBUG – MainClientExec             – Connection discarded<br> DEBUG – anagedHttpClientConnection – http-outgoing-0: Close connection<br> DEBUG – ttpClientConnectionManager – Connection released: [id: 0][route: {s}-&gt;https<br> :/graph.facebook.com:443][total kept alive: 0; route allocated: 0 of 5; total allo<br> cated: 0 of 10]<br> DEBUG – LoginController            – Rendering login page.<br> DEBUG – RequestAddCookies          – CookieSpec selected: best-match<br> DEBUG – RequestAuthCache           – Auth cache not set in the context<br> DEBUG – ttpClientConnectionManager – Connection request: [route: {s}-&gt;https:/graph<br> .facebook.com:443][total kept alive: 0; route allocated: 0 of 5; total allocated: 0<br> of 10]<br> DEBUG – ttpClientConnectionManager – Connection leased: [id: 1][route: {s}-&gt;https:/<br> graph.facebook.com:443][total kept alive: 0; route allocated: 1 of 5; total alloca<br> ted: 1 of 10]<br> DEBUG – MainClientExec             – Opening connection {s}-&gt;https:/graph.facebook<br> .com:443<br> DEBUG – ttpClientConnectionManager – Connecting to graph.facebook.com/31.13.74.128:<br> 443<br> DEBUG – anagedHttpClientConnection – http-outgoing-1: Shutdown connection<br> DEBUG – MainClientExec             – Connection discarded<br> DEBUG – anagedHttpClientConnection – http-outgoing-1: Close connection<br> DEBUG – ttpClientConnectionManager – Connection released: [id: 1][route: {s}-&gt;https<br> :/graph.facebook.com:443][total kept alive: 0; route allocated: 0 of 5; total allo<br> cated: 0 of 10]</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-5" id="comment-729014"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 15, 2014, 20:24</span></div><div class="comment_text" id="comment-body-729014"><p class="cye-lm-tag">Your log file looks pretty similar than <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-709402" rel="nofollow">farziny’s log</a>.</p>
<p class="cye-lm-tag">His problem was that his server could not access the Facebook Graph API. I am not exactly sure what he meant by that, but I assumed that either his FB application was not configured properly, or the app secret and app key were not correct.</p>
<p class="cye-lm-tag">When you created the FB Application for your web application, did you enable the Facebook login?</p>
</div></div></li><li class="comment odd alt depth-5" id="comment-729493"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Amit</span>  <span class="comment_date cye-lm-tag">July 16, 2014, 11:22</span></div><div class="comment_text" id="comment-body-729493"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">As, you said its blocking the facebook graph api, you were correct. I fixed the problem and working fine everything. You rocks dude…<br> Trying to implement to get the post feed of user and friend list also. May be your help required in future again. So, thanks a lot in advance.</p>
</div></div></li><li class="comment even depth-5" id="comment-1161559"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Raghavendra Rao</span>  <span class="comment_date cye-lm-tag">March 22, 2015, 20:27</span></div><div class="comment_text" id="comment-body-1161559"><p class="cye-lm-tag">Hi Amit, Petri,<br> Even I am getting the same error you specified earlier. After the Facebook login, the control is not returning back to login page/signUp page. Do you know how to resolve this/ Enable the Facebook graph API on the server?</p>
<p class="cye-lm-tag">DEBUG – headers                    – http-outgoing-1 &lt;&lt; Access-Control-Allow-Origin: *<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; X-FB-Rev: 1653508<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; ETag: "02e90b73697f1bf84bb1c08a06c30817978e2ff1"<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; Pragma: no-cache<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; Cache-Control: private, no-cache, no-store, must-revalidate<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; Facebook-API-Version: v2.0<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; Expires: Sat, 01 Jan 2000 00:00:00 GMT<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; X-FB-Debug: KntgReJ8rZbpdGdWOho0pLPgYBPEpFQei1a+jQNDJJBs+qoE6Sx9pBiHGMk0MsA5NEv6oa0uEv5ABrrVqMwgJg==<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; Date: Sun, 22 Mar 2015 18:07:53 GMT<br> DEBUG – headers                    – http-outgoing-1 &lt;&lt; Connection: keep-alive<br> DEBUG – headers                    – http-outgoing-1 &lt;<a href="https://graph.facebook.com:443%5D" rel="nofollow">https://graph.facebook.com:443%5D</a> can be kept alive indefinitely<br> DEBUG – ttpClientConnectionManager – Connection released: [id: 1][route: {s}-&gt;<a href="https://graph.facebook.com:443%5D%5Btotal" rel="nofollow">https://graph.facebook.com:443%5D%5Btotal</a> kept alive: 1; route allocated: 1 of 5; total allocated: 1 of 10]</p>
</div></div></li><li class="comment odd alt depth-5" id="comment-1161594"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Raghavendra Rao</span>  <span class="comment_date cye-lm-tag">March 22, 2015, 21:09</span></div><div class="comment_text" id="comment-body-1161594"><p class="cye-lm-tag">Hi Petri,<br> I am facing a problem where the Facebook sign-in happens but after that the control is not returning to my applicaiton. It is simply waiting for localhost.<br> I am simply running this code as is without any modification( except creating a new socialConfig.properties )<br> what basically happens after the facebook login? Does it check for the user existance? I am asking this because I havent configured the Database.</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-5" id="comment-1161647"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 22, 2015, 22:26</span></div><div class="comment_text" id="comment-body-1161647"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">The registration and login process is explained in <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">the second part of my Spring Social tutorial</a>. Does your problem occur when the user tries to create a user account by using social sign in (i.e. he clicks the social sign in link for the first time)?</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-731224"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Pradeep</span>  <span class="comment_date cye-lm-tag">July 18, 2014, 13:43</span></div><div class="comment_text" id="comment-body-731224"><p class="cye-lm-tag">Hi Petri,<br> Nice article!!<br> I have followed exactly the same steps as described here and can go to facebook login page from my apps login page (by clicking on facebook link).After fb login , the app lands back to the apps login page with the url appended with ‘#_=_’ e.g. ‘http://localhost:8080/MyApp/#_=_’.</p>
<p class="cye-lm-tag">Actually I expected the registration page will be displayed instead.SocialUserService::loadUserByUserId() is not getting called as I put some sop there.</p>
<p class="cye-lm-tag">Any hints?</p>
<p class="cye-lm-tag">Best regards,<br> Pradeep</p>
</div> </div><ul class="children"><li class="comment even depth-2" id="comment-731866"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Pradeep</span>  <span class="comment_date cye-lm-tag">July 19, 2014, 12:15</span></div><div class="comment_text" id="comment-body-731866"><p class="cye-lm-tag">my own mistake, forgot adding /usr/register twith permitAll() in security context.<br> Can see the register form now.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-3" id="comment-732245"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 20, 2014, 00:05</span></div><div class="comment_text" id="comment-body-732245"><p class="cye-lm-tag">It is good to hear that you were able to solve your problem!</p>
</div> </div><ul class="children"><li class="comment even depth-4" id="comment-733835"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Pradeep</span>  <span class="comment_date cye-lm-tag">July 21, 2014, 17:21</span></div><div class="comment_text" id="comment-body-733835"><p class="cye-lm-tag">Well the user registers now,I mean registration screen comes and user details are saved to my Candidate table but UserConnection table has no entries of this new user.So looks like some configuration error still there regarding SocialUserService since it’s loadUserByUserId() is still not called.</p>
<p class="cye-lm-tag">My securitycontext.xml is:</p>
<p class="cye-lm-tag">and social.xml is</p>
<p class="cye-lm-tag">My databasecontext.xml has the rest:</p>
<p class="cye-lm-tag"> 3 ? request.getRequestURI().split(‘/’)[3] : ‘guest’}” /&gt;</p>
<p class="cye-lm-tag">Any hints for this problem?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-733889"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 21, 2014, 18:24</span></div><div class="comment_text" id="comment-body-733889"><p class="cye-lm-tag">Wordpress ate your XML configuration but I happen to have an idea what might be the problem. You have to persist the user’s connection to the <code>UserConnection</code> table after the registration has been successful (and the user uses social sign in). You can do this by following the instructions given in <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">the second part of this tutorial</a>.</p>
<p class="cye-lm-tag">However, please note that <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/web/ProviderSignInUtils.html#handlePostSignUp%28java.lang.String,%20org.springframework.web.context.request.RequestAttributes%29" target="_blank" rel="nofollow">the static <code>handlePostSignUp</code> method of the <code>ProviderSignInUtils</code> class</a> has been deprecated. You should use <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/web/ProviderSignInUtils.html#doPostSignUp%28java.lang.String,%20org.springframework.web.context.request.RequestAttributes%29" target="_blank" rel="nofollow">the <code>doPostSignUp()</code> method instead</a>.</p>
<p class="cye-lm-tag">I hope that this solves your problem.</p>
</div></div></li><li class="comment even depth-5" id="comment-735727"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Pradeep</span>  <span class="comment_date cye-lm-tag">July 23, 2014, 16:38</span></div><div class="comment_text" id="comment-body-735727"><p class="cye-lm-tag">That was a perfect hint!!<br> Actually I have commented the call to ProviderSignInUtils.handlePostSignUp() thinking its not useful in my case.<br> Thanks a lot :)</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-735745"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 23, 2014, 17:31</span></div><div class="comment_text" id="comment-body-735745"><p class="cye-lm-tag">You are welcome. It is good to hear that you were able to solve your problem.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-738671"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Sanjay</span>  <span class="comment_date cye-lm-tag">July 26, 2014, 08:07</span></div><div class="comment_text" id="comment-body-738671"><p class="cye-lm-tag">This article is not simple. It’s difficult to understand so please make simple example</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-738849"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 26, 2014, 10:52</span></div><div class="comment_text" id="comment-body-738849"><p class="cye-lm-tag">Unfortunately I have no idea how I could create a simpler example application since I think that the example application is already pretty simple.</p>
<p class="cye-lm-tag">However, if you let me know which parts of this blog post were hard to understand, I can try to make them easier to understand.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-741553"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Naitik</span>  <span class="comment_date cye-lm-tag">July 28, 2014, 13:37</span></div><div class="comment_text" id="comment-body-741553"><p class="cye-lm-tag">HI Petri,</p>
<p class="cye-lm-tag"> Logout is not working for facebook.   It just redirecting to login page.    How can I do logout in facebook.<br> And for twitter I’m getting  this error.</p>
<p class="cye-lm-tag">org.springframework.web.client.HttpClientErrorException: 406 Not Acceptable<br> org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:91)</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-741567"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 28, 2014, 13:48</span></div><div class="comment_text" id="comment-body-741567"><p class="cye-lm-tag">Do you mean that log out function of <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal" target="_blank" rel="nofollow">my example application</a> is not working, or are you trying to follow the instructions given in this blog post and cannot get the log out to work in your application?</p>
<p class="cye-lm-tag">Also, do you mean that after the user clicks the log out link, the user is still logged in to the application and can access protected resources (such as the front page of my example application)?</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-741649"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Naitik</span>  <span class="comment_date cye-lm-tag">July 28, 2014, 15:02</span></div><div class="comment_text" id="comment-body-741649"><p class="cye-lm-tag">yes,<br> when I do click on logout button it’s redirecting to login page.  but when I try to open facebook.com it’s directly shows me home page.(It’s not asking me use name and password again)  That means logut is not working properly.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-741684"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 28, 2014, 15:27</span></div><div class="comment_text" id="comment-body-741684"><p class="cye-lm-tag">As far as I know, Spring Social doesn’t support this. However, there are a couple of workarounds which are described in the following forum discussions:</p>
<ul><li><a href="http://forum.spring.io/forum/spring-projects/web/social/118344-how-to-do-logout-from-facebook-connection-via-spring-social" target="_blank" rel="nofollow">How to do logout from Facebook Connection via Spring social</a></li><li><a href="http://forum.spring.io/forum/spring-projects/web/social/130373-facebook-explicit-logout" target="_blank" rel="nofollow">Facebook explicit logout</a></li></ul><p class="cye-lm-tag">I hope that this answered to your question. Also, remember that you have to use similar workarounds for other social sign in providers as well.</p>
</div> </div><ul class="children"><li class="comment even depth-5" id="comment-741718"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Anonymous</span>  <span class="comment_date cye-lm-tag">July 28, 2014, 15:48</span></div><div class="comment_text" id="comment-body-741718"><p class="cye-lm-tag">Thanks Petri,<br> There is one more issue in my application.    when I do click on signin with twitter,  I am getting following error.     Am I missing something??</p>
<p class="cye-lm-tag">org.springframework.web.client.HttpClientErrorException: 406 Not Acceptable<br> org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:91)</p>
</div></div></li><li class="comment odd alt depth-5" id="comment-742832"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Naitik</span>  <span class="comment_date cye-lm-tag">July 29, 2014, 07:56</span></div><div class="comment_text" id="comment-body-742832"><p class="cye-lm-tag">Thanks Petri,<br> There is one more issue in my application. when I do click on signin with twitter, I am getting following error. Am I missing something??</p>
<p class="cye-lm-tag">org.springframework.web.client.HttpClientErrorException: 406 Not Acceptable<br> org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:91)</p>
</div></div></li><li class="comment even depth-5" id="comment-742879"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Naitik</span>  <span class="comment_date cye-lm-tag">July 29, 2014, 09:17</span></div><div class="comment_text" id="comment-body-742879"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag"> Find the solution.  I was not setting callback URL in twitter that was the problem.   But when I do login in twitter and when it’s successful it’s redirecting me to registration form.  Why is so?  do I need to change my callback URL?</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-742899"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 29, 2014, 09:51</span></div><div class="comment_text" id="comment-body-742899"><p class="cye-lm-tag">Great! It is good to hear that you were able to solve your problem.</p>
<p class="cye-lm-tag">The user is redirected to the registration page because either the user account or the persisted connection is not found from the database. This can be a bit confusing so I will explain it here:</p>
<p class="cye-lm-tag">When a user “returns” to the example application after clicking a social sign button, Spring social tries to find the persisted connection from the <a href="http://docs.spring.io/spring-social/docs/1.1.x/reference/htmlsingle/#section_persistingConnections" target="_blank" rel="nofollow"><code>UserConnection</code></a> table.<br> If the connection is not found, the user is forwarded to the registration page because the application assumes that the user doesn’t have a user account yet.</p>
<p class="cye-lm-tag">On the other hand, if the connection is found, Spring Social tries to find the correct user account by using the value of the <code>userId</code> column (the example application uses email address as user id). If the user is not found, the user is forwarded to the registration page.</p>
<p class="cye-lm-tag">I hope that this answered to your question.</p>
<p class="cye-lm-tag">By the way, if you want to get more information about the social sign in flow, you should read <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">the second part of this tutorial</a>.</p>
</div></div></li><li class="comment even depth-5" id="comment-743165"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Naitik</span>  <span class="comment_date cye-lm-tag">July 29, 2014, 14:46</span></div><div class="comment_text" id="comment-body-743165"><p class="cye-lm-tag">Thanks Petri.</p>
<p class="cye-lm-tag"> Thank you for help.   Project is now working properly. :)</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-743625"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 29, 2014, 22:05</span></div><div class="comment_text" id="comment-body-743625"><p class="cye-lm-tag">You are welcome. :)</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-781206"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Yeloon</span>  <span class="comment_date cye-lm-tag">August 26, 2014, 10:58</span></div><div class="comment_text" id="comment-body-781206"><p class="cye-lm-tag">Hello,<br> I have a problem with facebook when I turn on HTTPS for /**. When user is redirected back from Facebook site after successful login, and after granting permissions for my app. It goes back to my SocialAuthenticationFilter and attemptAuthentication method. Everythink is ok for http, but with https this method is called one more time, and the user is already authenticated (in attemptAuthService()) so it tries to addConnection but token.principal is null so entire method returns null. In the end the AuthenticationServiceException(“authentication failed”) is thrown and user is redirected to defaultFailureUrl. I use XML version of your config.</p>
<p class="cye-lm-tag">I tried to force http for /auth/** and it WORKS, but i don’t think it’s safe to transfer tokens on unsecured channel.</p>
<p class="cye-lm-tag">Don’t know what to do :(</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-781637"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">August 26, 2014, 19:12</span></div><div class="comment_text" id="comment-body-781637"><p class="cye-lm-tag">When the user is redirected back to your web application, is the user redirected by using HTTP or HTTPS? The reason why I ask this is that I am using Spring Social in a web application that is served by using HTTPS, and the Facebook login is working correctly.</p>
<p class="cye-lm-tag">I checked the Facebook application configuration of that web application and I noticed that I had entered the website url by using HTTPS (e.g. <a href="https://www.example.com" rel="nofollow">https://www.example.com</a> instead of <a href="http://www.example.com" rel="nofollow">http://www.example.com</a>). If I would be you, I would check the website url setting found from the Facebook application configuration and ensure that the website url setting has the ‘https’ prefix instead of ‘http’.</p>
<p class="cye-lm-tag">Let me know if this solves your problem.</p>
</div> </div></li><li class="comment even depth-2" id="comment-781748"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Yeloon</span>  <span class="comment_date cye-lm-tag">August 26, 2014, 20:53</span></div><div class="comment_text" id="comment-body-781748"><p class="cye-lm-tag">Aww… I have finally figured it out. The problem was in my social configuration. I have added authenticationSuccessHandler (SavedRequestAwareAuthenticationSuccessHandler) with useReferer=true to my socialAuthenticationFilter.</p>
<p class="cye-lm-tag">I have done that because I have bootstrap modal dialog with login form on every page and I wanted to redirect user to the same page after authentication. I had totally forgot about that.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-3" id="comment-781769"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">August 26, 2014, 21:17</span></div><div class="comment_text" id="comment-body-781769"><p class="cye-lm-tag">It is good to hear that you were able to solve your problem!</p>
</div> </div></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-783230"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Michael Ettlinger</span>  <span class="comment_date cye-lm-tag">August 27, 2014, 21:22</span></div><div class="comment_text" id="comment-body-783230"><p class="cye-lm-tag">Everytime a sql-query is placed it results in a 404 Error. For example I can load the main page without problems. But if I put</p>
<p class="cye-lm-tag">User test = userRepository.findByEmail(“test”)<br> somewhere in the code i get the 404 Error again. Also everytime I try to do something like login -&gt; 404. From the logs i see the sql query which works fine if I copy it into phpmyadmin. Except for this logging I se nothing.</p>
<p class="cye-lm-tag">If I place a logging before and after the query I only see the first one. I guess the query somehow crashes and produces a 404.</p>
<p class="cye-lm-tag">I know 404 means not found but this does not make any sense.</p>
<p class="cye-lm-tag">What can I do? Is there a way to turn up more loggings?</p>
<p class="cye-lm-tag">I use Glassfish with the source provided from github.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-783243"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">August 27, 2014, 21:43</span></div><div class="comment_text" id="comment-body-783243"><p class="cye-lm-tag">I have never tried to run this with Glassfish but I can try to figure out what is going on. Which version of Glassfish are you using?</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-796636"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Ricardo</span>  <span class="comment_date cye-lm-tag">September 5, 2014, 13:09</span></div><div class="comment_text" id="comment-body-796636"><p class="cye-lm-tag">Is it possible to override the /auth/{providerId} path?</p>
<p class="cye-lm-tag">I need to do this because I have multiple security chains and in one of them the social login is meant to do something a bit different and also direct you to somewhere a bit different to.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-797275"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 5, 2014, 20:50</span></div><div class="comment_text" id="comment-body-797275"><p class="cye-lm-tag">Hi Ricardo,</p>
<p class="cye-lm-tag">There is a way to override the url that is processed by the social authentication filter, but you have to make your own copies of the <code>SpringSocialConfigurer</code> and <code>SocialAuthenticationFilter</code> classes. I know that this is an ugly solution but unfortunately it seems that there is no other way to do this (yet?).</p>
<p class="cye-lm-tag">The source code of the <code>CustomSocialAuthenticationFilter</code> class looks as follows (check the comments for more details):</p>
<pre><code>
public class CustomSocialAuthenticationFilter extends AbstractAuthenticationProcessingFilter {
	
	//Removed irrelevant code
	
	public CustomSocialAuthenticationFilter(AuthenticationManager authManager, 
								UserIdSource userIdSource, 
								UsersConnectionRepository usersConnectionRepository, 
								SocialAuthenticationServiceLocator authServiceLocator) {
		//Set the url that is processed by this filter
		super("/newurl");
		//Removed irrelevant code
	}
	
	//Removed irrelevant code
}
</code></pre><p class="cye-lm-tag">The source code of the <code>CustomSpringSocialConfigurer</code> class looks as follows:</p>
<pre><code>
public class CustomSpringSocialConfigurer extends SecurityConfigurerAdapter<defaultsecurityfilterchain ,="" httpsecurity=""> {

	//Removed irrelevant fields.
	
	public SpringSocialConfigurer() {
	}
	
	@Override
	public void configure(HttpSecurity http) throws Exception {		
		ApplicationContext appContext = http.getSharedObject(ApplicationContext.class);
		UsersConnectionRepository usersConnectionRepository = getDependency(
													appContext, 
													UsersConnectionRepository.class
		);
		SocialAuthenticationServiceLocator authServiceLocator = getDependency(
													applicationContext, 
													SocialAuthenticationServiceLocator.class
		);
		
		//Removed irrelevant code
		
		//Create your custom filter object
		CustomSocialAuthenticationFilter filter = new CustomSocialAuthenticationFilter(
				http.getSharedObject(AuthenticationManager.class), 
				userIdSource != null ? userIdSource : new AuthenticationNameUserIdSource(), 
				usersConnectionRepository, 
				authServiceLocator);
				
		//Removed irrelevant code
	}

        //Removed irrelevant code
}
</defaultsecurityfilterchain></code>
</pre><p class="cye-lm-tag">After you have created these classes, you need configure your application to use them (modify either the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/resources/exampleApplicationContext-security.xml" target="_blank" rel="nofollow">exampleApplicationContext-security.xml</a> file or the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/config/SecurityContext.java" target="_blank" rel="nofollow"><code>SecurityContext</code></a> class).</p>
<p class="cye-lm-tag">I haven't compiled these classes yet but you probably get the idea anyway. Also, I remember that I removed some irrelevant code to make the code sample more clear. This code must be present in your <code>CustomSocialAuthenticationFilter</code> and <code>CustomSpringSocialConfigurer</code> classes.</p>
<p class="cye-lm-tag">I hope that this answered to your question.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-802020"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Naitik</span>  <span class="comment_date cye-lm-tag">September 8, 2014, 09:59</span></div><div class="comment_text" id="comment-body-802020"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag"> I am using your demo.  I have rename one table named “userconnection”  to “mg_userconnection” .  I have changed table named in script.  But when I am redirecting to register page after social login it’s throws error like this.  “bad SQL grammar [select userId from UserConnection where providerId = ? and providerUserId = ?]; nested exception”.   My question is how can I rename that table name?</p>
<p class="cye-lm-tag">Thanks.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-802070"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 8, 2014, 10:36</span></div><div class="comment_text" id="comment-body-802070"><p class="cye-lm-tag">Hi Naitik,</p>
<p class="cye-lm-tag">You can configure the table prefix by using <a href="http://docs.spring.io/spring-social/docs/1.1.0.RELEASE/apidocs/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.html#setTablePrefix%28java.lang.String%29" target="_blank" rel="nofollow"><code>setTablePrefix()</code> method of the <code>JdbcUsersConnectionRepository</code> class</a>.</p>
<p class="cye-lm-tag">The <code>SocialContext</code> class implements <a href="http://docs.spring.io/spring-social/docs/1.1.0.RELEASE/apidocs/org/springframework/social/config/annotation/SocialConfigurer.html#getUsersConnectionRepository%28org.springframework.social.connect.ConnectionFactoryLocator%29" target="_blank" rel="nofollow">the <code>getUsersConnectionRepository(ConnectionFactoryLocator connectionFactoryLocator)</code> method of the <code>SocialConfigurer</code> class</a>. You can make the required modifications to this method. After you are done, the <code>getUsersConnectionRepository(ConnectionFactoryLocator connectionFactoryLocator)</code> method looks as follows:</p>
<pre><code>
@Override
public UsersConnectionRepository getUsersConnectionRepository(ConnectionFactoryLocator cfl) {
	JdbcUsersConnectionRepository repo = new JdbcUsersConnectionRepository(
			dataSource,
 			cfl,
 			Encryptors.noOpText()
	);
	repo.setTablePrefix("mg_");
	return repo;
}
</code>
</pre><p class="cye-lm-tag">Now Spring Social is using the table <code>mg_UserConnection</code> instead of the <code>UserConnection</code> table. At the moment it is not possible to configure the “whole” name of this database table. In other words, if your database uses case sensitive table names, you cannot transform the name of created database table into lowercase.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-802395"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Tiziano</span>  <span class="comment_date cye-lm-tag">September 8, 2014, 15:14</span></div><div class="comment_text" id="comment-body-802395"><p class="cye-lm-tag">Hi Petri,<br> with a little bit of customization I’ve this scenario:</p>
<p class="cye-lm-tag">when a new user registered (not social) displays the phrase “You cannot create an user account because you are already logged in.”. but if I try to go to the home (index.jsp) I get an internal server error, maybe because the context is wrong.</p>
<p class="cye-lm-tag">here the code of home button: <code>&lt;a href=""&gt;home&lt;/a&gt;</code></p>
<p class="cye-lm-tag">but if I use different path (/upload for example) all works fine (I’ve a controller)</p>
<p class="cye-lm-tag">all works fine if I logout and login again whit the login form… the problem is for new registration only.</p>
<p class="cye-lm-tag">can you help me?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-802775"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 8, 2014, 21:13</span></div><div class="comment_text" id="comment-body-802775"><p class="cye-lm-tag">Hi Tiziano,</p>
<p class="cye-lm-tag">I tested this out by following these steps:</p>
<ol><li>Log in as a user that is registered by using the “normal” registration.</li><li>Navigate to the registration page.</li><li>I see the error message “You cannot create an user account because you are already logged in”, and click the ‘Home’ link found from the header.</li></ol><p class="cye-lm-tag">The result is that I can see the home page in my browser.  My home link looks as follows:</p>
<pre><code>
&lt;a href="/"&gt;
	Home
&lt;/a&gt;
</code>
</pre><p class="cye-lm-tag">However, this assumes that the application uses context path ‘/’. If you want to use another context path, you should create your link by using the following code:</p>
<pre><code>
&lt;a href="${pageContext.request.contextPath}/"&gt;
	Home
&lt;/a&gt;
</code>
</pre><p class="cye-lm-tag">Did I miss something? If so, let me know :)</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-803728"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Tiziano</span>  <span class="comment_date cye-lm-tag">September 9, 2014, 11:13</span></div><div class="comment_text" id="comment-body-803728"><p class="cye-lm-tag">Thanks Petri,<br> I forgot to tell you that I already use the contextPath tag. sorry…</p>
<p class="cye-lm-tag">I obtain a generic error (500 error). with debug I see that creation time in Object principal (cast to UserDetails) is null inside database until I logout and login again.</p>
<p class="cye-lm-tag">something miss in registration process?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-804419"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 9, 2014, 20:12</span></div><div class="comment_text" id="comment-body-804419"><p class="cye-lm-tag">Did you remember to log the user in after the registration is completed? You should take a look at <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/#process-registration-form" rel="nofollow">the controller method</a> that processes the request created when the user’s submits the registration form.</p>
<p class="cye-lm-tag">If you are logging the user in after registration, could you add the stacktrace found from the log file here? It is kind of hard to say what is going on without seeing any code or a log.</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-824861"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Rituraj</span>  <span class="comment_date cye-lm-tag">September 23, 2014, 06:43</span></div><div class="comment_text" id="comment-body-824861"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Thanks for posting this tutorial this is really good. I used your xml configuration with web.xml . it is unable to locate the bean of userConnectionRepository and connectionFactoryLocator. Below are the error what i am getting</p>
<p class="cye-lm-tag">Cannot resolve reference to bean ‘usersConnectionRepository’ while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named ‘usersConnectionRepository’ is defined.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-825325"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 23, 2014, 12:44</span></div><div class="comment_text" id="comment-body-825325"><p class="cye-lm-tag">Thank you for pointing this problem out. I just noticed that the XML configuration is still using Spring profiles (I removed these profiles from the Java config). If you want to use the XML configuration, you should either</p>
<ol><li>Remove the <code>&lt;beans profile="application"&gt;</code> element and leave the other elements intact.</li><li>Set the active Spring profile to ‘application’.</li></ol><p class="cye-lm-tag">I will remove the Spring profiles from the XML configuration when I have got time to do it. Again, thank you for pointing this out!</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-834704"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Anonymous</span>  <span class="comment_date cye-lm-tag">September 28, 2014, 22:26</span></div><div class="comment_text" id="comment-body-834704"><p class="cye-lm-tag">thanks Petri for your great tutorial and quick response. I have one clarification that how user/provider is binded with registeration. i want to just persist the data and allow the user what should i do. More clear I dont want the registeration form in the case of social sign in.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-835418"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 29, 2014, 10:04</span></div><div class="comment_text" id="comment-body-835418"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag"><a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">The second part of this tutorial</a> explains how you can create a registration form that supports “normal” registration and registration via social sign in. If you have any other questions about the registration process, leave a comment to that blog post.</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-830160"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">macleo</span>  <span class="comment_date cye-lm-tag">September 26, 2014, 09:03</span></div><div class="comment_text" id="comment-body-830160"><p class="cye-lm-tag">thanks ,very usefully</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-830213"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 26, 2014, 09:37</span></div><div class="comment_text" id="comment-body-830213"><p class="cye-lm-tag">You are welcome! I am happy to hear that this blog post was useful to you.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-880532"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Sona</span>  <span class="comment_date cye-lm-tag">October 15, 2014, 21:40</span></div><div class="comment_text" id="comment-body-880532"><p class="cye-lm-tag">Hi,<br> I cloned the repo from <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal" rel="nofollow">https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal</a> and executed the below command:<br> mvn clean install<br> It failed by giving the below error:</p>
<p class="cye-lm-tag">[ERROR] Failed to execute goal org.apache.maven.plugins:maven-resources-plugin:2.6:resources (default-resources) on project spring<br> -mvc-normal: Error loading property file ‘D:\Personal\BACKUP\Non-Cloud\Projects\workspace\petrikainulainen-spring-social-examples-<br> master\sign-in\spring-mvc-normal\profiles\dev\socialConfig.properties’ -&gt; [Help 1]<br> [ERROR]</p>
<p class="cye-lm-tag">Can you help? Thanks.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-880542"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 15, 2014, 21:46</span></div><div class="comment_text" id="comment-body-880542"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">you need to create a Facebook and a Twitter application before you can run the example application. Also, you need to create the <code>socialConfig.properties</code> file and configure the used social sign in providers in that file. The <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/README.md" target="_blank" rel="nofollow">README of the example application</a> provides more details about these steps.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-902985"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Sona</span>  <span class="comment_date cye-lm-tag">October 22, 2014, 10:48</span></div><div class="comment_text" id="comment-body-902985"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Thanks for your prompt response. I finished first two parts of this tutorial and sincerely thank you for all your efforts in creating a top-quality example app. I am new to Java &amp; Spring development and learned a lot by going through these two articles and the source code.</p>
<p class="cye-lm-tag">I am able to run the app by “mvn jetty:run -P dev” now after reading the README file but facing few issues in which I need your help. I plan to create a tomcat-deployable WAR file so I did: mvn war:war -P dev, and came up with a WAR. Now things don’t work as they were working earlier:</p>
<p class="cye-lm-tag">1. Once I Log in using my FB account, the app shows me a Welcome page. When I press the Logout button on that page, it takes me to <a href="http://localhost:8080/logout" rel="nofollow">http://localhost:8080/logout</a> instead of the logout success URL: <a href="http://localhost:8080/login" rel="nofollow">http://localhost:8080/login</a>.</p>
<p class="cye-lm-tag">2. Also, if I type <a href="http://localhost:8080/spring-mvc-normal/" rel="nofollow">http://localhost:8080/spring-mvc-normal/</a> again after logging out, I am able to see the Welcome page. That means user is still logged in my app as well as in FB.</p>
<p class="cye-lm-tag">3. Both problems 1 &amp; 2 are there when I create a new normal user (without FB etc).</p>
<p class="cye-lm-tag">4. Create user account also doesn’t work now. It comes to <a href="http://localhost:8080/user/register" rel="nofollow">http://localhost:8080/user/register</a> and displays a blank page.</p>
<p class="cye-lm-tag">I believe either the WAR is not getting created properly or Tomcat is not getting configured. Can you suggest what could the problem here? I found this link “http://maciejwalkowiak.pl/blog/2012/03/27/spring-3-1-profiles-and-tomcat-configuration/” but not sure whether it is relevant to my problem.</p>
<p class="cye-lm-tag">Thanks once again for writing such a wonderful tutorial.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-904772"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 22, 2014, 20:54</span></div><div class="comment_text" id="comment-body-904772"><p class="cye-lm-tag">I think that these problems are caused by the fact that the application assumes that it is run by using context path ‘/’. It seems that you are running it by using the context path ‘/spring-mvc-normal/’. Am I right?</p>
<p class="cye-lm-tag">I thought that I already fixed this, but it seems that I didn’t fix it after all. Thank you for pointing this out!</p>
<p class="cye-lm-tag">I will fix the JSP pages and commit my changes to Github.</p>
<p class="cye-lm-tag"><strong>Update:</strong> I fixed the JSP pages. You can <a href="https://github.com/pkainulainen/spring-social-examples" target="_blank" rel="nofollow">get the working example application from Github</a>.</p>
</div> </div><ul class="children"><li class="comment even depth-5" id="comment-906911"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Anonymous</span>  <span class="comment_date cye-lm-tag">October 23, 2014, 08:35</span></div><div class="comment_text" id="comment-body-906911"><p class="cye-lm-tag">Thanks Petri, you nailed down the problem. After pulling your last commit, I was able to run the app perfectly fine from Tomcat.<br> BTW, I want to know whether there was a mistake in my running the app. Is it not the right way to launch when one would deploy the app in production environment?</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-907063"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 23, 2014, 09:29</span></div><div class="comment_text" id="comment-body-907063"><p class="cye-lm-tag">You are welcome.</p>
<p class="cye-lm-tag">The problem was that I didn’t think that it should be possible to run this application by using other context paths than ‘/’. In other words, it was a bug in the application (my mistake, not yours).</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-925241"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Sona</span>  <span class="comment_date cye-lm-tag">October 28, 2014, 15:13</span></div><div class="comment_text" id="comment-body-925241"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">I am facing one strange problem now. When I try to login / register for the first time, I don’t see the “Create user account” link at the top right corner of the page. Once I log in successfully, I don’t see the log out button anymore.</p>
<p class="cye-lm-tag">I re-used your JSP pages as they are in my test app. But looks like something is missing. What do I need to effectively use “sec:authorize” in my JSP pages?</p>
<p class="cye-lm-tag">Thanks for your help.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-928957"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 29, 2014, 19:49</span></div><div class="comment_text" id="comment-body-928957"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag"><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#the-authorize-tag" target="_blank" rel="nofollow">The reference manual of Spring Security</a> states that:</p>
<blockquote><p class="cye-lm-tag">This tag is used to determine whether its contents should be evaluated or not. In Spring Security 3.0, it can be used in two ways [23]. The first approach uses a <a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#el-access-web" target="_blank" rel="nofollow">web-security expression</a>, specified in the access attribute of the tag. The expression evaluation will be delegated to the SecurityExpressionHandler&lt;FilterInvocation&gt; defined in the application context (you should have web expressions enabled in your &lt;http&gt; namespace configuration to make sure this service is available).</p>
</blockquote><p class="cye-lm-tag">Do you configure your application by using XML configuration or Java configuration?</p>
<p class="cye-lm-tag">If you use Java configuration, you should check the source code of the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/config/SecurityContext.java" target="_blank" rel="nofollow"><code>SecurityContext</code></a> class.</p>
<p class="cye-lm-tag">If you use XML configuration, you should check the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/resources/exampleApplicationContext-security.xml" target="_blank" rel="nofollow"><code>exampleApplicationContext-security.xml</code></a> file.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-935902"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Sona</span>  <span class="comment_date cye-lm-tag">October 31, 2014, 19:39</span></div><div class="comment_text" id="comment-body-935902"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">I have matched the XML and JSP files many times but there is no change except the package names which are as per my application.</p>
<p class="cye-lm-tag">During my debugging, what I realized is that none of the spring security tags present in the layout.jsp file is working. I put many debug prints in layout.jsp but nothing came up on the screen. If I do the same in other JSP files,they all show up.</p>
<p class="cye-lm-tag">Does this ring any bell? Where have I screwed up? Sorry but since I am on the learning path, hence troubling you too much.</p>
<p class="cye-lm-tag">Thanks.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-936030"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 31, 2014, 20:36</span></div><div class="comment_text" id="comment-body-936030"><p class="cye-lm-tag">Hi Sona,</p>
<p class="cye-lm-tag">Have you declared the Spring Security taglib in every JSP file that uses it?</p>
<blockquote><p class="cye-lm-tag">Sorry but since I am on the learning path, hence troubling you too much.</p>
</blockquote><p class="cye-lm-tag">Don’t worry about this. I am happy to help.</p>
</div> </div><ul class="children"><li class="comment even depth-5" id="comment-1041643"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Sona</span>  <span class="comment_date cye-lm-tag">December 11, 2014, 20:36</span></div><div class="comment_text" id="comment-body-1041643"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Finally, months after reporting this issue, I found the root cause and believe me, it is one of most silly solutions I have found for my issues.</p>
<p class="cye-lm-tag">Problem is in the filter ordering in my web.xml file. I wasn’t aware that ordering plays a critical role and here sitemesh and spring security were not in order. Following thread from SO helped me in identifying this:</p>
<p class="cye-lm-tag"><a href="http://stackoverflow.com/questions/4370629/spring-security-tags-in-sitemesh-decorator" rel="nofollow">http://stackoverflow.com/questions/4370629/spring-security-tags-in-sitemesh-decorator</a></p>
<p class="cye-lm-tag">Thanks for all your support in debugging this :)</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-1041893"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 11, 2014, 23:48</span></div><div class="comment_text" id="comment-body-1041893"><p class="cye-lm-tag">Hi Sona,</p>
<p class="cye-lm-tag">You are are welcome (although I think that was not able to provide you a lot of help on this matter). In any case, it is great to hear that you finally found the reason for your problem and were able solve it!</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-931004"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">NewSpringLearner</span>  <span class="comment_date cye-lm-tag">October 30, 2014, 09:34</span></div><div class="comment_text" id="comment-body-931004"><p class="cye-lm-tag">Hi Petri,<br> I am very new to spring security at all and I have implemented  spring security with openID  authentication(Login through gmail) now I am trying spring facebook integration. For this, I have written custom class which is generic for all i.e. simple security,openId Auth and spring facebook as follows:-</p>
<p class="cye-lm-tag">public class UserAuthenticationFilter implements UserDetailsService,AuthenticationUserDetailsService,SocialUserDetailsService {<br> public UserDetails loadUserByUsername(String username)<br> throws UsernameNotFoundException, DataAccessException {<br> }<br> public UserDetails loadUserDetails(OpenidAuthenticationToken token)<br> throws UsernameNotFoundException, DataAccessException {<br> }</p>
<p class="cye-lm-tag">public SocialUserDetails loadUserByUserId(String username)<br> throws UsernameNotFoundException, DataAccessException {<br> }</p>
<p class="cye-lm-tag">in this way, in above filter, I have overridden the required methods.But I am not able to execute the loadIUserByUserId method at all. I have added following code in security.xml:-</p>
<p class="cye-lm-tag">and in jsp code is as follows<br> &lt;a href="”&gt;<i></i> Login with facebook</p>
<p class="cye-lm-tag">Is it necessary to create the facebook app? Can u plz tell that Is It a correct way to implement this. plz give me the solution to get success on spring facebook login and plz suggest what implemtation is remaining . I am stuck on this.</p>
<p class="cye-lm-tag">Thanks in advance</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-932494"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 30, 2014, 20:07</span></div><div class="comment_text" id="comment-body-932494"><p class="cye-lm-tag">Hi,</p>
<blockquote><p class="cye-lm-tag">Is it necessary to create the facebook app?</p>
</blockquote><p class="cye-lm-tag">Yes. You cannot implement a Facebook login without it because you need a valid app id and app secret. If you haven’t created a Facebook application for your application, this is the reason why you your Facebook login is not working.</p>
<p class="cye-lm-tag">Unfortunately Wordpress “ate” your XML configuration so I cannot say if there is something wrong with it. However, you can take a look at the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/resources/exampleApplicationContext-security.xml" target="_blank" rel="nofollow"><code>exampleApplicationContext-security.xml</code></a> file, and compare it to your <code>security.xml</code> file.</p>
<p class="cye-lm-tag">I hope that this answered to your question.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-935284"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Anonymous</span>  <span class="comment_date cye-lm-tag">October 31, 2014, 14:50</span></div><div class="comment_text" id="comment-body-935284"><p class="cye-lm-tag">Hi Petri,<br> Thanks for reply, Actually I have same xml configuaration as ur exampleApplicationContext-security.xml and exampleApplicationContext-social.xml. And I have already done data source and transactionManger like configuration in application context.xml.<br> But I have some doubts and issues as follows:-<br> 1)I am getting this error in exampleApplicationContext-security.xml<br> Line 77 in XML document from ServletContext resource [/WEB-INF/application-security.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 77; columnNumber: 65; cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element ‘constructor-arg’<br> 2) We don’t have created any object then why are we using the “usersConnectionRepository” this value as ref in security.xml<br> plz help me to make this integration working. I am not getting clicked anyway here.</p>
<p class="cye-lm-tag">Thanks a lot petri……</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-935978"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">October 31, 2014, 20:12</span></div><div class="comment_text" id="comment-body-935978"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">it seems that the problem is that you haven’t configured the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/UsersConnectionRepository.html" target="_blank" rel="nofollow"><code>UsersConnectionRepository</code></a> bean. This bean is required because Spring Social persists the user’s connection to a social service provider.</p>
<p class="cye-lm-tag">My example application uses the <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/jdbc/JdbcUsersConnectionRepository.html" target="_blank" rel="nofollow"><code>JdbcUsersConnectionRepository</code></a> class that persists connection data to a relational database.</p>
<p class="cye-lm-tag">The section <a href="http://docs.spring.io/spring-social/docs/1.1.x/reference/htmlsingle/#section_persistingConnections" target="_blank" rel="nofollow">2.3. Persisting Connections</a> of the Spring Social reference manual provides more information about this.</p>
</div> </div><ul class="children"><li class="comment even depth-5" id="comment-950072"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">NewSpringLearner</span>  <span class="comment_date cye-lm-tag">November 5, 2014, 15:27</span></div><div class="comment_text" id="comment-body-950072"><p class="cye-lm-tag">Hi Petri,<br> Can u plz tell me that how to integrate facebook login with localhost application.<br> Plz help me. I am using gwt with spring and hibernate. My generated local URL is <a href="http://127.0.0.1:8888/demo" rel="nofollow">http://127.0.0.1:8888/demo</a></p>
<p class="cye-lm-tag">What is the correct way to implement this? Thanks</p>
<p class="cye-lm-tag">Thanks in advance</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-950724"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 5, 2014, 20:15</span></div><div class="comment_text" id="comment-body-950724"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">I have never used GWT (Google Web Toolkit?), and unfortunately I have no idea if it is possible to integrate Spring Social with it. :(</p>
<p class="cye-lm-tag">If you want to use Spring Social, you should use Spring MVC and follow the instructions given in my <a href="/spring-social-tutorial/" rel="nofollow">Spring Social tutorial</a>.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-963152"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">horatius</span>  <span class="comment_date cye-lm-tag">November 10, 2014, 04:45</span></div><div class="comment_text" id="comment-body-963152"><p class="cye-lm-tag">Excellent post for Spring MVC.</p>
<p class="cye-lm-tag">How can we make it work for Spring MVC without ViewModel, but plain REST services that return JSON? In that case, the user probably uses some javascript based SPA that already authenticates with the SocialSignInProvider outside the MVC application and already has a token.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-965253"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 10, 2014, 21:34</span></div><div class="comment_text" id="comment-body-965253"><p class="cye-lm-tag">Thank you for your kind words. I really appreciate them.</p>
<p class="cye-lm-tag">Unfortunately I have never added social sign in to a Spring powered REST API. In other words, I don’t know how you can use it with Spring MVC if your application provides only a REST API.</p>
<p class="cye-lm-tag">I have been planning to write a separate tutorial about this for a long time. I guess now is a good time to actually do it.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-967474"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Aniket Kulkarni</span>  <span class="comment_date cye-lm-tag">November 11, 2014, 13:27</span></div><div class="comment_text" id="comment-body-967474"><p class="cye-lm-tag">Petri,<br> One of the finest tutorial available on the internet.<br> I searched a lot for spring social sign in with Google+. Your example also implements facebook and twitter<br> Could you please guide or leave comment on how can I implement Google+ sign in using spring MVC?<br> Again many thanks.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-971312"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 12, 2014, 19:20</span></div><div class="comment_text" id="comment-body-971312"><p class="cye-lm-tag">Thank you for your kind words. I really appreciate them.</p>
<blockquote><p class="cye-lm-tag">Could you please guide or leave comment on how can I implement Google+ sign in using spring MVC?</p>
</blockquote><p class="cye-lm-tag">Unfortunately I have never done this myself :( However, I am going to update my Spring Social tutorial when I have got some free time (I don’t know the exact schedule). I will add the Google sign in to my example application and add a new part to my Spring Social tutorial.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-1023896"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Anonymous</span>  <span class="comment_date cye-lm-tag">December 3, 2014, 20:22</span></div><div class="comment_text" id="comment-body-1023896"><p class="cye-lm-tag">Great tutorial ! I was able to integrate Facebook, LinkedIn and Google+ Sign-In and was able to post link on Facebook &amp; LinkedIn. But wondering which API of google to use for the same. Any help please ?</p>
<p class="cye-lm-tag">Also I noticed, when logging out, data from UserConnection is not getting deleted. Is it right behavior or I missed something in configuration?</p>
<p class="cye-lm-tag">I noticed , record gets deleted when used POST /connect/facebook with delete hidden parameter like below</p>
<p class="cye-lm-tag">&lt;form action="” method=”post”&gt;</p>
<p class="cye-lm-tag"> Spring Social Showcase is connected to your Facebook account.<br> Click the button if you wish to disconnect.</p>
<p class="cye-lm-tag"> Disconnect</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-1024013"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 3, 2014, 21:17</span></div><div class="comment_text" id="comment-body-1024013"><p class="cye-lm-tag">Thank you for your kind words. I really appreciate them!</p>
<blockquote><p class="cye-lm-tag">But wondering which API of google to use for the same. Any help please ?</p>
</blockquote><p class="cye-lm-tag">There is a community project called <a href="https://github.com/GabiAxel/spring-social-google" target="_blank" rel="nofollow">Spring Social Google</a>, but I haven’t tried it out yet. If you want to give it a shot, you can get started by readings <a href="http://gabiaxel.github.io/spring-social-google-reference/" target="_blank" rel="nofollow">its reference manual</a>.</p>
<blockquote><p class="cye-lm-tag">Also I noticed, when logging out, data from UserConnection is not getting deleted. Is it right behavior or I missed something in configuration?</p>
</blockquote><p class="cye-lm-tag">This is normal. The data found from the <code>UserConnection</code> table links the information received from the social sign in provider with the local user account. If you delete this link, the application cannot log you in (unless you create a new user account).</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="comment-970676"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">NewSpringlearner</span>  <span class="comment_date cye-lm-tag">November 12, 2014, 15:03</span></div><div class="comment_text" id="comment-body-970676"><p class="cye-lm-tag">Hi Petri,<br> I have implemented spring social.When I clicked on the”login with facebook” button then it is get redirected to the facebook login page successfully but now after login the facebook ,its get redirected to signup url means it is not finding the user in database.</p>
<p class="cye-lm-tag">1) I have registered the user in my application and able to login alsoby using simple username and password without using the facebook login.</p>
<p class="cye-lm-tag">2)But when I login through the facebook with the same user then why it is no finding that user and it is get redirected to signup url.</p>
<p class="cye-lm-tag"> First it was giving the errror as “userconnection table not exit” now I have created the userconnection table in my database.</p>
<p class="cye-lm-tag"> I have the following xml configuration :-</p>
<p class="cye-lm-tag">——— xml configuration——</p>
<p class="cye-lm-tag">—–   End of xml configuration—–</p>
<p class="cye-lm-tag"> In jsp page, I have used the code like:-</p>
<p class="cye-lm-tag"> These are my all changes. Apart from this,I couldnt have implemented anything else. So please, what should I do here for the proper working of the applicaiton, my facebook login user should redirect properly to my application and data should be inserted by connect controller in “userconnection” table. I am stuck over here please highligh what should I implement now at this stage.</p>
<p class="cye-lm-tag">Many Many thanks in advance…</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-971449"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 12, 2014, 20:24</span></div><div class="comment_text" id="comment-body-971449"><p class="cye-lm-tag">The reason for this is that the user who tries to log in by using a social sign in provider is not the “same” user than the user who created a user account by using the “normal” registration.</p>
<p class="cye-lm-tag">Because the user created a user account by using the “normal” registration, he/she cannot sign in by using a social sign in provider and expect the application to identify his/her existing user account. The application cannot do this because the <code>UserConnection</code> table is empty.</p>
<p class="cye-lm-tag">Also, you cannot just insert a row to this table (unless the user is creating a user account by using social sign in) because you need the information returned by the social sign in provider.</p>
<p class="cye-lm-tag">If you need to support only Facebook, you can try to fix this by making the following changes to the controller method that renders the sign up view:</p>
<ol><li>Check if there already is a user account that is using the email address returned by the social sign in provider.</li><li>If the user account is found, update it (if necessary), add a new row to the <code>UserConnection</code> table, and log the user in.</li><li>If no user account is found, render the sign up view.</li></ol><p class="cye-lm-tag">Also, you have to configure Spring Social to request the user’s email address when the user starts the social sign in flow by using Facebook.</p>
<p class="cye-lm-tag">This approach has two limitations:</p>
<ul><li>If the user isn’t using the same email address on Facebook and on your application, there is no way to identify the user account.</li><li>If you need to support other social sign in providers, you might not be able to use this approach because all of them don’t return the user’s email address.</li></ul><p class="cye-lm-tag">I hope that this answered to your question.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-973535"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">NewSpringLearner</span>  <span class="comment_date cye-lm-tag">November 13, 2014, 15:18</span></div><div class="comment_text" id="comment-body-973535"><p class="cye-lm-tag">Thank u so much Petri.<br> As u suggested I tried a lot to create user connection but not work. Is there any url(signup url) through which user connection is created automatically.<br> Thanks..</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-979988"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">November 15, 2014, 21:12</span></div><div class="comment_text" id="comment-body-979988"><p class="cye-lm-tag">My example application has no such url, but you can persist the user’s connection by invoking <a href="http://docs.spring.io/spring-social/docs/1.1.x/apidocs/org/springframework/social/connect/web/ProviderSignInUtils.html#doPostSignUp%28java.lang.String,%20org.springframework.web.context.request.RequestAttributes%29" target="_blank" rel="nofollow">the <code>doPostSignUp()</code> method of the <code>ProviderSignInUtils</code> class</a>.</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-1116414"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Victor</span>  <span class="comment_date cye-lm-tag">February 3, 2015, 13:41</span></div><div class="comment_text" id="comment-body-1116414"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">I tried to use the example of Maven but appeared this error in building:</p>
<p class="cye-lm-tag">Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.16:test (default-test) on project spring-mvc-normal: Execution default-test of goal org.apache.maven.plugins:maven-surefire-plugin:2.16:test failed: The forked VM terminated without saying properly goodbye. VM crash or System.exit called ?</p>
<p class="cye-lm-tag">Command wascmd.exe /X /C “”C:\Program Files\Java\jdk1.8.0_05\jre\bin\java” -javaagent:C:\Users\Victor\.m2\repository\org\jacoco\org.jacoco.agent.6.3.201306030806\org.jacoco.agent-0.6.3.201306030806-runtime.jar=destfile=C:\Users\Victor\Documents\spring-social-examples\sign-in\spring-mvc-normal\target\coverage-reports\jacoco-ut.exec -jar C:\Users\Victor\Documents\spring-social-examples\sign-in\spring-mvc-normal\target\surefire\surefirebooter5500528348155860158.jar C:\Users\Victor\Documents\spring-social-examples\sign-in\spring-mvc-normal\target\surefire\surefire5217935832005982224tmp C:\Users\Victor\Documents\spring-social-examples\sign-in\spring-mvc-normal\target\surefire\surefire_07294595199859845725tmp”<br> -&gt; [Help 1]</p>
<p class="cye-lm-tag">Can you help me? Thanks</p>
<p class="cye-lm-tag"><strong>I removed a few lines from this comment since they were irrelevant – Petri</strong></p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1116630"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">February 3, 2015, 17:34</span></div><div class="comment_text" id="comment-body-1116630"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">I noticed that you are using Java 8. I assume that the JaCoCo Maven plugin 0.6.3.201306030806 is not compatible with Java 8.</p>
<p class="cye-lm-tag">If you don’t need to code coverage reports, you can simply remove the plugin configuration. If you want to generate the code coverage reports, you should update its version to 0.7.2.201409121644.</p>
<p class="cye-lm-tag">Let me know if this solved your problem.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-1136671"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">SLP</span>  <span class="comment_date cye-lm-tag">March 1, 2015, 06:34</span></div><div class="comment_text" id="comment-body-1136671"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Good morning !!!</p>
<p class="cye-lm-tag">I made a small application going through your fantastic tutorials and tried hosting it using Apache &amp; Tomcat on a professional Hosting Server. However, I am not able to access the site without having the app name in the URL. I always have to do: <a href="http://www.mydomainname.com/my-spring-app-name" rel="nofollow">http://www.mydomainname.com/my-spring-app-name</a>.</p>
<p class="cye-lm-tag">I followed many SO posts and tutorials but no where I could find some one who is having the same environment. So finally thought of asking you as how it should be done. Details of what I have tried are captured here: <a href="http://stackoverflow.com/questions/28670450/apache-with-proxypass-and-spring-security" rel="nofollow">http://stackoverflow.com/questions/28670450/apache-with-proxypass-and-spring-security</a></p>
<p class="cye-lm-tag">Please see if you can help.</p>
<p class="cye-lm-tag">Thanks once again for all your help.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1137106"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 1, 2015, 18:29</span></div><div class="comment_text" id="comment-body-1137106"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">The easiest way to solve to solve your problem is to change the name of deployed war file to <em>ROOT.war</em>. When you deploy a war file called <em>ROOT.war</em> to Tomcat, the context path of that application is ‘/’. This means that you can access your application by using the url <a href="http://www.mydomainname.com" rel="nofollow">http://www.mydomainname.com</a>.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-1153442"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">SLP</span>  <span class="comment_date cye-lm-tag">March 16, 2015, 09:52</span></div><div class="comment_text" id="comment-body-1153442"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Thanks for the suggestion. I tried that and it worked like a charm for my localhost but not for the production app running at my hosting machine. When I tried mydomainname.com, it gave me:</p>
<p class="cye-lm-tag">Index of /</p>
<p class="cye-lm-tag">[ICO]	Name	Last modified	Size	Description<br> [IMG]	favicon.ico	2015-02-26 15:54	822<br> [TXT]	index.html.backup	2014-12-20 10:49	603</p>
<p class="cye-lm-tag">I checked both tomcat server.xml files and didn’t find any difference. Is there something else which I am missing?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-1155339"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 17, 2015, 20:38</span></div><div class="comment_text" id="comment-body-1155339"><p class="cye-lm-tag">It’s kind of hard to say what could be wrong, but the first thing that came my mind was that your Apache might not be configured properly (it seems that is not “forwarding” requests to Tomcat). Are you using an <a href="http://tomcat.apache.org/tomcat-8.0-doc/connectors.html#AJP" target="_blank" rel="nofollow">AJP connector</a>?</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-1165887"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Onur</span>  <span class="comment_date cye-lm-tag">March 26, 2015, 17:47</span></div><div class="comment_text" id="comment-body-1165887"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">My project run well based on Spring + Spring Security + JSF + WebFlow . Can I integrate Spring Social to my project without Spring Controler.</p>
<p class="cye-lm-tag">Thanks in advance</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1167879"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 28, 2015, 14:23</span></div><div class="comment_text" id="comment-body-1167879"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">Because I don’t have any experience from JSF, I cannot answer to your question. However, it seems that <a href="http://forum.spring.io/forum/spring-projects/web/social/125429-jsf-and-spring-social" target="_blank" rel="nofollow">using Spring Social without Spring MVC requires a lot of work</a>.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-1182222"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Shashi</span>  <span class="comment_date cye-lm-tag">April 16, 2015, 18:15</span></div><div class="comment_text" id="comment-body-1182222"><p class="cye-lm-tag">Hi Petri,<br> You have the best example on spring social. am trying to add ‘login with facebook’ on my website where form based login is already implemented.  You have merged both form based and social login into one and made confusing. Is there a way you can create an example with ‘login with facebook’ only based on xml configuraiton?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1182294"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 16, 2015, 20:08</span></div><div class="comment_text" id="comment-body-1182294"><p class="cye-lm-tag">Hi Shashi,</p>
<blockquote><p class="cye-lm-tag">You have merged both form based and social login into one and made confusing</p>
</blockquote><p class="cye-lm-tag">Actually the login functions are not merged. The form login is processed by Spring Security and the social login is processed by Spring Social. However, if a user tries to sign in by using a social sign in provider and he doesn’t have an user account, he has to register one by using the registration form. <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">This process is explained in the next part of this tutorial</a>.</p>
<p class="cye-lm-tag">You can of course skip the registration phase and create a new user account if the user account isn’t found from the database. If you want to do this, you need to modify the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/security/controller/SignUpController.java" target="_blank" rel="nofollow"><code>SignUpController</code></a> class. You need to read the user’s information from the request and use this information to create a new user account.</p>
<blockquote><p class="cye-lm-tag">Is there a way you can create an example with ‘login with facebook’ only based on xml configuraiton?</p>
</blockquote><p class="cye-lm-tag">The <a href="https://github.com/pkainulainen/spring-social-examples/tree/master/sign-in/spring-mvc-normal/src/main/resources" target="_blank" rel="nofollow">example application has XML configuration files as well</a>.</p>
<p class="cye-lm-tag">By the way, I will update my Spring Social tutorial later this year. I will address your concerns when I do that. For example, I plan to make this tutorial less confusing :) Thank you for the feedback!</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-1210108"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">85noob</span>  <span class="comment_date cye-lm-tag">May 23, 2015, 07:48</span></div><div class="comment_text" id="comment-body-1210108"><p class="cye-lm-tag">Thanks for a wonder post on this! It helped me understand how spring social works quicker than the official spring social post. :)<br> I wanted to add spring social feature to an Appfuse app (uses spring security) that I had been playing with. Following your 2 posts, I was trying to integrate step by step and trying to see the effect of each step.</p>
<p class="cye-lm-tag">But I ran into a problem right immediately :</p>
<p class="cye-lm-tag">WARN [qtp937612-50] PageNotFound.noHandlerFound(1118) | No mapping found for HTTP request with URI [/app/auth/facebook] in DispatcherServlet with name ‘dispatcher’</p>
<p class="cye-lm-tag">Can you help explain where is the “/auth/facebook” request mapped? Is this done by simply declaring a connectController bean in your SocialContext class (which I have copied)?</p>
<p class="cye-lm-tag"> @Bean<br> public ConnectController connectController(ConnectionFactoryLocator connectionFactoryLocator, ConnectionRepository connectionRepository) {<br> return new ConnectController(connectionFactoryLocator, connectionRepository);<br> }</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1210244"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 23, 2015, 12:18</span></div><div class="comment_text" id="comment-body-1210244"><p class="cye-lm-tag">Thank you for your kind words. I really appreciate them!</p>
<p class="cye-lm-tag">The <a href="http://docs.spring.io/spring-social/docs/current/apidocs/org/springframework/social/security/SocialAuthenticationFilter.html" target="_blank" rel="nofollow"><code>SocialAuthenticationFilter</code></a> class processes  requests send to the url: <em>‘/auth/facebook’</em>. The <a href="http://docs.spring.io/spring-social/docs/current/apidocs/org/springframework/social/security/SpringSocialConfigurer.html" target="_blank" rel="nofollow"><code>SpringSocialConfigurer</code></a> class creates and configures this filter (check out the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/config/SecurityContext.java" target="_blank" rel="nofollow"><code>SecurityContext</code></a> class for more details).</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-1224715"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">wojciech</span>  <span class="comment_date cye-lm-tag">June 12, 2015, 18:21</span></div><div class="comment_text" id="comment-body-1224715"><p class="cye-lm-tag">Thanks for this project, it is very good to understand social core.I only have question,  there is any possibility to adapt this project in mobile or rest api ? I have problem with redirecting in process /signup for REST &amp;( angularApp and mobileApp) ?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1224768"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">June 12, 2015, 20:33</span></div><div class="comment_text" id="comment-body-1224768"><p class="cye-lm-tag">I have never done this myself, but I think that it is doable. I tried to find information from Google, but I couldn’t find anything interesting. My next step was to <a href="https://twitter.com/petrikainulaine/status/609412272612618240" target="_blank" rel="nofollow">ask help from my Twitter followers</a>. I hope that someone can shed some light on this problem.</p>
<p class="cye-lm-tag"><strong>Update:</strong> It seems that your only option is to do a normal GET request and let the backend handle the authentication dance.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-1231474"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">wojciech</span>  <span class="comment_date cye-lm-tag">June 23, 2015, 12:29</span></div><div class="comment_text" id="comment-body-1231474"><p class="cye-lm-tag">And how to send response to android or rest api after this dance ?</p>
</div> </div><ul class="children"><li class="comment odd alt depth-4" id="comment-1351692"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Mova</span>  <span class="comment_date cye-lm-tag">January 19, 2016, 02:29</span></div><div class="comment_text" id="comment-body-1351692"><p class="cye-lm-tag">Hi Wojciech and Petri, did you fix this problem i have the same many thanks!</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-5" id="comment-1353298"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">January 20, 2016, 21:34</span></div><div class="comment_text" id="comment-body-1353298"><p class="cye-lm-tag">Hi Mova,</p>
<p class="cye-lm-tag">Unfortunately your best option is to do a normal GET request and let the backend handle the authentication dance. However, that doesn’t solve your problem because you still need to respond to the client after the dance is complete. I have one idea that might help you to do this:</p>
<p class="cye-lm-tag">The easiest way to solve this to create two controller methods which handle failed sign in attempt and successful sign in. Implement these controller methods by setting the preferred HTTP response code to the HTTP response. After you have implemented these controller methods, you have to configure Spring Social to redirect the request to the correct url.</p>
<p class="cye-lm-tag">If you use Java configuration, you can do this by setting the values of the <code>postLoginUrl</code> and <code>postFailureUrl</code> fields of the <code>SpringSocialConfigurer</code> class.</p>
<p class="cye-lm-tag">If you use XML configuration, you can do this by setting the values of the <code>postLoginUrl</code> and <code>postFailureUrl</code> fields of the <code>SocialAuthenticationFilter</code> filter class. If you don’t have any idea how to do this, check out <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/resources/exampleApplicationContext-security.xml" target="_blank" rel="nofollow">the XML configuration file of my example application</a>. It should help you to get started.</p>
<p class="cye-lm-tag">Did this answer to your comment?</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1239340"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">shashwat</span>  <span class="comment_date cye-lm-tag">July 9, 2015, 00:16</span></div><div class="comment_text" id="comment-body-1239340"><p class="cye-lm-tag">hi petri,</p>
<p class="cye-lm-tag">I tried the first part of this tutorial using xml configurations, however i am getting the following error..</p>
<p class="cye-lm-tag">No qualifying bean of type [com.project.service.UserRepository] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}</p>
<p class="cye-lm-tag">could you please help me out in this, it seems to be an autowiring or dependency injection issue also is there any implementation of UserRepository that we have to write.</p>
<p class="cye-lm-tag">thanks,<br> shashwat</p>
<p class="cye-lm-tag"><em>Update: I removed the stack trace since the error message gave enough information about the problem – Petri</em></p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1239346"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 9, 2015, 00:34</span></div><div class="comment_text" id="comment-body-1239346"><p class="cye-lm-tag">Hi Shashwat,</p>
<p class="cye-lm-tag">The example application uses Spring Data JPA, and the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/user/repository/UserRepository.java" target="_blank" rel="nofollow"><code>UserRepository</code></a> is the repository that is used to manage user information.</p>
<p class="cye-lm-tag">It seems that you have changed the package hierarchy of the project because old package of the <code>UserRepository</code> interface was: <code>net.petrikainulainen.spring.social.signinmvc.user.repository</code>. This is why Spring Data JPA cannot create the <code>UserRepository</code> bean.</p>
<p class="cye-lm-tag">You can solve this problem by configuring Spring Data JPA to use the correct package. You can do this by changing the value of the <code>jpa:repositories</code> element’s <code>base-package</code> attribute. You can find the persistence layer configuration from the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/resources/exampleApplicationContext-persistence.xml" target="_blank" rel="nofollow"><em>exampleApplicationContext-persistence.xml</em></a> file.</p>
<p class="cye-lm-tag">Also, if you are not familiar with Spring Data JPA, you should take a look at my <a href="/spring-data-jpa-tutorial/" rel="nofollow">Spring Data JPA tutorial</a>.</p>
<p class="cye-lm-tag">If have any further questions, don’t hesitate to ask them.</p>
</div> </div><ul class="children"><li class="comment odd alt depth-3" id="comment-1239506"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Anonymous</span>  <span class="comment_date cye-lm-tag">July 9, 2015, 09:43</span></div><div class="comment_text" id="comment-body-1239506"><p class="cye-lm-tag">Hey Petri,<br> thanks for a quick revert. So I get the issue, you are using jpa repository. But the main problem i m facing is that i am using hibernate in my whole application and it would be difficult to migrate the whole app to spring data jpa to just implement a login functionality. Could you please help me with the changes that i will have to do in case i have to implement it in hibernate.</p>
<p class="cye-lm-tag">I m attaching below my dao setup below which uses a jndi resource. Any help would be appreciated.</p>
<p class="cye-lm-tag"> com.myproject.pojo.*</p>
<p class="cye-lm-tag"> org.hibernate.dialect.MySQL5InnoDBDialect<br> false<br> false<br> true<br> true<br> true<br> false<br> false<br> org.joda.time.contrib.hibernate.PersistentDateTime</p>
<p class="cye-lm-tag"> java:comp/env/jdbc/myproject</p>
<p class="cye-lm-tag">regards,<br> shashwat</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-4" id="comment-1239515"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 9, 2015, 10:21</span></div><div class="comment_text" id="comment-body-1239515"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">It is actually quite easy to get rid of Spring Data JPA. You need to create a Hibernate repository class that is used to handle user information (or you can use an existing repository) and ensure that the repository implements these methods:</p>
<ul><li>The <code>User findByEmail(String email)</code> method returns the user whose email address is given as a method parameter. If no use is found, it returns <code>null</code>. This method is invoked when the user logs in to the system or creates a new user account.</li><li>The <code>User save(User saved)</code> method saves the information of the <code>User</code> object given as a method parameter and returns the saved object. This method is invoked when a user creates a new user account.</li></ul><p class="cye-lm-tag">If you have any other questions, feel free to ask them.</p>
</div> </div><ul class="children"><li class="comment odd alt depth-5" id="comment-1239546"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">shashwat</span>  <span class="comment_date cye-lm-tag">July 9, 2015, 11:52</span></div><div class="comment_text" id="comment-body-1239546"><p class="cye-lm-tag">thanks petri,<br> got it working, will be moving to part 2 of this tutorial, will let you know if i get stuck anywhere.</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-5" id="comment-1239550"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 9, 2015, 12:01</span></div><div class="comment_text" id="comment-body-1239550"><p class="cye-lm-tag">Hi Shashwat,</p>
<p class="cye-lm-tag">You are welcome! It is nice to hear that you were able to solve your problem.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-1241546"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Viral</span>  <span class="comment_date cye-lm-tag">July 13, 2015, 15:23</span></div><div class="comment_text" id="comment-body-1241546"><p class="cye-lm-tag">Hi Petri,<br> I have integrated spring security with spring social using your example code ,  configuration is  same as you provided in your github code.However after calling /auth/twitter it goes to twitter sigin page and after that it authenticates and redirects back to my login page.What can be the reason for this?<br> I am using the latest version of spring, spring-security and spring-social.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1241568"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 13, 2015, 17:05</span></div><div class="comment_text" id="comment-body-1241568"><p class="cye-lm-tag">Hi Viral,</p>
<p class="cye-lm-tag">I have a couple of ideas:</p>
<p class="cye-lm-tag"><strong>First</strong>, check that the callback url of your Twitter application is correct.</p>
<p class="cye-lm-tag"><strong>Second</strong>, Does this happen when the user clicks the “Sign in With Twitter” link for the first time? If so, one possible reason for this is that Spring Social cannot find the persisted connection from the <code>UserConnection</code> table. When this happens, it will redirect user to the sign up page (<a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-742879" rel="nofollow">see this discussion</a>). Also, if the user account is not found the database, the user is redirected to the sign up page.</p>
<p class="cye-lm-tag">Do you use your login page as the sign up page?</p>
</div> </div><ul class="children"><li class="comment odd alt depth-3" id="comment-1241894"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Viral</span>  <span class="comment_date cye-lm-tag">July 14, 2015, 11:37</span></div><div class="comment_text" id="comment-body-1241894"><p class="cye-lm-tag">Hi Petri ,<br> Thanks for Your help.<br> It worked ,I was Sign in With Twitter for the first time  .Also I had changed the spring social version to 1.1.2 Release ,ProviderSignInUtils class is getting error in 1.1.2 .It is working fine in 1.1.0 Release .</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-4" id="comment-1241896"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">July 14, 2015, 11:47</span></div><div class="comment_text" id="comment-body-1241896"><p class="cye-lm-tag">It seems that the Spring Social team did some major changes to the <code>ProviderSignInUtils</code> class between Spring Social 1.1.0 and 1.1.2. Anyway, another reader had the same problem, and <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/#comment-1241662" rel="nofollow">I posted the solution here</a>.</p>
</div> </div></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1276104"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Protazy</span>  <span class="comment_date cye-lm-tag">September 23, 2015, 20:45</span></div><div class="comment_text" id="comment-body-1276104"><p class="cye-lm-tag">Are you planning to update the tutorial to version 2.0.x of spring.social.facebook? There are big changes there, for example, there is no default constructor for ProviderSignInUtils. I am currently struggling with updating my code to version 2.0.x.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1277034"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 25, 2015, 12:07</span></div><div class="comment_text" id="comment-body-1277034"><p class="cye-lm-tag">I would love to do it right now, but I am afraid that I won’t be able to do it until next year because I need to update two older tutorials before I can move on to this one.</p>
<p class="cye-lm-tag">I took a quick look at the Javadoc of the <code>ProviderSignInUtils</code> class and noticed that it has a constructor which takes <code>ConnectionFactoryLocator</code> and <code>UsersConnectionRepository</code> objects as constructor arguments. You could simply inject these beans to the component that uses the <code>ProviderSignInUtils</code> class and pass them as constructor arguments when you create a new <code>ProviderSignInUtils</code> object.</p>
<p class="cye-lm-tag">If you have any other questions, don’t hesitate to ask them!</p>
</div> </div></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-1323594"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Vinodh</span>  <span class="comment_date cye-lm-tag">December 2, 2015, 13:06</span></div><div class="comment_text" id="comment-body-1323594"><p class="cye-lm-tag">Hi Petri Kainulainen,<br> How can I workout with mongoDB having this set of example, please help me out..</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1323719"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 2, 2015, 17:58</span></div><div class="comment_text" id="comment-body-1323719"><p class="cye-lm-tag">Hi Vinodh,</p>
<p class="cye-lm-tag">Take a look at <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-358664" rel="nofollow">this comment</a>.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1339928"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Laxman</span>  <span class="comment_date cye-lm-tag">December 31, 2015, 12:35</span></div><div class="comment_text" id="comment-body-1339928"><p class="cye-lm-tag">hi Petri,</p>
<p class="cye-lm-tag">I am getting error in POM.xml when I import your project in Eclipse Mars IDE:<br> Plugin execution not covered by lifecycle configuration: org.jacoco:jacoco-maven-plugin:0.6.3.201306030806:prepare-<br> agent (execution: pre-unit-test, phase: initialise)<br> regards,<br> Laxman</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1340029"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">December 31, 2015, 21:58</span></div><div class="comment_text" id="comment-body-1340029"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">You can fix this by removing the JaCoCo Maven Plugin from the <em>pom.xml</em> file.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-1396606"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">SLi</span>  <span class="comment_date cye-lm-tag">March 20, 2016, 06:20</span></div><div class="comment_text" id="comment-body-1396606"><p class="cye-lm-tag">for those who is also struggle about the Auth setScope issue mentioned at <a href="http://www.petrikainulainen.net/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-453154" rel="nofollow">http://www.petrikainulainen.net/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-453154</a></p>
<p class="cye-lm-tag">Pls update spring-social-config to later version (1.1.2.REALEASE), you should be fine.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1397635"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">March 21, 2016, 09:45</span></div><div class="comment_text" id="comment-body-1397635"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">Thank you for sharing! This is a quite common use case, and that is why it is great to find out how I can solve this problem.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1408915"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Jay</span>  <span class="comment_date cye-lm-tag">April 2, 2016, 18:36</span></div><div class="comment_text" id="comment-body-1408915"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">I have few questions regarding this tutorial. I am trying to have only ‘login with facebook’ as the way users can signIn to the application.</p>
<p class="cye-lm-tag">Questions:<br> 1. When would user get a session Id, if user tries to login with facebook?<br> 2. Spring Social document says to have a schema for UserConnections table. So when does Spring adds a particular entry (user) to this table ?</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1409757"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 3, 2016, 15:13</span></div><div class="comment_text" id="comment-body-1409757"><p class="cye-lm-tag">Hi Jay,</p>
<blockquote><p class="cye-lm-tag">1. When would user get a session Id, if user tries to login with facebook?</p>
</blockquote><p class="cye-lm-tag">The user gets a session id when he/she opens the first page of your application. Spring Security can create a new session for him/her after login if you have specified it to do so.</p>
<blockquote><p class="cye-lm-tag">2. Spring Social document says to have a schema for UserConnections table. So when does Spring adds a particular entry (user) to this table ?</p>
</blockquote><p class="cye-lm-tag">You need to insert a new row into this table by using the <code>ProviderSignInUtils</code> class.</p>
<p class="cye-lm-tag">If you want get more information about this, check out <a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-registration-and-login/" rel="nofollow">the next part of my Spring Social tutorial</a>.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-1410618"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Prabhu</span>  <span class="comment_date cye-lm-tag">April 4, 2016, 16:50</span></div><div class="comment_text" id="comment-body-1410618"><p class="cye-lm-tag">Hi Petri,<br> I have deployed the project into amazon aws  but it is not working fine. sometimes not able to get repsonse from auth/facebook. getting exception “Page has too many redirection” but all the functionalities are working fine in local tomcat.</p>
<p class="cye-lm-tag">Need suggestion..</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1423021"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 18, 2016, 18:35</span></div><div class="comment_text" id="comment-body-1423021"><p class="cye-lm-tag">I think that this is an AWS specific problem. Unfortunately I don’t know what the problem is :(</p>
</div> </div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1422579"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">April 18, 2016, 09:39</span></div><div class="comment_text" id="comment-body-1422579"><p class="cye-lm-tag">Dear my friends,</p>
<p class="cye-lm-tag">I need sample project that use spring MVC framework + restful  and use OAuth 2 and use MYSQL database if some body can help me please email to me,thank you in advance.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1423025"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 18, 2016, 18:46</span></div><div class="comment_text" id="comment-body-1423025"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">I am not sure if you can find one example that fulfills your requirements. However, if you are willing to do part of the work yourself, you can take a look at these tutorials:</p>
<ul><li><a href="http://websystique.com/springmvc/spring-mvc-4-restful-web-services-crud-example-resttemplate/" target="_blank" rel="nofollow">Spring MVC 4 RESTFul Web Services CRUD Example+RestTemplate</a></li><li><a href="http://www.baeldung.com/rest-api-spring-oauth2-angularjs" target="_blank" rel="nofollow">Spring REST API + OAuth2 + AngularJS</a></li><li><a href="http://www.petrikainulainen.net/spring-data-jpa-tutorial/">Spring Data JPA Tutorial</a> (17-part tutorial that helps you to learn Spring Data JPA)</li></ul><p class="cye-lm-tag">I hope that this helps.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-1424787"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Anonymous</span>  <span class="comment_date cye-lm-tag">April 20, 2016, 13:02</span></div><div class="comment_text" id="comment-body-1424787"><p class="cye-lm-tag">Dear Petri,</p>
<p class="cye-lm-tag">when i want to run this project with wildfly i have this error can you help me.</p>
<p class="cye-lm-tag">org.springframework.social.config.annotation.SocialConfiguration.connectionFactoryLocator()] threw exception; nested exception is java.lang.IllegalArgumentException: Circular placeholder reference ‘twitter.consumer.key’ in property definitions</p>
<p class="cye-lm-tag"><em>Update: I removed the irrelevant part of the stack trace – Petri</em></p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-2" id="comment-1425137"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 20, 2016, 21:57</span></div><div class="comment_text" id="comment-body-1425137"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">How did you create the war file? The reason why I ask this is that Maven should replace the property placeholders found from the properties file with the values found from the profile specific configuration file. However, the error message of the thrown <code>IllegalArgumentException</code> states that this did not happen.</p>
</div> </div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1427299"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">April 23, 2016, 08:29</span></div><div class="comment_text" id="comment-body-1427299"><p class="cye-lm-tag">Dear Petri,</p>
<p class="cye-lm-tag">How should  i create the war file i run it in Intellij Idea  and make the artifact and configure it but this error happened when i select each of AuthServer and RestServer.</p>
</div> </div><ul class="children"><li class="comment even depth-2" id="comment-1427341"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">April 23, 2016, 09:52</span></div><div class="comment_text" id="comment-body-1427341"><p class="cye-lm-tag">ERROR [org.springframework.web.servlet.DispatcherServlet] (MSC service thread 1-3) Context initialization failed: java.lang.IllegalArgumentException<br> at org.springframework.asm.ClassReader.(Unknown Source) [spring-core-3.2.1.RELEASE.jar:3.2.1.RELEASE]<br> at org.springframework.asm.ClassReader.(Unknown Source) [spring-core-3.2.1.RELEASE.jar:3.2.1.RELEASE]<br> at org.springframework.asm.ClassReader.(Unknown Source) [spring-core-3.2.1.RELEASE.jar:3.2.1.RELEASE]</p>
</div> </div></li><li class="comment odd alt depth-2" id="comment-1427491"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">April 23, 2016, 14:33</span></div><div class="comment_text" id="comment-body-1427491"><p class="cye-lm-tag">Dear Petri,</p>
<p class="cye-lm-tag">Can you tell me how to run this project in Intellij Idea and with wildfly application server with screen shot,thank you in advance.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor even depth-3" id="comment-1430127"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 26, 2016, 20:28</span></div><div class="comment_text" id="comment-body-1430127"><p class="cye-lm-tag">I don’t know how you can run this application with IntelliJ Idea and Wildfly because I have never used Wildfly. However, you should be able to run it as long as you have:</p>
<ol><li>Created Facebook and Twitter applications for this application (<a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/README.md#prerequisites" target="_blank" rel="nofollow">Check README</a>).</li><li>Configured the application correctly (<a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/README.md#configuration" target="_blank" rel="nofollow">check README</a>).</li><li>Initialized the MySQL database (<a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/README.md#initializing-the-database" target="_blank" rel="nofollow">check README</a>).</li></ol><p class="cye-lm-tag">Also, keep in mind that you have to create the deployed .war file by running the <em>package</em> Maven goal by using the <em>dev</em> Maven profile. You can configure IntelliJ Idea to invoke a Maven goal before it starts the application server.</p>
</div> </div></li></ul></li></ul></li><li class="comment odd alt thread-even depth-1" id="comment-1429968"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">April 26, 2016, 15:34</span></div><div class="comment_text" id="comment-body-1429968"><p class="cye-lm-tag">Hi Petri,</p>
<p class="cye-lm-tag">Can you tell me this project how to work with Twitter and Facebook.</p>
</div> </div><ul class="children"><li class="comment even depth-2" id="comment-1429980"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">April 26, 2016, 15:47</span></div><div class="comment_text" id="comment-body-1429980"><p class="cye-lm-tag">and i want work this with linkedin and google too.</p>
</div> </div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1430130"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">April 26, 2016, 20:31</span></div><div class="comment_text" id="comment-body-1430130"><p class="cye-lm-tag">Hi Morteza,</p>
<p class="cye-lm-tag">The example application should work with Facebook and Twitter as long as you have configured it properly (<a href="/programming/spring-framework/adding-social-sign-in-to-a-spring-mvc-web-application-configuration/#comment-1430127" rel="nofollow">check my previous comment</a>).</p>
<p class="cye-lm-tag">These projects provide support for Google and LinkedIn:</p>
<ul><li><a href="https://github.com/GabiAxel/spring-social-google" target="_blank" rel="nofollow">Spring Social Google</a></li><li><a href="http://projects.spring.io/spring-social-linkedin/" target="_blank" rel="nofollow">Spring Social LinkedIn</a></li></ul><p class="cye-lm-tag">The example application doesn’t support them at the moment. This means that you have to make some minor configuration changes to the application. These changes are explained in the reference manuals of these projects. Also, you need to add the sign in links to the login page and add the new providers to the <a href="https://github.com/pkainulainen/spring-social-examples/blob/master/sign-in/spring-mvc-normal/src/main/java/net/petrikainulainen/spring/social/signinmvc/user/model/SocialMediaService.java" target="_blank" rel="nofollow"><code>SocialMediaService</code></a> enum.</p>
</div> </div><ul class="children"><li class="comment even depth-3" id="comment-1432715"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">April 30, 2016, 07:54</span></div><div class="comment_text" id="comment-body-1432715"><p class="cye-lm-tag">Dear Petri,</p>
<p class="cye-lm-tag">I have this error when click the link of facebook (Invalid App ID: foo) and this error when i click the link of twitter</p>
<p class="cye-lm-tag">org.springframework.web.client.HttpClientErrorException: 401 Authorization Required<br> org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:91)<br> org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)<br> org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)<br> org.springframework.web.client.RestTemplate.execute(RestTemplate.java:504)<br> org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:449)<br> org.springframework.social.oauth1.OAuth1Template.exchangeForToken(OAuth1Template.java:187)<br> org.springframework.social.oauth1.OAuth1Template.fetchRequestToken(OAuth1Template.java:115)</p>
<p class="cye-lm-tag">what i have to do and i configure the Twitter as you said.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-4" id="comment-1435778"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 4, 2016, 22:17</span></div><div class="comment_text" id="comment-body-1435778"><p class="cye-lm-tag">Did you create your own Facebook and Twitter applications? The error messages suggest that the configuration file (<em>socialConfig.properties</em>) which should contain the real API credentials provided by Facebook and Twitter contains my placeholders (foo and bar).</p>
</div> </div><ul class="children"><li class="comment even depth-5" id="comment-1437408"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">May 7, 2016, 10:13</span></div><div class="comment_text" id="comment-body-1437408"><p class="cye-lm-tag">Yes,I create my own Twitter applications and above error has happened.</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-1443618"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 17, 2016, 19:29</span></div><div class="comment_text" id="comment-body-1443618"><p class="cye-lm-tag">Did you configure the domains that are allowed to access the application?</p>
</div></div></li><li class="comment even depth-5" id="comment-1446411"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">May 23, 2016, 11:38</span></div><div class="comment_text" id="comment-body-1446411"><p class="cye-lm-tag">how to configure domainds?</p>
</div></div></li><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-5" id="comment-1446535"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 23, 2016, 18:36</span></div><div class="comment_text" id="comment-body-1446535"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">Unfortunately I don’t remember the details anymore, but if I remember correctly, you should be able to configure the domains in the settings of your Twitter and Facebook applications.</p>
</div></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-1448291"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Hi</span>  <span class="comment_date cye-lm-tag">May 27, 2016, 14:31</span></div><div class="comment_text" id="comment-body-1448291"><p class="cye-lm-tag">Hi,<br> I am P V REDDY.I am Senior Software Engineer.What I have to in our Project is I need authenticate Either Email Id or Phone Number with OTP or 3 Questions and Answers  before Login into the Web application in Spring MVC .<br> I need some reference and also I need some api’s</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1448386"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 27, 2016, 18:54</span></div><div class="comment_text" id="comment-body-1448386"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">I have never used OTP in my Spring applications, but I found a library that <a href="https://github.com/upcrob/spring-security-otp" target="_blank" rel="nofollow">adds OTP support to Spring Security</a>. I think that you should take a look at it.</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-1449714"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Morteza</span>  <span class="comment_date cye-lm-tag">May 30, 2016, 11:43</span></div><div class="comment_text" id="comment-body-1449714"><p class="cye-lm-tag">Dear Petri,</p>
<p class="cye-lm-tag">When i use Google+ and configure with this application and click the button of Google+ redirect me to the page with this error:</p>
<p class="cye-lm-tag"> 400. That’s an error.</p>
<p class="cye-lm-tag">Error: invalid_request</p>
<p class="cye-lm-tag">Missing required parameter: scope</p>
<p class="cye-lm-tag">Learn more</p>
<p class="cye-lm-tag">Request Details<br> That’s all we know.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1449972"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">May 30, 2016, 22:53</span></div><div class="comment_text" id="comment-body-1449972"><p class="cye-lm-tag">Hi,</p>
<p class="cye-lm-tag">It seems that you need to specify the value of the <code>scope</code> parameter. Take a look at <a href="http://stackoverflow.com/a/23767760/313554" target="_blank" rel="nofollow">this StackOverflow answer</a>. It explains how you can the add the <code>scope</code> parameter in your sign in form.</p>
</div> </div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="comment-1491112"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Swapnil</span>  <span class="comment_date cye-lm-tag">September 26, 2016, 08:02</span></div><div class="comment_text" id="comment-body-1491112"><p class="cye-lm-tag">Hi Petri,<br> I am trying to use social login in my current Spring project. I have added the dependencies, but when I build the project, I am not able to see the /connect url mapped logs in the console.</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1491423"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">September 27, 2016, 18:12</span></div><div class="comment_text" id="comment-body-1491423"><p class="cye-lm-tag">Unfortunately it’s impossible to say what is going on without running your code. Do have a sample project that reproduces this problem?</p>
</div> </div></li></ul></li><li class="comment even thread-even depth-1" id="comment-1520656"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Sujit</span>  <span class="comment_date cye-lm-tag">February 5, 2017, 18:14</span></div><div class="comment_text" id="comment-body-1520656"><p class="cye-lm-tag">Superb Post. Thanks a lot</p>
</div> </div><ul class="children"><li class="comment byuser comment-author-petrikainulainen bypostauthor odd alt depth-2" id="comment-1520898"><div class="comment-container"> <div class="comment-byline"> <span class="comment_author cye-lm-tag">Petri</span>  <span class="comment_date cye-lm-tag">February 7, 2017, 17:12</span></div><div class="comment_text" id="comment-body-1520898"><p class="cye-lm-tag">You are welcome.</p>
</div> </div></li></ul></li></ul> </section>
</body>
</html>